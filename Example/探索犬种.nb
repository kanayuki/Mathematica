(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    154004,       2927]
NotebookOptionsPosition[    152294,       2890]
NotebookOutlinePosition[    152720,       2907]
CellTagsIndexPosition[    152677,       2904]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\:63a2\:7d22\:72ac\:79cd", "Title",
 CellChangeTimes->{{3.8655586790078683`*^9, 3.865558679008864*^9}, 
   3.8655588787800875`*^9},ExpressionUUID->"9f2808cd-2f78-4b73-980a-\
a7f837458ae8"],

Cell["\<\
\"DogBreed\" \:5b9e\:4f53\:5305\:62ec 300 \
\:591a\:79cd\:901a\:8fc7\:9009\:62e9\:6027\:80b2\:79cd\:4ea7\:751f\:7684\:9a6f\
\:517b\:72d7\:3002
\:63a2\:7d22\:7279\:5b9a \"DogBreed\" \:5b9e\:4f53\:7684\:5c5e\:6027\:3002\
\>", "Text",
 CellChangeTimes->{{3.8655586887362814`*^9, 3.865558688738263*^9}, {
  3.8655588881671247`*^9, 
  3.865558898049303*^9}},ExpressionUUID->"e336d83d-b800-41c7-86f4-\
4f53a74d7a91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"Entity", "[", 
    RowBox[{"\"\<DogBreed\>\"", ",", "\"\<Chihuahua\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<AlternateNames\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<HairLength\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<HeightFemale\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<HeightMale\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<Image\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<LifeSpan\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<LitterSize\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<MaximumLifeSpan\>\""}], "]"}], 
     ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<MaximumLitterSize\>\""}], "]"}], 
     ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<Name\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<Origin\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<RecognizedBy\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<Shedding\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<Size\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<Temperament\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<WeightFemale\>\""}], "]"}], ",", 
     RowBox[{"EntityProperty", "[", 
      RowBox[{"\"\<DogBreed\>\"", ",", "\"\<WeightMale\>\""}], "]"}]}], "}"}],
    ",", "\"\<Dataset\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8655588245259433`*^9, 3.865558824526909*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"6124dfcf-37a5-4bf2-a6de-f239a2d9e777"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      EntityProperty["DogBreed", "AlternateNames"] -> {
        "Chihuahueno", "Chihuahue\[NTilde]o", "New Yorker"}, 
       EntityProperty["DogBreed", "HairLength"] -> {"long", "short"}, 
       EntityProperty["DogBreed", "HeightFemale"] -> Quantity[
         Interval[{
          15.133242187500000001`2.996947015434412, 
           23.0491015624999999981`3.0035777755079183}], "Centimeters"], 
       EntityProperty["DogBreed", "HeightMale"] -> Quantity[
         Interval[{
          15.133242187500000001`2.996947015434412, 
           23.0491015624999999981`3.0035777755079183}], "Centimeters"], 
       EntityProperty["DogBreed", "Image"] -> Image[CompressedData["
1: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
X4Io8QA+sFgQH+AATPUBYQPj/1WQI8pIjQm8H9yKehDOCiCi44BDCRo4yfB6
WRjYp1oECqsR96qTRIFfgFQgWkJ5g5aRILwiFeqQOkmfemkkCEADPvhUpaBH
BR9TKcBUCj+qSvx/F94gw1SJUIIEVWw1P6qYEkqRptobZxw6VHzhJOtAB/tI
p7LTzT+6W/P82YHjR+U7uqjXrtmuXLY/e3ro93fX/vnn9ps3V/75cOeXXy//
8vv5n345cPmW1t68iSQYU88aRJEMxbL70gXD7J41jf4Sl67SgxC6zLILHU1f
7d/75b5d3x7fd/1A68EW7dm99mun/fv2sqwti8Uu6IlSicp4KAyIKrjSiGAO
AothFT3QmC9HTVcLlyBGF2RlQFVwOYqQOmUoCAYN6rB6Vc/gy6AaFAEF0hDU
AMH0BDmapO1N0UcFrUrU9iRqQwiaHnhNwGgAThPSgPQIcoSQFRTsB9ZwMmi+
UEVA1kP7L00CJG6I5w0SqAF6kNQYMB1AhIAJMTDAIqxaGFEj6l0njgWzACyg
9rHFUGYSFBl4eTpOngJwwXr/4qsShgC+ct7/k6Ao4MQAQSg5QHWwQoQQ/1OF
1iEsdRaWFs/hDG9y5Z07qDqz19Ji4u9uQR59c+DZw6O/vLjy4cOjP999++dv
958//fLRvWs3rpy4/eWZxw+v3blz9M7XBx79eOS7h117j/Kk2lVY+gQifRyi
We51l2qkeQi7sMssOtvqu71/7zcHD317+MDtwztPdVh3+8Sn9mlOHVY1tZaJ
jOOhLMfLE6HWZRhSmMYUuj6Bpo8layKhhIBSAafoiYVZkoXUST7iqxCjAoI1
8h7ADvS/g38VSByhkE1gSnHKyGAhBxBJ2kiUoCbi/5MgOLdBHVqvCgFhAwqE
4jCyBo0PEO0hXEBPQVFk0hT9yPI0giy6TogBiGiQV0AIBYKRaDAURwK7GmGf
WlFMvSSxQZoEvIAa9IlBEZV98fLMjwQ/4gsDfEEDfvRgQIAP1kYgG6KpsFaI
gcQNS71BEs21ZHv2zt5+bGnzjoVW6xyzZkWbA99m5Xe7tVeP77r75bEnDy5+
+P3Zh/+8/fD3b+9f/PztFzdvX71x4/yVr65c/+rK1Ts3r3z1xdk7t0/+9OOl
5y8vnDhlU6i26rWFdnOlTlbIbljjlOAvbPdc3t5ytaP9QnPLzd07v9jffman
5dIR8zdfeC5fVLbu2CY2f8rUZ0N/StOmMQ3pTGMqNJIwXRDxSAjkjl5Yec8G
WSgEjVpxSJUQUy7ClAVUIcFUy4AUUAuBAQAFoaknoI/pA8oAUc96SQRWFoGT
9w64GyJqbwikwQozEEVDA6nw3yQYArEXBP7FKWD9hOOhVJNHAzucMB5KOI5m
BAcZQxIOx7GH4HmDYE+DIKqGEwo1GFQCODTKRQVs1QesVyeOB3xYaSpOlga8
CIosYPdvvw87sbIkqF4gSwYJ/g++HkEBUzBmrSTs41JUhKNVkzKcqIolKBJw
sjhYUfqm0R37l+w9mL+7q/roDumRDvOZ3dvvXDrz7Lsv//ntpw+/v/3wx58f
3v/15NtH546cvXj80sVjV2B75dTl7+/ce3D7zuUzx65fPPr4wZW7t08cOeB0
muhC6tby3FkV62c4+LijbsM+veqE036jq/P2/j3X9rSc3mW5etJ8+aJ6x+4K
rWOuxj9F7BzBMvaDHhkg0rSQ5SGc9iEjMQRlFMx8nTisRhhaLQip5IVAbCnl
Y0oEmFJACTaUBNhJQsCY5QG46OULAjMAkUeIqQYJQmpFveolvVCIgEMZQVRD
HowMBupAX4AqUIoEU1tIAF/PetT4YVC0Q6eDl8TjhckkcV+WarTUOEuknYOn
f1pWO6ySMJTIG0qRZtdz42s5kWRFH+AYqCdBsQ3SeAAELgu6D/CBwHokFWwz
IQnCn+A9geIzPFDA9ArYsCcafgOCPSD4E2RJaC6gMSQo+7CNSVAr1omiSaoU
gFjF6VnN6kEVJSD6iV3tJVDG3Di+48rRQ9dPn33z9PGHv//48Pc/H/74z39+
/fvLizcP7Tx8av/ZU/vOHNt14uLRi9dPX71z5eY31298cf7s+WP7zxzpPg/p
k0/DFebmLpi0belkLbmkXUHrkLEuNnuutLeebfYf8Bj2NSn27eS2tJbLDbPp
iqF863CWaQDUZtDMUnVpdAMohapPhNobwhGcP1xRBS+0nBtSxgktZWNKeJji
AMQAwZ7V0tBA7sAEc0cFF1PORbcVkEd4mGoQN6SW37Ne1BMr6YWmLVmv4F2I
YNcJeQ2WdLBzgZIyWNyiEOWo6xvEYfXCcLBYAy+hghwHZbPGsVRlXE5lz84r
GLJ8ReaGjdlVuBF08TiKaFgNMxEriMGJeoMBgwSh1MfJk4EU4AsmvqCC7ABu
wICxwaYv0EGg2fCjIDNK0EMFjwatH1oIqRJJqgRoP6GDhlaOos5g6DNY+hS6
KoYmjifSUhDFfJ+pfrffcLCj4/qZK+9e/PLbqzd/v/v9/cu3b569ONC1r9O/
/XD3oUNdoAPHdx89ue/YucMnr548e+3UmbOHDuxtb2532Dm12JqNm4qWz69b
v9DMKOtUkf2chjYRbYdS2qGU7XHoTuw0798tcPjyxPopTGRwnTC+QZqIkydC
nUbRptL06dDwwnqDlVkrjqjk9yzn9gR2ZZwwUCk7pJiLEgx4MKRaGobqv8Ub
KiDI+ajKgKo4PWp4oXXCUIAIRIBj4KZBRLDi/cgxgDJYAANKINgQKNc/EuTH
Yrkpxdg4tWW+2b2BwZ27ZduoObMTx4wK++zT8JVrMmrwY+mC8Vh2/zpWfAO/
D2TAQPEZ818PJgcrT6IqHbZBdvAneAP6HqCjiAq0/FHojRdFn6CguYAWA5rE
oPCKJJgf9NYoSJHI0GTQ1Vk4aVKDJIaqjmdp4tnKJLagn1w6y2/DWRQMvURx
6cTl31//9eHvD/+8/+Pd69dPHjyw6Aw6mdJpMFtUepfe3OVrPtjZfWB7105v
4/62tjP79h1ob3OpEUpRXfnqjZWrl5PzlxvIW3yCcqQ2l791VZdCtFOPnN3R
ePmov6ONKtMvpytH1goSyjlR1YKYQL6IQ28yKOJhBgBZlSC8ghdWwupRxOhR
zAwpYYahYoUWc1AblkFQFQO+cFRo+oAw27OKHwqOA2SVbMy/quZgank96gWh
oAZhT6woDCfuRZB+FFEWDiLJI4hAUxYeuFGAFiTQI6D3DSRheHEkQZhAFGTK
DJNburYabRtraiZtLfgsZ824SZ+mZGdiho/ALF+dhqdNAifWs1JrWTHVQqhh
oqCAgYuCAgYrSw4kwfRg5ISX9ZIENEWiTQS6UEGAL9AtxqL34tRxgZtpcR9v
0QTYBXsQkjqdos5kIf0psgyCJJUgT6Fqkpm6JAbShyGLV+rHMGhjTapiet0W
Nh5/68LNV09/efnj6z/evn338ucHd26JWAwOiSjjsPlUilYk8hhMzTbbdper
w+kEdXk8Oz2ebpdH2EDG5xcxiguE1fnS2lwtYbORtNXLrevU8LsMoiPtuh0t
XIFocT19CFacWcGNKudEVvH7VPKiYQBbuHCo38o5EaWsXkX00K0UTAEZA9tC
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
7v4SV1+Jo5/c3VfuSxX7EriuKCAIq1FoHIoY5vK5iy6dcP5078qd8+eP7tx/
/tCZ9y/e/ee3Pz/88deHP//68P73x99+0+K04yvKCnNWF6xaUl+4kVK+BVu4
nlK22aVkX9jbcvXwjharuiJv7daVC3IXTl0z69PildMpJcsdysqz+6UXTvC3
d26T6SZxNUP5tkEMSzpegz67gj7Za4hiGsNRQAYM2IFrwUjcIRIHRmzvIbKG
Sqy9ZPZIpStW7UqT27JFpsF83VCOejhLMYYlH8eRTQDRBeMo3E/IrE+onM/Y
wul86XyhbAlIpVmp0nyuNazUm1eqdYtEypli9VSlcbpMP16kGSFABgp0/cSm
TLk9S+HIVDjSVa5MeKkwfaIyLPz6TsdPj2/89cvPzx7cbPGySA2z6srHEWqm
l2+eVrh2OrMub7uXd+wER+uYS5em8k3xHHNPqhbDMccARCAImNDHmNVxDG0K
GwK4KZNrgm06y5DI0MWij7/qouDaIYoyTQkQQsWuQQrfJ5rmKfq2WYa2ufrW
OdqWGeBEpf9TICvzDgWC4EGld4DSm61szJQ3pUqaksReiKv9hPpRKt38Pd30
E3vNZhlTQqGoeVKnxnZy/wnw4F+/vf/rl7f//Prbf359+/Tet+cOH9zT5t/p
tUHZyaotJpZuZFQVWMTUw622G8d2Hunya4UMGbWeXVtIK9+oYVf6EeLuRta1
E8iZIyx/Y64YGS80jJR6RvBc2Sx7CssSwzZHsE1hEMrABRDK+DYAh5HaQ+TO
XogrRuNO1DhSleYUqTZRpOzLl3wiFM+QyhYplau06o1G3TaLodRurmx0Nvgd
9aAWD7HDz+xs4nX4eG1eVouL1N1M293KaPcRGh01jc6KRneZz7XNYFiFaBZK
5VOE0s/Eik/kmrFK3VilcYzONU5uhMJyqkA279L5xl+ef/fXm1ffXD9nUtXj
a+Y0VEyrK5pRljNbgC/e16S9/9X2lo6tfGQoB0mUOGNRA5rh/OO5lniWIRYw
ob8m0CVzjBmAj2fOgugtsGYJrJlQkHDRGJ7ItyVyrIk8O4TQfhL3UIClaZ4G
7IztC/StC7TNs9SNqA2BrNQDgbS/yJEpdfZFf1DgSpb6U+UtWYqmAVLnCJF+
vMe/5dQx9cp5I1fMnrR6zty8VesI5Q2ISPXom/u/vnz9z6/v/37764d3v334
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
TK9rltsxy2GZZDGN9LrHN3tmu21zrPo5duM8j32OzzMDPt7cMs7v/8zhnOR1
L+/eXn1sn+TEAW1XM8dhrrMZG7x2SrOHu6NVeXC3/che34mDbcDuy0snb148
cevq2S+vnLl5+fTt6+ehmLn7xXlo9q8e23/7/Kknt7+A6vS3509/e/3Tu7cv
f/vlxd/v396+ctmt1Rp5fAWJgtuSX7ZmZfnaVbgtm0mFBYzyEl5tFbemHHo3
iGnMyiKYWErJFhGuWsemQO8A3R9EVMiJrVoFlDEOKc+rEkMgdStFRj5DQqxj
VBaBB2vz10N4BIh5S+ZCBty0aDZ4rWj98vWLZi6dMX7xtHGr509bu3BG7tI5
BasXA0EgDuEX/kda0TYQNI/cylJIixJ8nQBby62t4dbX0ivLG6DcLdpgVpBu
Xez4+fsjt645WtuLrO5lJudcu3+uzT/d6pvk8Y70+kY5XcP15v6IPktnyba4
BkAktDVlQcA0eJPMjemWxr4mb7YZLNP4idM+2euY3eiZ0+SdC1ufaxbI756N
7nQvaPIs8jtByxpdy3325W7rAodpst85q9m1zGv53KFb7jKs8FqW+aGj98xu
9k9v8s3wuec2udfuaK8+skd0+pB+b5ew0U1xWQkeG9ltYbR4xLu2m/btcB7d
237p5IFrZ49dOX3k+oVT186fRH/EdOHU93dufHfr6r0vLj/66vrz+1+/+/HR
H69//vPti99++fmPdy8ghv7x2/Nbl894DUrowqSEemjWti1fBgU/Nn8TtaSQ
VVkGIhdtbcjLwebn1m5aW77u84r1K7BbcsAg0KSbODQwo18pBjO65AIoYwCr
RchCmCQ5BSvAVkEqhCYICEIls+VztInYuHAWhNOyDStKclZA8AR88yaOBo4r
5kzesHhW/krIhsuhfIV+hFK6lVlazCgpYZWV8aurhQ31IE5NLb28glhYVL5h
Xf7yBdV5Kz1a9qPbR/5+c+Ppg+6Tp7itnfl27zKbd77VO93eOM3vndgIHF2f
mU2jdIbhRusou2eUo3GUt32k2ZsN1Yi9ebC7daTNB2lrtMs72WOf67cvbXGv
aPWsbPV8DmianMtBza6Vre41zc41ftvqRtv6ZkdOs2Ojz7LGa10Mf211rGs0
r/fqN/gMOX7TOr95ZYtjeatrSbtnWbtvdYc/f0dzzZFdvPPH9Mf2q7a3cLwO
st1IMCEEt5m7vUm3s816dE/HheMHLp44CB39lTMnoakPEvz2y6sPbn/x7N7X
rx9///75s79eP//77cs/f3v1/v2Lv/569du7Z69ePLh+/lCjRW4SUhEqllSY
X7xy+bblS+o351KKt4EHqSVbgR1s8QWbajeug2a8Ond13eZ14ERubRnkRzUF
Z2RT7UI2GNAm5hh5dC2LHKxkOLVl9IpC8CBUMhBCcxfNWjd38to5k3IWTi9c
vaRw3bL1i2cvmDx22qfDZk8cvXjmhHWLZuWtWAB/KtuwvH7LOlJxPru8lF1e
zqmu4tfWC+txvJp6emkFYVtR6Zq121Ys3bZiUU3+Ci2/4drx1t9/uvbnm/Nf
fKHfuafC7llhcaMEHU3Tm10zmiDo2adZjeON+k/NlnEOz3h34zh/x3ija6DG
1s/RPLJx+yRX0wSr+zOXZ5bPsbTZua7Nk9Pu3QBq86xvca2FPdv9m9o9m1Bq
5pxG6+YWx9Zme4HPvLHRjmJttec0Wzb6jZv8elCOT7+uxbS22bK6w7mhu6lg
R2PxjqbqwzsYF4+rz5/Q7e4S+pwUI1KHSGscBlZHo7azyXJ4Vxv08qAT+3ed
PXbg4qkjl88cgdb++2++eHL/65ePH/z64+N3Pz/9/dVPYEAg+Mcfr/7+zxsg
+OQHsOCeNqfKIqIY2AQxvqZu0/rS1SvqN28gbttCLtoC8RPYEbfl1eSuLV+7
onL9qqqcVZUbVgJEcnE+rXgLt6oE8iMUPAYuDQwIWw2TpKThRfgaNIRu2wT4
PpYxC2cunzp22dSxq2ZNyF06K3/V4pylcxdO/wwIgmAAQPNWLoRAWrp+GRCE
ZgQCKbeynFdbI6zHAkF2RR1pW3HD5vzCFZ9vW7G4eM3CitzFjNqNXW7po1uH
/nh94doVbXtXqcG6xOiYE/Rgo3VOo32uxzzTrJmkQ8YbDOOtjkkA0dc2xegc
prUOcjaNbeuc3dI+x9c02+9b5LUtb7Sta3ECwdzOxs1dTXmw3e7L29G0dbuv
oNm+Gag12ba0OYuabYUe48ZmVy68uc2R22rf2Gza5NPl+jU5IJ96vV+7vsOa
3+0t6faWdXlK9rXXnzrIvXbBdGifrNlL06uqoKGw6qitXnWLRwO9/KmDO4/v
6zy4s+XQ7rZj+ztPH9l19dyRHx7cev743tufHr1/+SPg++PViz9+ff3X72/f
vX/1139++/3PV8+efHPz0vEdfrOWRYTGQU5ugDmv2bSOWJRHLikAF4ACN8c2
lq9fWbx6Wdm6FTAoWbMcBDQJW3KhyBE3VEGFA/SlxDoQOiDVc+vKoRmE/gU8
FcQHDSDgWzZtzIoZn61dMHXzioWbPl+wbPbUGeNGTRgxaM7EsWsWzNj0+XwI
pIXrltRCg1+aRy/fxqos4ddVi7ANgjoss7yKULANyq3S1cvzl8zOWThx89KJ
DduW+nS02+e2Qyq8dAFpbinSGhYYrLMs7qlW70Sfab7fvMBlmGNQTdLIx+s1
E8zmSVbHBF/rdIv7E6NjlLNxYnvn/K7u5e3bP29pXuEyL/OYVvmta8GGXY1b
drVt3dNeDNrZvA0Itjjymmx57e6iTm9Zm7PEY9jU6s5r9WwEe253b2615vq1
a/3IhibNRq8yp1m7pdNS0u0q3+ks7nJv3dW0bV9n7eVzyIkjqp0dPKuhXi4s
NqhwHpvQbREf7G48c2THmSPdh3e3HtjVfHB307ED7RdP773/7bXH33/1+sf7
v7969ueb53/+8ur3t6/e/fbm7a+v/vj7t7//ef/y5ZP7X13b3eyCDlrQUAmp
LXg7hV1TCr0AxEAwAjCFBq1283pgFxTgK1y5BFxQvX4lpTCPV10KTkRLx6pi
Tk0pu7oEPoUtyIW+AALdpiVzgN2KGROWTB6zeNLoJVNGLZoyZvnMzyBmggcX
z5g0ceTgMf8/kt46uu3z/BtW2MzMzGwH7Dh2HCdmZibJYmZmZkuyLFtmmTGc
NE1pbdeuXdd2ZVxp67YOu+233/M87x/v5fac++goPooi3Z/rQ3J0f1Piyguy
mq5d7KmvGmy+Md5ZBwbHmh7go4fF+EkFGaemkUFIBdMYyFqgBhMttVPt16c6
rw03l0x2XjaKJl554Prq/aO33rDv7CIdcw1Od/Xc8uW5lZKd+YZtd+P63C2X
9ZrddNlpu7ywUOFevry2fXVpo2x+tWhxvWxn/8ade223j7v2tzvWFiCTtHkW
2kE8gYD398ceHk49OkICmgfrw7srQ3sro3e20A/3SccezObCCHjc4ebQnZ3h
u1tD+0s9G/a2zZmu/dmRfcfUHTf+4SrlwRrx/hr63gYgOHC0MfL0ofCFZw1P
Hxs2VjhG9ZRFS3DPCtyzknsHC1AG3/jFg5efHjz3aPvJg/UXnmy/8erdLz59
8+sv3v3hu0//+edv/ufvf/qff/71f378+7/+9c9//efH//z33//n//z3Lz98
/83HHz3c2VaSqXoWU0XDg3zBUtAwOg5JRpmGOvDzh2P4/g5Abbjhxkhj7XhL
Hdz236waq68h93eClsKCmMpHjwNrwCKJg13TXc2QW3pvXG27drHhcuGN4uxr
eSlV+anXi1KrizNuXsptv1EBsnnjcjHAl50QBTQET2yrudLXUA3tHhBkIPv4
mEEJcUxJxcALkxFxEK4gUxH620abKskjDWxUC7LrUs+tDBa6/nBZ8usXXS+/
pN3cmphbaF5cu7WwVj67VHCw2nS41ry91LA0e8Nlq3LPVS0vXV9dv7a6cWl5
s3RhLd+1kr++U3n7buvx7e6tjfatlU5Q0Z+FFMTz7u4Y0PDu/ujBZv/eev/O
av+hZ+ThAebZ29T7u4Td5YnjjSmg54ODyXt7owdrXZ7Zpk1H2/784L3l6afb
9Bd2OU+2Kc9s4x7vIe/vDu55unc3px8/Ev/iRdPBjsCsQ/4spIDg9rLp6YPN
11+6Azi+8Hjnyf2N5x/vvPHK/e+/fu/7rz/40zcf//UPX/74w7dQIv77r3/8
939+/N///R/A8cd//PMP33z75fsfPNze0zK48wq1RchmTg0AXkBACJOQRgTY
Kfr4IKgocHCqvXGwDhC8Nd3VBmu06ebgrSpsTzN7vJ81OcCc6GdPDTLG+wiD
7cShDmRnPRSHpvLi2pLcqvyMiuyUK5lJFzMTKvJSrxVmQAcEzexvunGrogwQ
zIqPLMtMrCnLa6m+DAiOdzYQh7tZyEEh9uRrOz8jCOwG56UM9+B6m4CAgCBt
om6svaC/MY1LqPE48Xd3GPfuUqASzi3dWtutgxjjWM6/t193Z7duf6NxZ60R
KgCsbU/D7u6trb2rq5v5rtUM12qmwZZknS3YO2rf2e4Bot3xoI7XpvZWxiGB
PDrC3T9A7np6dze6NlZa97d6AMq7e5OPj/FHG+jbG9iH2+THeyTA9MHRxMF2
t3vu+tJc7Z2dwSdH6OeOSK/eY73xmP/iPcqd7XGAb3+nf31j0L08eP8B7/FD
hWeVY9JgVCL01rIBwuQzx56Xnzl87sHe49ubDw83nnt49NYvn//ms/e+++K9
77/6+IfvPv/7D9/8629/BBChBgKO//jLn/7vv//956+/eefVXx0ue5QMnkUo
NXI5fMwkebgXkryOTddzGHwMEtfXRRkBBPuQHS0DN2v7a2+MNzdBlhhtquu7
WTHRdgMYMdF2nYPu4+MgtzQiu2vH26/311c0VxRVF2ReTk8uSU0qTk6GdTk7
qywjFda1opy2mqt9jbWgnFdyU/MSIyvzM26U5jVXXhxuqR/vaMb0dopwWCkW
Cz1CSyXq6HgZaYqLGqSMdhIGW3H9jQr6hIw2QBy/xiNfX3IM395GH+yOrG83
z61XOteuLO1eXdy9bF/Nu31YcXRw7Wi3dn+rYdfTvLPRvLfdsLdfu3N4eWUn
23VSA5NNc/F2d97B3bb9/V4g1KNdPKy725j7+9hn7uIf3kbt7/YtLtQuumsO
D7ru3x58cHv8wSFqf338zjbu/ibx/hbu8W3skweo3b1W91Ll+kbtgzt9j45H
njmcfPEu4fUnjF88Q354PHmw17970LvkaZ1dbLlzn/TkWcn+Ls9qxCiEEysO
qWdOc39n4dHh2jPHm5BLHx5uPb6zD7Xim0/e//ZTAPGDP379yV++//ofP/we
QPz33//0n3/85d9//8v/+cc///Ltd++++quthWUNV2KRyE0CnhCHBLzYyHHo
zhomVYBFkYf7YREGegBBIOBQ3a2RhnpYwMeemoqhhsrumou9tRdhV6nj7Zj+
enRf3VBTRWdNSd2lbKBbeU7qpcyUouSE7Nio8tycizlZJZmppVlpVcW5t64U
3biYX5Gflh0bUpYRDw9uulo21FyHhMQ70McYn5BhiSo8RUsl6xkEBQXFQw+Q
hlunu2+Nt1ZLyCMGEVIr7HMaQd8m9zb6VpZvOpcvm92F5sX8WU+Ja7PUsZa/
f5C/f1hysFe+u1O1s1WzvXNjd//63vHV3ePild2U+Y2Yha0EkyvK6k7dvXtr
56D19u7go0P0M8fYR8eYh7fRD++h7hyP7Ox0mMxFlpmirZ16sMvD/Z4dT6dn
qfP+AerRIfbuzsTTR9NPnx1f27o+6y5e36zc36+/c9BxtN1+f7f/xQfTLz5B
P74/fHjUsX3Y6lq/YZ6/tnU0/PQF7oP7ApcTrRANQq1wO/h766a9dcvx1tzT
+9sPjzz3Dz1vv/7ilx+887sP3/3qEwDxoz98/cUPf/jm73/+w49//dOPf/3z
//7rH//+4S9/+/0ffvvL11fssyaxYkamtIh40MEpI30gm6CfYsI0kBFU9OcY
A1kUrBDEc+BW9U+fTl/tuHa5s+pKw8XC+rL83puV4203JztvTvc29NZXtF4H
dNIr8uMvZcWWZkYXp0cWpUVVFWdXl+TB7dWCDMCrpjTn1uWCW5fzynOTruQk
1pZkgWnC80D7YKFGJUSsls4y0NkmFsvIoqjpODFhlDHZTRhsxg02SmkjRvGk
VTm04hzd8wxvrbUuLV+fmS8zLRSb3cUzyyWO9VLnRunaToJnN9Wzk7O6kbfq
KfLslG0flG0dF3mO0pYPYt27Ee69aN1cgHo2zHN0afPgxt5W6/HOwP3D0ROi
3Zu4d290Z6dtYfma2pCm1Ce5lss8OzUbW7XLKzUrS3WP7o7dPxzZXm+7e6fn
/jNd82slMwuZYK/L66U7W9Xry1c3lq8f77U8ut8LPrt1cGNtr9rlqTDMFc+v
37r/FPfkOfbaKkar7FVJh6x6/Oay3ONWri1o7u67b++47x2uvfOrFz55581P
3/nN5++/+7uP3v/6848BxL98/+3f//w9rP/7nx//8f0f//6H7wHBeZPFKlPb
FUqbjA/pBbIoeBm4IX3i5Hd8tPFeKAXga5NtUMHqx1tuQTFvrShtu1rWUl7a
eLm0tijvemFW/aXCjuor/XXVQy219eVFEFdK06MyYnySws6mx3gVpgVdzosp
z0++Bv29NPNacXplARhiSu3FnPryPAg2FXmJEFYHGq7CQnbXSSnTM2KuQyyb
l6rnpQq7gKNnU5TUaTFxTIAfElNGtPwJo2TEpu1fdQ1uQIRYr/Ps3LS6L84s
XYZlWSy1rZTObVxxbwYt74QtbcY6V6Pn1hKWdjI8x9kbd9JdW8GuXf/Fw8DF
43C166zUfn75KGf7bqVn8/r2VtP+XtvtOz0PHg7evt+9slVtnctXmxPEmhCL
K3Vpq3h9t3x1q2JlrfLOvY6trTqns2zVc2Xz6KpjJX1mNXVpN3duLWPZUzi3
kO2ay/WsX9rdr/LsVcBfdG0WurZL9O5s43zh9p3Oh89iNncmLZZumaRNIe5b
dLKX54VzM7wVF1R+w+29hTdffeb9N3/54a/f/PgExN9+8fEH33752Z+++/pv
f/zj3//0p//98UcgIID43mu/+glBpUOpdKnEGgYW0gikBYgo2J5GfF8rabBt
urNhoqXmJMO31UIR66gsbryY1/hTO6i9mHerLK+2LP96cc6N0oKG8kuNV69c
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
leXh7f0+99Z1y1Ku1ZMhcYSyDT4cUwBd603T+0hmI06+pLlw8tUP1dIp7epZ
3do5uNWsndaun9F5TqtWEOrVU3rPBeXSWb4NaHhKueijc/vqFvzl9guGpXCL
J8GwFmvbSTFtxsoWfGULXpoVX9NmoGkjQOX2EjvOCaxn+MbzILBM/Vmy9gzP
EcidC2BYLvBmvDnGM1w9Qmg5DYoqnwvgWr1OzgHWnJYsRP505mfY3GGxc/dE
7efWmhbXR6zWEbl0SKskPHPP8+B4zbNkWpxXHx+4Hxyuv/Ls3Xff+MXH7775
6QfvfvXZx99//TUg+JOW/vGPv/vqyw/ff/25Z80KGWawjzY1rmLQRAQcVHhU
V1tfbXXTlTJAsL3qcvOVEsj5AGVVfnrT5SJkVwN1rAc/0j7Ueb296XJn89Xu
1urMpIiyonQmCXm8v3K4515e0s1Y2FLZOIPVSmPeojJrcPgq5MiNodZrgy3l
w+3lfU1FvfU5vQ1ZnTdTNPyh41XFM7vWVYtguufmcOO14Yaa4cZb1MkxAeEE
QbtUvTEzt+9aOF6e23cbnr1tfXJfvrwy6F5rXD28aV7NkTkj+TP+PKsPy3Ky
VzTDecl8mHwxUjJ38j/wpa7TABMs2QJCuXTGsOFj3Q1ULJ6WLZzSr/tpV/3E
zrNS13nzRujKvQTnTpjMdg4sT+oIEMz4yl0hYmeA1OUnW/JTLPpo1vxAbzUr
/hLnBfmcH12D4JlOzoUj684zbUEse+DJUer6MydnyBsQAvMpsR2w9mVbvUna
MxjVGeF8NN0YiJOfWbhd5tgu1rryNTNXljzDBkO/Sj7usPCe3N+4f7R6/2h5
e9O6vmrY33A892Dnrdeeff+tl99/+1efvP8OgPiHr74CMv75u+++++xziKmv
PPPIopSj+rrHu1o4WCQXhxppquu5dX2ivaGt+krL1bLBptqm8uLW6kvNFSWN
V4uIw51zOuHmrNauEbBJqJGB1q622uqrhVlpUXTq5OMH6/fuza+ty2XqUa6w
kSu9SRdeZElLeKpipuCyiNNPRfVQpzu55G46rgE1XNbfltpyMwIzVmrXjG+6
2JtzQspEa399xVRn00Ddjb76G9SpcYNA6FDo9l3LB/NLjzbXdly6O1vq116x
7B2hIAm496+LrDEk9QXAS7oQwrH7kHQIqvGs0BUES7HgJ3KcA4CUi14ggCff
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
         "], "Byte", ColorSpace -> "RGB", ImageResolution -> {72, 72}, 
         Interleaving -> True, 
         MetaInformation -> <|
          "Source" -> "http://www.terrificpets.com/dog_breeds/chihuahua.asp", 
           "URL" -> 
           "http://www.wolframcdn.com/waimage/hset039/9ad/\
9ad806723066e017a7619d3b576cc07c_v005s.jpg"|>], 
       EntityProperty["DogBreed", "LifeSpan"] -> Quantity[
         Interval[{14, 18}], "Years"], 
       EntityProperty["DogBreed", "LitterSize"] -> Interval[{1, 4}], 
       EntityProperty["DogBreed", "MaximumLifeSpan"] -> Quantity[18, "Years"],
        EntityProperty["DogBreed", "MaximumLitterSize"] -> 4, 
       EntityProperty["DogBreed", "Name"] -> "Chihuahua", 
       EntityProperty["DogBreed", "Origin"] -> {
         Entity["Country", "Mexico"]}, 
       EntityProperty[
        "DogBreed", "RecognizedBy"] -> {{"Continental Kennel Club", "CKC"}, {
         "F\[EAcute]d\[EAcute]ration Cynologique Internationale", "FCI"}, {
         "American Kennel Club", "AKC"}, {"United Kennel Club", "UKC"}, {
         "Australian National Kennel Council", "ANKC"}, {
         "National Kennel Club", "NKC"}, {
         "New Zealand Kennel Club", "NZKC"}, {
         "America's Pet Registry Inc.", "APRI"}, {
         "American Canine Registry", "ACR"}}, 
       EntityProperty["DogBreed", "Shedding"] -> {"moderate"}, 
       EntityProperty["DogBreed", "Size"] -> {"toy", "small"}, 
       EntityProperty["DogBreed", "Temperament"] -> {
        "affectionate", "aggressive", "alert", "courageous", "gentle", 
         "intelligent", "loyal"}, EntityProperty["DogBreed", "WeightFemale"] -> 
       Quantity[
         Interval[{
          1.3491927648046875`2.9962870082902957, 
           2.7447229103906249999`3.0036815164705253}], "Kilograms"], 
       EntityProperty["DogBreed", "WeightMale"] -> Quantity[
         Interval[{
          1.3491927648046875`2.9962870082902957, 
           2.7447229103906249999`3.0036815164705253}], "Kilograms"]|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 17, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 17], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 17, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 17], 
     "Path" -> {}, "DisplayedRowCount" -> 17, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 17, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Alternate Names\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "AlternateNames"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Chihuahueno", "Chihuahue\[NTilde]o", "New Yorker"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"Chihuahueno", "Chihuahue\[NTilde]o", "New Yorker"},
                     ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["DogBreed", "AlternateNames"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "AlternateNames"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Hair Length\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "HairLength"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"long", "short"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"long", "short"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["DogBreed", "HairLength"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "HairLength"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Height Female\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "HeightFemale"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  InterpretationBox[
                   
                   RowBox[{
                    "(", "\[InvisibleSpace]", 
                    "15.133242187500000001`2.996947015434412", 
                    StyleBox["\"to\"", FontSize -> Inherited - 2], 
                    "23.0491015624999999981`3.0035777755079183", 
                    "\[InvisibleSpace]", ")"}], 
                   
                   Interval[{
                    15.133242187500000001`2.996947015434412, 
                    23.0491015624999999981`3.0035777755079183}], Selectable -> 
                   False], "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "HeightFemale"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Height Male\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "HeightMale"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  InterpretationBox[
                   
                   RowBox[{
                    "(", "\[InvisibleSpace]", 
                    "15.133242187500000001`2.996947015434412", 
                    StyleBox["\"to\"", FontSize -> Inherited - 2], 
                    "23.0491015624999999981`3.0035777755079183", 
                    "\[InvisibleSpace]", ")"}], 
                   
                   Interval[{
                    15.133242187500000001`2.996947015434412, 
                    23.0491015624999999981`3.0035777755079183}], Selectable -> 
                   False], "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "HeightMale"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Image\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "Image"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              RawBoxes[
               TemplateBox[{"\"  \"", 
                 GraphicsBox[
                  TagBox[
                   RasterBox[CompressedData["
1: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
B6L6YUY9TXu6Duw+sWdb866a3tYD2DNt9JFe/tiolIg08gg6LoGDG13y2J59
+/rqZYHB3qCb3KB3lXtnC6zuTL0j2eJPMk9FW4Nx9ukMd7A8ML15KrjR46v0
+jYGg3WBwC6Pe6vHXelz13uce6andwRmqry+hr9cFZ6fF1sNY9Ne/trFybs3
zj969cbbD29/8ParH7xx5+7ahY9eu/e3z5/885efnn7yxC5TAwODpO5OARYt
JxMEOKQAO6oCCE4pf9EMLdn0Czb9nFWn4wBM9OB4b3vPkX29zft7ju5vqq85
dahh8OQRcv9p3tgoDzmkoOAhFk0BUADkwFm/9umTKzPz/Xb/Hmdgx+x0ncu1
wT653jdf5ZzOd82WuKYr/f6GeX/rQuDYrK953n98zndyztM54zo162medXUG
bJ2z7uNLwaaFYPu1C/yb10zTPpZ3gnNu3vbytQsPb11/7c7Nt+7f/uz9R99/
9vG/f/rb7//48ffff/zo8X2vTsxFDyNPHGOjRmAAgz34rpPEnnYJEWPhgV61
ZFIhhFNJARCY6AFUxzFYb/1HDwy3Hz24o/rI7tq+44dw3W1s9JAIi5WRKGIC
iTowNHDssEFE+sd3Dx8+1E36j3hmG+fcB9y2eputdmpmp2Oqamq+bn75QNDX
Mu/tOjfTe262//zs0Jy7b94zPOsanPd1LXp6Zm0908aueXv3xQDqyjzh/i3j
0qzAqMHPeLXXry699Nz5F1dXXrv3wreff/jP77/57afv//WPH//9n18+/uAB
zEhKHqP0d8G7YiIHyP1d2M4TMGBewrERNZ0EsahqkMwZG8Z0tnYf2dvaUHN8
T21P66EDO2oaaqrOHD2A7GxhonolhDElFeCisdiOtv6WBurI0cf3Vl57YDFP
HJic2rngPuq27LOb631TDe5grX9258VLp2an2oLOtpWZ3tUV5IX5oQV/3+UF
/PIU6uxM/4W5vjn7yQVL32UvcTVIuDjds3aR9vya1qzDOkzs1fP+V166dO1S
4JVbF59++s7P333+z5+///XXZ//419+/+vSJW60RE8ZAVK+KQWShB2EJjZxo
HjnRMtBykNzTzsMMsdEDwEjPSNuRtsbtB7dW7d1cdqCu8nTzvt1bNm4uzT++
b+fQqSMM1BkxaVROHWeODmI7m/E9+3uPbVxyc64/L3J6m52B7ReXDy9NH52d
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
Uolpt85dz1EXcbSF/x+9KOKu
                    "], {{0, 42.}, {70., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> {72, 72}], 
                   BoxForm`ImageTag[
                   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    MetaInformation -> <|
                    "Source" -> 
                    "http://www.terrificpets.com/dog_breeds/chihuahua.asp", 
                    "URL" -> 
                    "http://www.wolframcdn.com/waimage/hset039/9ad/\
9ad806723066e017a7619d3b576cc07c_v005s.jpg"|>], Selectable -> False], 
                  DefaultBaseStyle -> "ImageGraphics", 
                  ImageSizeRaw -> {70., 42.}, 
                  PlotRange -> {{0, 70.}, {0, 42.}}]}, "RowDefault"]], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Life Span\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "LifeSpan"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  InterpretationBox[
                   RowBox[{"(", "\[InvisibleSpace]", "14", 
                    StyleBox["\"to\"", FontSize -> Inherited - 2], "18", 
                    "\[InvisibleSpace]", ")"}], 
                   Interval[{14, 18}], Selectable -> False], "\"yr\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "LifeSpan"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Litter Size\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "LitterSize"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"Interval", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "4"}], "}"}], "]"}], FontFamily -> 
                 Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "LitterSize"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Maximum Life Span\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "MaximumLifeSpan"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"18", "\"yr\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "MaximumLifeSpan"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Maximum Litter Size\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "MaximumLitterSize"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "MaximumLitterSize"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "Name"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Chihuahua", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "Name"]]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Origin\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "Origin"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Country", "Mexico"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Country", "Mexico"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["DogBreed", "Origin"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "Origin"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Recognized By\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "RecognizedBy"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 9], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 9], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["DogBreed", "RecognizedBy"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "RecognizedBy"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Shedding\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "Shedding"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"moderate"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"moderate"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["DogBreed", "Shedding"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "Shedding"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Size\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "Size"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"toy", "small"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"toy", "small"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["DogBreed", "Size"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "Size"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Temperament\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "Temperament"]]}, "Item", False],
                "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"affectionate", "aggressive", "alert", "courageous", 
                    "gentle", "intelligent", "loyal"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"affectionate", "aggressive", "alert", "courageous",
                     "gentle", "intelligent", "loyal"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["DogBreed", "Temperament"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "Temperament"]]}, "Item", False],
                "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Weight Female\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "WeightFemale"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  InterpretationBox[
                   
                   RowBox[{
                    "(", "\[InvisibleSpace]", 
                    "1.3491927648046875`2.9962870082902957", 
                    StyleBox["\"to\"", FontSize -> Inherited - 2], 
                    "2.7447229103906249999`3.0036815164705253", 
                    "\[InvisibleSpace]", ")"}], 
                   
                   Interval[{
                    1.3491927648046875`2.9962870082902957, 
                    2.7447229103906249999`3.0036815164705253}], Selectable -> 
                   False], "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "WeightFemale"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Weight Male\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "WeightMale"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  InterpretationBox[
                   
                   RowBox[{
                    "(", "\[InvisibleSpace]", 
                    "1.3491927648046875`2.9962870082902957", 
                    StyleBox["\"to\"", FontSize -> Inherited - 2], 
                    "2.7447229103906249999`3.0036815164705253", 
                    "\[InvisibleSpace]", ")"}], 
                   Interval[{
                    1.3491927648046875`2.9962870082902957, 
                    2.7447229103906249999`3.0036815164705253}], Selectable -> 
                   False], "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["DogBreed", "WeightMale"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{537., {252.63403309800196`, 258.36596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{537., {252.63403309800196`, 258.36596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8655588712300014`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"fb180947-554e-46cd-9ded-1032c03d7caf"]
}, Open  ]],

Cell["\:6bd4\:8f83\:6240\:6709\:72ac\:79cd\:4e2d\:96c4\:6027\:7684\:9ad8\:5ea6\
\:3002", "Text",
 CellChangeTimes->{{3.865558780062168*^9, 3.8655587800631475`*^9}, 
   3.8655589140272827`*^9},ExpressionUUID->"3e787d7d-9d8f-4e8b-860c-\
43c6e96b8003"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heightmalemean", "=", 
   RowBox[{"EntityValue", "[", 
    RowBox[{"\"\<DogBreed\>\"", ",", "\"\<HeightMaleMean\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8655587853556967`*^9, 3.8655587853577013`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"78ad2d68-1ec2-4dcc-b2fb-00217e4e4c88"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Sort", "[", "heightmalemean", "]"}], ",", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "->", "Automatic"}], ",", 
     RowBox[{"PlotTheme", "->", "\"\<Marketing\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.865558790600878*^9, 3.865558790601838*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"88deab59-243c-42aa-babe-18f38d95dc6b"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[1., 0.4, 0.], PointSize[0.007333333333333334], AbsoluteThickness[
    3], CapForm["Butt"], GeometricTransformationBox[InsetBox[
      FormBox[
       StyleBox[
        GraphicsBox[{
          {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
          {AbsoluteThickness[1.5], Dashing[{}], 
           CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
        StripOnInput->False,
        GraphicsBoxOptions->{DefaultBaseStyle->Directive[
          PointSize[0.007333333333333334], 
          RGBColor[1., 0.4, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[3]]}],
       TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], CompressedData["
1:eJxd2EtslFUUwPHjY0GIi1mwYCH4YXyA8THI+1E45Y1CmbZAsbTwUS1CQZiW
thNrYm5MjIkbJmFh1AVfgq5IdHaSEOMNmLjBZBIXaOLiI7qTxZiIKxbOcM81
uf8vTSa/nJyc3pm595y5KyYuDk0+ISILj4l0/+Rx+f/R2w9Wjl3+qKqBi/Tn
O93nqTXmCrwEXqpDN5Z//NfgWvPTevdavW/xZ+vMmY5dvvVg5e/rzc/Cz2nf
4m7GKxvML+i9hSXf7F2x0bwSfgl+GX4VrsKr4dfhNfBaPf3o2WReB6+HN+iq
3gIXbTZv1PuD3TfoevQmeDO8Bd4K9+l07w3rbDFvg7fDmtrB0o84LDt0Te+5
stXisOxEHJZd+m/363VrXZ/FYdmNOCx7EN+jH3Q/nnsL2yy+N7WDZR/isOxH
fH949dst/kZqB8ubiMNyAPEDtt/U4gdTO1gG9Kvudrr7S4wPaHez3Vj+fL/F
D6V2sNRSK+xgXwvf5/mYP5haB8P+vhrzB3Vfb8P8FPNhGUqtsIM9LMPIhx3s
h7V3nPRN7bD8w6kVdrCH5UjYfzdj/hE7/3ZaPuxhOZpaYQd7WEaQP6K9b+uS
EzEf9iPaO17Hvo35x1Ir7GAPy1t2vu+yfNjBHpZR5I+G8+FazB/VR9vvn5gP
y/HUCrvj4XzYvdvyYRmzfmRW2MEelnHkj+sXn3efTXssfzycH5+a/bj1N7Oc
SK2wgz0sJ5F/0vrlXss/qc/0NvCHZg9LnjqDFc5hBxe5ut/63j/mYr08vLbN
JSyndPiPr7/8sXsOh/qnrL+aFc5hBxewh0tYJlJnsMI57OAC9hPhvJ6J9SfC
eX071n87dQYrnMMOLmAPl7C8Y/OJ9bUMVjiHHVzAHi5hmUR9WOEcdnAxGb6P
C7H+ZDj/v4v1J23+sj4tp1NnsMI57OAC9nB5OvSP0Vj/XZvfYn1Y4Rx2cAF7
uITlDOrDCuewOxP6z8NY/0zoNwNxzoFLWM6mzmCFc9jBBezPhn51NdaHZSp1
NmXzbawP57CDC9jD5VTod/0298m51BmscA67c+F8mTIXsD9n87a5hOV86gxW
OIfd+dBv/4z1z9s8ftDqwyUs76XOYIVz2MEF7OESlguoDyucXwj9/pNYHy5g
D5ewXNRH48+vsT6scA47uID9xTCPrBqw+rDUU1fgrG6/f8xVWOEanMN12MFN
uIBbsK/ryP3Xbr74g7ldD/PQnbjeepiHlh0K7sAynboCZ3AVVrgG59OhH10w
16ft/zY7uAkXcAv2cBsu4Q4sM6krcAZXYYVrcA7XZ8J5uKhm64ebcAG3ZsJ8
tdrs4TZcwh1YLqWuwBlchRWuwTlchx3cvGS/7+P64Rbs4TZcwh1YZlNX4Ayu
wgrX4Hw29Ivrcf2wg5uzdp8R1w+3YA+34RLuwDKXugJncBXWudD/Hsb1w/mc
3Z8M2vphBzfhAm7Bfk798az/7+3m9lzoVwfN5Zx+P3tl6ZMnzJ05u68xy3zq
CpzB1Xm73zHrvN2vmGtwDtfnQ3/qxPXDzfkwLy8dsvXDLdjP2/2LuQ2XcAeW
RupKw+5Thm39Dbs/MVcbdv9hVrjWCOeVHLb1N+x+w1yHHdyEi0b4vJcdsfU3
7H7hqP4HkWNknA==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TooltipBox[
       StyleBox["\"cm\"", ShowStringCharacters -> False], "Centimeters"], 
      TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}, {
     Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
        FormBox["0", TraditionalForm], {0.01, 0.}}, {20., 
        FormBox["20", TraditionalForm], {0.01, 0.}}, {40., 
        FormBox["40", TraditionalForm], {0.01, 0.}}, {60., 
        FormBox["60", TraditionalForm], {0.01, 0.}}, {80., 
        FormBox["80", TraditionalForm], {0.01, 0.}}}, None}, {{{0., 
        FormBox["0", TraditionalForm], {0.01, 0.}}, {100., 
        FormBox["100", TraditionalForm], {0.01, 0.}}, {200., 
        FormBox["200", TraditionalForm], {0.01, 0.}}, {300., 
        FormBox["300", TraditionalForm], {0.01, 0.}}}, None}}],
  FrameTicksStyle->Directive[
    StrokeForm[
     Opacity[0]], FontOpacity -> 1],
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    AbsoluteThickness[1], 
    GrayLevel[0, 0.2]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 379}, {0, 88.9}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Prolog->{
    GrayLevel[0, 0.7], 
    RectangleBox[
     Scaled[{0, 0}], 
     Scaled[{1, 1}]]},
  Ticks->{Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& , 
    Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& }]], "Output",
 CellChangeTimes->{3.865558938112729*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"17ab64fa-bdf9-4091-bf2b-1d508d61e9ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"heightmalemean", ",", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "->", "Automatic"}], ",", 
     RowBox[{"PlotTheme", "->", "\"\<Marketing\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8655587978279524`*^9, 3.865558797828954*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ef10609d-453b-439f-af1b-a041b78ca7f1"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1., 0.52, 0.2], Opacity[0.9], EdgeForm[{Opacity[0.581], 
    Thickness[Small]}], {}, 
    {RGBColor[1., 0.52, 0.2], Opacity[0.9], EdgeForm[{Opacity[0.581], 
     Thickness[Small]}], RectangleBox[{15., 0}, {20., 4.},
      RoundingRadius->0], RectangleBox[{20., 0}, {25., 14.},
      RoundingRadius->0], RectangleBox[{25., 0}, {30., 25.},
      RoundingRadius->0], RectangleBox[{30., 0}, {35., 24.},
      RoundingRadius->0], RectangleBox[{35., 0}, {40., 31.},
      RoundingRadius->0], RectangleBox[{40., 0}, {45., 18.},
      RoundingRadius->0], RectangleBox[{45., 0}, {50., 42.},
      RoundingRadius->0], RectangleBox[{50., 0}, {55., 46.},
      RoundingRadius->0], RectangleBox[{55., 0}, {60., 48.},
      RoundingRadius->0], RectangleBox[{60., 0}, {65., 59.},
      RoundingRadius->0], RectangleBox[{65., 0}, {70., 42.},
      RoundingRadius->0], RectangleBox[{70., 0}, {75., 14.},
      RoundingRadius->0], RectangleBox[{75., 0}, {80., 4.},
      RoundingRadius->0], RectangleBox[{80., 0}, {85., 6.},
      RoundingRadius->0], RectangleBox[{85., 0}, {90., 1.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{None, None},
  AxesLabel->{None, None},
  AxesOrigin->{13.5, 0},
  Frame->True,
  FrameLabel->{{None, None}, {
     FormBox[
      TooltipBox[
       StyleBox["\"cm\"", ShowStringCharacters -> False], "Centimeters"], 
      TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}, {
     Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
        FormBox["0", TraditionalForm], {0.01, 0.}}, {20., 
        FormBox["20", TraditionalForm], {0.01, 0.}}, {40., 
        FormBox["40", TraditionalForm], {0.01, 0.}}, {60., 
        FormBox["60", TraditionalForm], {0.01, 0.}}}, None}, {{{20., 
        FormBox["20", TraditionalForm], {0.01, 0.}}, {40., 
        FormBox["40", TraditionalForm], {0.01, 0.}}, {60., 
        FormBox["60", TraditionalForm], {0.01, 0.}}, {80., 
        FormBox["80", TraditionalForm], {0.01, 0.}}}, None}}],
  FrameTicksStyle->Directive[
    StrokeForm[
     Opacity[0]], FontOpacity -> 1],
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    AbsoluteThickness[1], 
    GrayLevel[0, 0.2]],
  PlotRange->{{15., 90.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Prolog->{
    GrayLevel[0, 0.7], 
    RectangleBox[
     Scaled[{0, 0}], 
     Scaled[{1, 1}]]},
  Ticks->{Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {Identity, Identity}]& }]], "Output",
 CellChangeTimes->{3.8655589460415077`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"1619c6fb-f057-4668-bcd4-845a74329e05"]
}, Open  ]],

Cell["\:6700\:540e\:ff0c\:6839\:636e\:72d7\:7684\:6027\:60c5\:521b\:5efa\:4e00\
\:4e2a\:8bcd\:4e91\:3002", "Text",
 CellChangeTimes->{{3.8655588074147606`*^9, 3.865558807415758*^9}, 
   3.865558951105445*^9},ExpressionUUID->"b4553fe6-5f18-4e1b-bf98-\
55c42609b14c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"EntityValue", "[", 
     RowBox[{"\"\<DogBreed\>\"", ",", " ", "\"\<Temperament\>\""}], "]"}], 
    "]"}], ",", " ", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3E1uE0EQhmGLFUuuwC3YsmQbxAESYSI2RnKQEDfmFk2QCCTzW9XT1VVf
9fdKiZQZT7qeaWXjaPz27tvNl1en0+nh9eO3m9sf76/X258f3zz+8Ony8PX+
cv784fL9fH++vrv787Jff78YY4wxxhhjjOWpFO8JulTKENBSxFDoGyJ2yu9H
yIoQqtj3iBWhU3o7olZkUHSm0Cnd9biJnMJNj1wRGCSviZ7AUBI4BYYyhrNk
cy4jyhjOQidUO4oyhnPKTOKcMvIwt5wzZR7nXt7T1kdnLqcO6j3sgQZxkkkn
YGM4dUosptKG6jzApDNggzDpzMWkMxeTzlxMOnMxK6HeQ1c0ipPQbM4qqffI
VY3irIB6T1zXMBuql3oPXNsoztRvar5sFKdK6j3qseikEzE66USMTjoRo5NO
xOgc1YkNVTihoRonMlTlBJYqnbBQrRMVqnaCQvVOTCiduaA1TkRolRMQSmcu
6CDOSiYclM5cUDrpRITSmQp6hIkEPebEkR51gkAPM0GgDZwI0BZMBGgbZ3ho
I2Z4aTtnbGhDZ2hoS2dkaFNnYGhbZ1xoY2dYaGtnVGhzZ1Boe2dMqIGTUM8s
nBGhJs6AUBsnoW4ZOQn1ysoZDWrmJNQnOyehLhk6CfXI0jkM1Nv2PEsnoQ6Z
Ogntn61zGKi37n+2zjhQY+cwUG/ev4ydYaDWzihQc2cQKJ25oB2cIaB05oLS
mQtKZy5oJ6c7dBBnL6Y3lE46EaF0poL2ZNKZzOkIHdU5P5DiGa35JIujwUOF
TvjnKMVO8AdjxcxG0iDMTScwVOfEfUZ/PsX2WGmce2OBQtVOzE/RmM+wPxUi
tMaJ+Pkvu07JRQDQ+QCSkfCgdU48qJezN3S+uGweNOieU3ZdfGitEw1a7QSD
ztft6OwHXVhWPAkSdM8pvzavEwm6w8ziXFhzSKfq8rjOhRVVUxw1Omzn4uiK
68lcIfZzLolmzjVzvfHJ2cUoYbb9f+D0F3syp9tpxnRAlvXtNGL2gG6uOj0O
69xYdek4qlPHzOhcPpGOufJni+ncWHTtBCJTu51GTmPkBmbzlGJeN5hgjo0J
Dy/QdvraOU7PRomxD/a95I3g9J6EMcYYY4yx3P0G+misnw==
      "], {{0, 232}, {232, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{232, 232},
    PlotRange->{{0, 232}, {0, 232}}], ",", " ", 
   RowBox[{"PlotTheme", " ", "->", " ", "\"\<Marketing\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8655588117226686`*^9, 3.865558811723638*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"20e51c75-5d93-45e4-88cb-8e9cc0722360"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"intelligent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08413461538461539],
     FontColor->RGBColor[1., 0.4, 0.]], {-10.5, -57.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"independent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05309364548494983],
     FontColor->RGBColor[0., 0.786874, 0.739379]], {-24.5, -10.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"affectionate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06563545150501672],
     FontColor->RGBColor[1., 0.656408, 0.]], {-0.5, -109.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"loyal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07974498327759197],
     FontColor->RGBColor[0.655728, 0.8, 0.]], {-27.5, 35.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"gentle\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06500836120401339],
     FontColor->RGBColor[0.893126, 0.4, 0.767184]], {-50.5, 83.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"friendly\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05497491638795987],
     FontColor->RGBColor[1., 0.325204, 0.406504]], {8.5, -149.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"courageous\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.042433110367892976`],
     FontColor->RGBColor[0, 0.7226017980018511, 0.9321946059944466]], {-26.5, -174.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hunting\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04995819397993312],
     FontColor->RGBColor[1., 0.520437, 0.]], {-78.5, 128.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"aggressive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04149247491638796],
     FontColor->RGBColor[0.9325051679959586, 0.4, 0.6687370800101036]], {-86.5, 177.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"alert\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07692307692307693],
     FontColor->RGBColor[0., 0.742291, 0.873126]], {141.5, -157.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"quiet\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05905100334448161],
     FontColor->RGBColor[0.238758, 0.610466, 1.]], {59.5, -197.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"social\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06469481605351171],
     FontColor->RGBColor[0.295048, 0.8, 0.286932]], {-83.5, 213.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"tough\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04400083612040134],
     FontColor->RGBColor[1., 0.06811595600706821, 0.0851449450088353]], {77.5, -231.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"serious\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04776337792642141],
     FontColor->RGBColor[0.7529330319872088, 0.4176501130047967, 1.]], {-65.5, 250.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"aggressive towards other dogs\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01640886287625418],
     FontColor->RGBColor[0.05883371001598903, 0.8, 0.6176328059776153]], {130.5, -260.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"active\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04619565217391304],
     FontColor->RGBColor[0.5572809000084149, 0.8, 0]], {162.5, -196.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"aggressive towards dogs of the same sex\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012646321070234116`],
     FontColor->RGBColor[0.8092822459910736, 0.4, 0.9767943850223162]], {138.5, -273.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reserved towards strangers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.015468227424749166`],
     FontColor->RGBColor[0.6167011199730723, 0.4687370800100979, 1.]], {-69.5, -198.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"aggressive towards other animals\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.013273411371237458`],
     FontColor->RGBColor[0.28174607001935215`, 0.8, 0.305555501972907]], {-74.5, 270.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"responsive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02362040133779264],
     FontColor->RGBColor[1., 0.24644584400975875`, 0.3080573050121984]], {-103.5, 101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"aggressive towards large predators\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.12380943195353211`, 0.6535714630174254, 1.]], {-66.5, 283.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"shy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.042433110367892976`],
     FontColor->RGBColor[1., 0.7154761789941944, 0]], {-117.5, 20.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"not immediately friendly to all\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012646321070234116`],
     FontColor->RGBColor[1., 0.026017980018514186`, 0.03252247502314276]], {181.5, -217.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"aggressive towards strangers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.013273411371237458`],
     FontColor->RGBColor[1., 0.19038988498022036`, 0]], {190.5, -245.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"hardy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030831939799331104`],
     FontColor->RGBColor[0.19660112501052396`, 0.8, 0.42475842498526645`]], {-98.5, -144.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"detached towards strangers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[1., 0.09413393602558245, 0.11766742003197805`]], {-69.5, 149.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"aloof with strangers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01484113712374582],
     FontColor->RGBColor[0.6424258450172573, 0.8, 0]], {56.5, -33.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"cheerful\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0286371237458194],
     FontColor->RGBColor[0.39627325598182783`, 0.5513975290068146, 1.]], {-167.5, 233.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lively\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029264214046822747`],
     FontColor->RGBColor[1., 0.27553482998905565`, 0]], {162.5, -107.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"assertive with other dogs\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[1., 0.3826777560238952, 0.478347195029869]], {175.5, -229.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"shy around strangers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.09135618503913179, 0.8, 0.5721013409452155]], {-19.5, 54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"aggressive worker\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.9504831500294699, 0.8, 0]], {94.5, -284.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"energetic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017035953177257528`],
     FontColor->RGBColor[0.03961347997642406, 0.6851449450088409, 1.]], {-133.5, 42.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"watchful\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.021425585284280936`],
     FontColor->RGBColor[1., 0.5817287629921765, 0]], {93.5, -297.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"even-tempered\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012332775919732442`],
     FontColor->RGBColor[0.4804692079589131, 0.5198240470154076, 1.]], {170.5, -128.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"eager-to-please\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.2291236000336596, 0.8, 0.37922695995287653`]], {-163.5, 249.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"detached\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019544314381270904`],
     FontColor->RGBColor[0.8433402239946134, 0.4, 0.8916494400134667]], {-0.5, -324.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"willful\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025188127090301004`],
     FontColor->RGBColor[0.7801932600117851, 0.8, 0]], {-120.5, -215.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"not aggressive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[1., 0.5622152779782823, 0]], {134.5, -87.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"fun-loving\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01484113712374582],
     FontColor->RGBColor[1., 0.13623191201413648`, 0.1702898900176706]], {-56.5, -210.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"entertaining\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012332775919732442`],
     FontColor->RGBColor[0.14397865502482432`, 0.8, 0.49842988296524593`]], {-60.5, -223.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"passionate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.013900501672240804`],
     FontColor->RGBColor[0, 0.7396307870036196, 0.8811076389891411]], {-64.5, -238.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"unaggressive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.8854381999831616, 0.4, 0.7864045000420958]], {-109.5, -160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"strong-willed\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0, 0.7461352820082482, 0.8615941539752554]], {-177.5, 208.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"obedient\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01766304347826087],
     FontColor->RGBColor[1., 0.05262246998569253, 0]], {84.5, -313.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"dependable\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.5898033750315506, 0.8, 0]], {-123.5, -229.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"self-confident\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012332775919732442`],
     FontColor->RGBColor[0, 0.7566597760053867, 0.8300206719838399]], {165.5, -286.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"stubborn\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017035953177257528`],
     FontColor->RGBColor[1., 0.7981366279909111, 0]], {-19.5, 294.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"sensitive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.016722408026755852`],
     FontColor->RGBColor[0.9876121339937697, 0.4, 0.5309696650155757]], {-128.5, -246.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"protective\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.013273411371237458`],
     FontColor->RGBColor[0.2600413439676686, 0.6024844960121243, 1.]], {-49.5, -89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"inquisitive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012332775919732442`],
     FontColor->RGBColor[0.7275707900260784, 0.8, 0]], {66.5, -89.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"agreeable\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012646321070234116`],
     FontColor->RGBColor[0.5046584300227153, 0.8, 0]], {54.5, 4.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"possessive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[1., 0.020099994962549772`, 0]], {-63.5, -249.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"enthusiastic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012332775919732442`],
     FontColor->RGBColor[1., 0.3281572999747482, 0]], {59.5, -325.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"determined\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012959866220735786`],
     FontColor->RGBColor[0.8653382050206204, 0.8, 0]], {154.5, -298.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"self absorbed\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.9746031439845183, 0.4, 0.5634921400387043]], {-0.5, -337.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"charming\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[1., 0.465924714969276, 0]], {-120.5, -32.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"outgoing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012332775919732442`],
     FontColor->RGBColor[1., 0.20434786802120472`, 0.2554348350265059]], {-141.5, 53.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"adventurous\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[1., 0.10524493997138507`, 0]], {56.5, -336.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"calm\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022052675585284284`],
     FontColor->RGBColor[0, 0.7671842700025252, 0.7984471899924244]], {-139.5, 65.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"amenable\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.013586956521739132`],
     FontColor->RGBColor[1., 0.6643892119888932, 0]], {-65.5, -260.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"submissive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012332775919732442`],
     FontColor->RGBColor[1., 0.6133022449835834, 0]], {-14.5, 305.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"relaxed\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01609531772575251],
     FontColor->RGBColor[1., 0.4133022449835835, 0]], {-170.5, 190.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"docile\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017976588628762544`],
     FontColor->RGBColor[0.4195134850138942, 0.8, 0.11268112098054814`]], {-128.5, -87.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dignified\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0, 0.7291062930064811, 0.9126811209805566]], {-139.5, 78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"vigilant\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012332775919732442`],
     FontColor->RGBColor[0.36689101502818744`, 0.8, 0.18635257896053758`]], {-159.5, -0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"peaceful\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.8303312339853506, 0.4, 0.9241719150366237]], {-61.5, -271.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"territorial\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012332775919732442`],
     FontColor->RGBColor[0.8643892119888847, 0.4, 0.8390269700277884]], {-128.5, -258.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"diligent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[1., 0.6959626939803002, 0]], {-159.5, -13.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"humorous\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[1., 0.27246382402827296`, 0.3405797800353412]], {83.5, -134.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"spunky\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.5646651599360212, 0.48825056502399206`, 1.]], {-62.5, -281.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"spirited\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[1., 0.3807797699604407, 0]], {-123.5, -269.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"dominant\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.9194961779867071, 0.4, 0.7012595550332321]], {-69.5, -293.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"devoted\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.013586956521739132`],
     FontColor->RGBColor[0.8984471899924245, 0.4, 0.7538820250189389]], {-131.5, -280.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"confident\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.7008970719501577, 0.4371635980186909, 1.]], {-11.5, 314.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"laid back\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0, 0.7736887650071538, 0.7789337049785388]], {-62.5, 2.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"playful\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.45203596003702273`, 0.8, 0.06714965594816817]], {-159.5, 10.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reliable\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012959866220735786`],
     FontColor->RGBColor[0, 0.7842132590042923, 0.7473602229871232]], {-71.5, -304.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"steadfast\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[1., 0.1622498920326507, 0.20281236504081335`]], {-129.5, 291.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"feisty\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012959866220735786`],
     FontColor->RGBColor[1., 0.31456180001683837`, 0.3932022500210479]], {51.5, 18.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"proud\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0, 0.7015528100075755, 0.9953415699772734]], {-156.5, -23.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reserved\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[1., 0.778623142977017, 0]], {-0.5, 3.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"curious\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012332775919732442`],
     FontColor->RGBColor[0.9535541559902413, 0.4, 0.6161146100243968]], {-104.5, 228.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tolerant\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[1., 0.644875726974999, 0]], {-132.5, -291.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"fearless\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.34423729594477664`, 0.5709110140207088, 1.]], {213.5, -166.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"goofy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.8127157350349421, 0.8, 0]], {-74.5, -32.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"robust\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012959866220735786`],
     FontColor->RGBColor[1., 0.5306417959868668, 0]], {227.5, -201.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"faithful\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[1., 0.2430123549659129, 0]], {-73.5, -315.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"sweet\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012646321070234116`],
     FontColor->RGBColor[0, 0.712077304004714, 0.9637680879858579]], {-5.5, -134.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"aloof\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.012332775919732442`],
     FontColor->RGBColor[1., 0.7470496609856014, 0]], {-154.5, 25.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"stable\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.6749483200404143, 0.8, 0]], {-126.5, -173.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"brave\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01201923076923077],
     FontColor->RGBColor[0.006211240030296494, 0.8, 0.6913042639575848]], {143.5, -66.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-416., 416.}, {-416., 416.}},
  Prolog->{
    GrayLevel[0, 0.7], 
    RectangleBox[
     Scaled[{0, 0}], 
     Scaled[{1, 1}], RoundingRadius -> Offset[6]]}]], "Output",
 CellChangeTimes->{3.8655589708409824`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"d109b616-465c-42ac-97ef-e9696f2af315"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{569.25, 624.75},
WindowMargins->{{Automatic, 371.25}, {-218.25, Automatic}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (2022\:5e742\:67084\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"740654b2-2ec2-4312-bc07-e856cbdcc59d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 194, 3, 98, "Title",ExpressionUUID->"9f2808cd-2f78-4b73-980a-a7f837458ae8"],
Cell[777, 27, 420, 9, 58, "Text",ExpressionUUID->"e336d83d-b800-41c7-86f4-4f53a74d7a91"],
Cell[CellGroupData[{
Cell[1222, 40, 2311, 45, 643, "Input",ExpressionUUID->"6124dfcf-37a5-4bf2-a6de-f239a2d9e777"],
Cell[3536, 87, 115677, 2039, 530, "Output",ExpressionUUID->"fb180947-554e-46cd-9ded-1032c03d7caf"]
}, Open  ]],
Cell[119228, 2129, 249, 4, 35, "Text",ExpressionUUID->"3e787d7d-9d8f-4e8b-860c-43c6e96b8003"],
Cell[119480, 2135, 331, 7, 43, "Input",ExpressionUUID->"78ad2d68-1ec2-4dcc-b2fb-00217e4e4c88"],
Cell[CellGroupData[{
Cell[119836, 2146, 476, 11, 114, "Input",ExpressionUUID->"88deab59-243c-42aa-babe-18f38d95dc6b"],
Cell[120315, 2159, 4858, 109, 234, "Output",ExpressionUUID->"17ab64fa-bdf9-4091-bf2b-1d508d61e9ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125210, 2273, 447, 10, 114, "Input",ExpressionUUID->"ef10609d-453b-439f-af1b-a041b78ca7f1"],
Cell[125660, 2285, 3142, 70, 262, "Output",ExpressionUUID->"1619c6fb-f057-4668-bcd4-845a74329e05"]
}, Open  ]],
Cell[128817, 2358, 265, 4, 35, "Text",ExpressionUUID->"b4553fe6-5f18-4e1b-bf98-55c42609b14c"],
Cell[CellGroupData[{
Cell[129107, 2366, 1943, 38, 135, "Input",ExpressionUUID->"20e51c75-5d93-45e4-88cb-8e9cc0722360"],
Cell[131053, 2406, 21213, 480, 400, "Output",ExpressionUUID->"d109b616-465c-42ac-97ef-e9696f2af315"]
}, Open  ]]
}, Open  ]]
}
]
*)

