(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    566594,       9580]
NotebookOptionsPosition[    564083,       9528]
NotebookOutlinePosition[    564544,       9546]
CellTagsIndexPosition[    564501,       9543]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"PolyhedronData", "[", "\"\<Dodecahedron\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.84483642474959*^9, 3.8448364247505903`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"bcff38ca-1546-44e5-a9cd-1a561a81de0f"],

Cell[BoxData[
 Graphics3DBox[
  GraphicsComplex3DBox[
   NCache[{{-(1 + 2 5^Rational[-1, 2])^Rational[1, 2], 0, Root[
      1 - 20 #^2 + 80 #^4& , 3, 0]}, {(1 + 2 5^Rational[-1, 2])^
      Rational[1, 2], 0, Root[1 - 20 #^2 + 80 #^4& , 2, 0]}, {
     Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
      Rational[1, 4] (-3 - 5^Rational[1, 2]), Root[
      1 - 20 #^2 + 80 #^4& , 3, 0]}, {
     Root[1 - 20 #^2 + 80 #^4& , 1, 0], Rational[1, 4] (3 + 5^Rational[1, 2]),
       Root[1 - 20 #^2 + 80 #^4& , 3, 0]}, {(Rational[5, 8] + 
       Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
      Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
      1 - 20 #^2 + 80 #^4& , 3, 0]}, {(Rational[5, 8] + 
       Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
      Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
      1 - 20 #^2 + 80 #^4& , 3, 0]}, {
     Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
      Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
       Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
     Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
      Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
       Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
     Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
      Rational[-1, 2], Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
     Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[1, 2],
       Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 4] + 
       Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
      Rational[-1, 2], (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
      Rational[1, 2]}, {(Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
      Rational[1, 2], Rational[
      1, 2], (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
      Rational[1, 2]}, {(Rational[1, 10] (5 + 5^Rational[1, 2]))^
      Rational[1, 2], 0, Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
     Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
      Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
      1 - 20 #^2 + 80 #^4& , 2, 0]}, {
     Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
      Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
      1 - 20 #^2 + 80 #^4& , 2, 0]}, {
     Root[1 - 5 #^2 + 5 #^4& , 1, 0], 
      0, (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
      Rational[1, 2]}, {
     Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
      Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
      1 - 100 #^2 + 80 #^4& , 1, 0]}, {
     Root[1 - 20 #^2 + 80 #^4& , 3, 0], Rational[1, 4] (1 + 5^Rational[1, 2]),
       Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 8] + 
       Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
      Rational[1, 4] (-3 - 5^Rational[1, 2]), Root[
      1 - 20 #^2 + 80 #^4& , 2, 0]}, {(Rational[1, 8] + 
       Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
      Rational[1, 4] (3 + 5^Rational[1, 2]), Root[
      1 - 20 #^2 + 80 #^4& , 2, 0]}}, {{-1.3763819204711736`, 0, 
      0.2628655560595668}, {
     1.3763819204711736`, 
      0, -0.2628655560595668}, {-0.42532540417602, -1.3090169943749475`, 
     0.2628655560595668}, {-0.42532540417602, 1.3090169943749475`, 
     0.2628655560595668}, {1.1135163644116066`, -0.8090169943749475, 
     0.2628655560595668}, {1.1135163644116066`, 0.8090169943749475, 
     0.2628655560595668}, {-0.2628655560595668, -0.8090169943749475, 
     1.1135163644116066`}, {-0.2628655560595668, 0.8090169943749475, 
     1.1135163644116066`}, {-0.6881909602355868, -0.5, -1.1135163644116066`}, \
{-0.6881909602355868, 0.5, -1.1135163644116066`}, {0.6881909602355868, -0.5, 
     1.1135163644116066`}, {0.6881909602355868, 0.5, 1.1135163644116066`}, {
     0.85065080835204, 
      0, -1.1135163644116066`}, {-1.1135163644116066`, -0.8090169943749475, \
-0.2628655560595668}, {-1.1135163644116066`, 
     0.8090169943749475, -0.2628655560595668}, {-0.85065080835204, 0, 
      1.1135163644116066`}, {
     0.2628655560595668, -0.8090169943749475, -1.1135163644116066`}, {
     0.2628655560595668, 0.8090169943749475, -1.1135163644116066`}, {
     0.42532540417601994`, -1.3090169943749475`, -0.2628655560595668}, {
     0.42532540417601994`, 1.3090169943749475`, -0.2628655560595668}}], 
   Polygon3DBox[{{15, 10, 9, 14, 1}, {2, 6, 12, 11, 5}, {5, 11, 7, 3, 19}, {
    11, 12, 8, 16, 7}, {12, 6, 20, 4, 8}, {6, 2, 13, 18, 20}, {2, 5, 19, 17, 
    13}, {4, 20, 18, 10, 15}, {18, 13, 17, 9, 10}, {17, 19, 3, 14, 9}, {3, 7, 
    16, 1, 14}, {16, 8, 4, 15, 1}}]]]], "Output",
 CellChangeTimes->{3.844836426570897*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"06e79b4b-254a-4a75-b261-08b6896bf4d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolyhedronData", "[", 
  RowBox[{"\"\<Dodecahedron\>\"", ",", "\"\<Net\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.84483642474959*^9, 3.8448364511500053`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"10eed732-b52c-43e2-9a1e-3fa2e7f221a7"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[1, 1, 0.85], EdgeForm[GrayLevel[0]], 
   GraphicsComplexBox[
    NCache[{{Rational[1, 2] (2 + 5^Rational[1, 2]), 0}, {
      Rational[5, 2] + 5^Rational[1, 2], 0}, {
      Rational[7, 2] + 5^Rational[1, 2], 0}, {
      Rational[3, 2] (2 + 5^Rational[1, 2]), 0}, {
      4 + Rational[3, 2] 5^Rational[1, 2], 0}, {
      Rational[1, 4] (3 + 5^Rational[1, 2]), 
       Rational[1, 4] (10 - 2 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (5 + 3 5^Rational[1, 2]), 
       Rational[1, 4] (10 - 2 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (7 + 3 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (11 + 3 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (13 + 5 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (15 + 7 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      0, Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 2] (1 + 5^Rational[1, 2]), 
       Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 2] (3 + 5^Rational[1, 2]), 
       Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
      2 + 5^Rational[1, 2], 
       Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
      3 + 5^Rational[1, 2], 
       Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 2] (7 + 3 5^Rational[1, 2]), 
       Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[3, 2] (3 + 5^Rational[1, 2]), 
       Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (-1 + 5^Rational[1, 2]), 
       Rational[1, 4] (50 + 22 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (3 + 5^Rational[1, 2]), 
       Rational[1, 4] (50 + 22 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (5 + 3 5^Rational[1, 2]), 
       Rational[1, 4] (50 + 22 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[3, 4] (3 + 5^Rational[1, 2]), 
       Rational[1, 4] (50 + 22 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (11 + 5 5^Rational[1, 2]), (Rational[25, 8] + 
        Rational[11, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[5, 4] (3 + 5^Rational[1, 2]), (Rational[25, 8] + 
        Rational[11, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (17 + 7 5^Rational[1, 2]), 
       Rational[1, 4] (50 + 22 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 2], (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 2] (2 + 5^Rational[1, 2]), (5 + 2 5^Rational[1, 2])^
       Rational[1, 2]}, {
      Rational[3, 2] + 5^Rational[1, 2], (5 + 2 5^Rational[1, 2])^
       Rational[1, 2]}, {
      Rational[5, 2] + 5^Rational[1, 2], (5 + 2 5^Rational[1, 2])^
       Rational[1, 2]}, {
      4 + Rational[3, 2] 5^Rational[1, 2], (5 + 2 5^Rational[1, 2])^
       Rational[1, 2]}, {
      3 + 5^Rational[1, 2], (Rational[25, 4] + 
        Rational[5, 2] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 2] (7 + 3 5^Rational[1, 2]), (Rational[25, 4] + 
        Rational[5, 2] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[65, 8] + 
        Rational[29, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (5 + 5^Rational[1, 2]), (Rational[65, 8] + 
        Rational[29, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[3, 4] (1 + 5^Rational[1, 2]), (Rational[65, 8] + 
        Rational[29, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (7 + 3 5^Rational[1, 2]), (Rational[65, 8] + 
        Rational[29, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (13 + 5 5^Rational[1, 2]), (Rational[65, 8] + 
        Rational[29, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{
      2.118033988749895, 0}, {4.73606797749979, 0}, {5.73606797749979, 0}, {
      6.354101966249685, 0}, {7.354101966249685, 0}, {1.3090169943749475`, 
      0.5877852522924731}, {2.9270509831248424`, 0.5877852522924731}, {
      0.8090169943749475, 0.9510565162951535}, {3.4270509831248424`, 
      0.9510565162951535}, {4.427050983124842, 0.9510565162951535}, {
      6.045084971874737, 0.9510565162951535}, {7.663118960624632, 
      0.9510565162951535}, {0, 1.5388417685876268`}, {1.618033988749895, 
      1.5388417685876268`}, {2.618033988749895, 1.5388417685876268`}, {
      4.23606797749979, 1.5388417685876268`}, {5.23606797749979, 
      1.5388417685876268`}, {6.854101966249685, 1.5388417685876268`}, {
      7.854101966249685, 1.5388417685876268`}, {0.30901699437494745`, 
      2.48989828488278}, {1.3090169943749475`, 2.48989828488278}, {
      2.9270509831248424`, 2.48989828488278}, {3.9270509831248424`, 
      2.48989828488278}, {5.545084971874737, 2.48989828488278}, {
      6.545084971874737, 2.48989828488278}, {8.163118960624633, 
      2.48989828488278}, {0.5, 3.0776835371752536`}, {2.118033988749895, 
      3.0776835371752536`}, {3.73606797749979, 3.0776835371752536`}, {
      4.73606797749979, 3.0776835371752536`}, {7.354101966249685, 
      3.0776835371752536`}, {5.23606797749979, 3.440954801177934}, {
      6.854101966249685, 3.440954801177934}, {0.8090169943749475, 
      4.028740053470407}, {1.8090169943749475`, 4.028740053470407}, {
      2.4270509831248424`, 4.028740053470407}, {3.4270509831248424`, 
      4.028740053470407}, {6.045084971874737, 4.028740053470407}}], 
    PolygonBox[{{18, 25, 24, 17, 11}, {32, 24, 25, 33, 38}, {31, 25, 18, 19, 
     26}, {12, 18, 11, 4, 5}, {3, 11, 17, 10, 2}, {16, 17, 24, 30, 23}, {23, 
     22, 15, 9, 16}, {7, 15, 14, 6, 1}, {8, 14, 21, 20, 13}, {27, 21, 28, 35, 
     34}, {36, 28, 22, 29, 37}, {21, 14, 15, 22, 28}}]]}]], "Output",
 CellChangeTimes->{3.844836452454388*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"afd92aca-e96e-45fd-9f18-959a4fbed0d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolyhedronData", "[", "\"\<Cube\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.84483642474959*^9, 3.844836485938*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"457d2d5c-4215-4da2-b500-15e19b5f1485"],

Cell[BoxData[
 Graphics3DBox[
  GraphicsComplex3DBox[
   NCache[{{Rational[-1, 2], Rational[-1, 2], Rational[-1, 2]}, {
     Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}, {
     Rational[-1, 2], Rational[1, 2], Rational[-1, 2]}, {
     Rational[-1, 2], Rational[1, 2], Rational[1, 2]}, {
     Rational[1, 2], Rational[-1, 2], Rational[-1, 2]}, {
     Rational[1, 2], Rational[-1, 2], Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {
     Rational[1, 2], Rational[1, 2], Rational[
      1, 2]}}, {{-0.5, -0.5, -0.5}, {-0.5, -0.5, 0.5}, {-0.5, 
    0.5, -0.5}, {-0.5, 0.5, 0.5}, {0.5, -0.5, -0.5}, {0.5, -0.5, 0.5}, {0.5, 
    0.5, -0.5}, {0.5, 0.5, 0.5}}], 
   Polygon3DBox[{{8, 4, 2, 6}, {8, 6, 5, 7}, {8, 7, 3, 4}, {4, 3, 1, 2}, {1, 
    3, 7, 5}, {2, 1, 5, 6}}]],
  ImageSize->{289.77025285397974`, 325.9992640306354},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.5845680237738082, -3.0461234194879956`, 1.3525577025871922`},
  ViewVertical->{0.01271850873354128, -0.22113504755691152`, 
   0.9751602587665257}]], "Output",
 CellChangeTimes->{3.844836487093981*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"87544e3c-e956-4683-a71f-c89d28849482"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SphericalPlot3D", "[", 
    RowBox[{"1.25", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"PolyhedronData", "[", 
       RowBox[{"\"\<Dodecahedron\>\"", ",", "\"\<RegionFunction\>\""}], 
       "]"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
      RowBox[{"PolyhedronData", "[", 
       RowBox[{"\"\<Dodecahedron\>\"", ",", "\"\<GraphicsComplex\>\""}], 
       "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.844836557076597*^9, 3.844836780409626*^9}, {
  3.84483683258262*^9, 3.844836889495396*^9}, {3.844836976422825*^9, 
  3.8448370083000817`*^9}, {3.8448371195878267`*^9, 3.844837147637132*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"73f15aab-80cb-4104-9c9d-828098899509"],

Cell[BoxData[
 Graphics3DBox[{{{GraphicsComplex3DBox[CompressedData["
1:eJxlXXdcz18XJyGEMitJVkKR7KSb3U9GMgqhREiSaKkQISSrZaQ0iMgOrVNJ
W0t7770jCXk+3+7I1/P80+s5z33OPfN9zz33fL4m7j2quV+gT58+6YJ9+vTj
/sb//sP9px0pReyc3prurTLoeC48H+6qLKMRev7B6XYkOM1TYMIObxWj/CZ9
pc9pkOp3ov2bYBs6m5Z5/t03L5UoKZ9BnTtKwemp/cmvq5qRcvWmR3OPeqis
MvpQ49BSA2YLzXdfaqlBc80Huk2wclM5o+glya2Dw1G77VdaVqE8+9eK63wz
kT2mo+60xAfrb7Si1DlVo53rS5AJ3hdVfBz/irfvXJdusR87ShGVs7/rwiV7
xYuRrPvNId6nyxmfrnu/TLn90aeZh3J4/52uFybr5ch6Kk9c3TqVxdw+Ac62
rjy96fq0nF31HTvSUP4QkcHWAu2I2uHownmBdYNSkW66WwtPXmqHpy8zd3Rk
JqKQD2WhSrZNiNph9t3LQ6IVY1CJfsodc40atu/y/bnVMYoxsGrqgGM8OpU/
5a5U64/MRDiQbOPA46OG+aCU6I3QMCgVvmcZpPP2jcb7ItCvmfZjRxpU3tlX
e5KTk9rN43Kurr54MWC9eu0zT6nHL3Ce/Heqrw9Z/5ysp3ImP+rxO9D96HrZ
radLOTmg7xHtobc4f1H73M7LyeT8C7+7NUvWcv6lfOi+sTvMRa6evatM5RF4
0RM/cC9qo8Rl9ECZ6kv39Xj6PkW/xEeZ7r9Bsyc+4Xjucq0xZ/2Uqb59ev7z
FbB8D5WpnJQP9dO/8ncb9cgP/8rfheUHKv99Yp8n2D5A5Z9P9DpL1lH+vmT9
M7Ke8tlK/L4S+53xqSJ+N8B+B2qHQuL3Dux35odkfr8DtcO0xOuXlnB6FA77
eYJnJyrPcxLnT3GcM/p7EueFOM6ZHbRJnOvhOGf2O0/iPAzHOdA4FyFxXobj
nOn7zQXn3Wycd0zfRpKnqThPmTw/yfq5ZD3lY0Bw4yvGDcbnJ8GNSowbzA4l
BDfUMG7Av/im/Ea4H4dv4f/im8LwJRc4fAv/F99W3+vrz+Fb+L/4ttflFg/f
wqmcEglSToZQgW5GlrrMaY1Ch72rlyo1t6DWzWmeRj4lyCBUROfapTxG/1I5
aL3I+Cp0PyB64FVvzq/9ShM+qTWgxFteW57bN6JnHxSMll+uRhqy4qrjjfLQ
yX6PTqnotqOa4kZBlxdpSKFJyUykLhKmvdK2TC5uR2KGHsq+b7xVKF2ayONG
5DmE9wW19942AmqVaM/UFJknA51VKL0qf6vmHYt0lDVxXpmNXDmTs1/c4Jh7
I5uRn/yfz/viatB8zB8ZDPsYOxCVokSXxe++VrcyeTqIvkeIvpS/cajp7/VX
ctCla3mOQda1KAHrC/Vk33yyL10vsfeb3Xcu3leISY/q4PxD/Th5zcATvnol
qDl4e42YQCtaj+0DaNJxz/WT89HJ7Sf7Ssk3MBwOmxHA6WkfLhyM9ab83xH6
AEKn+tq/H3n8rkU6NDx8du9vOyQFH8oUQqXwpkTdnKcvtcPSdYWuE6wuhl9c
jOOCxoPFmw/9jviUgK6SnZ7TX36vcJlnu/FKDpyXO67AswP1+yYL2RN+eiUw
0e7ZE55e1O+lGz1v8HBquLNfJC/e2fl4yu+Mx8hmqLvXp0Kf8wu1/2UifyuR
n+o7wCc9jYs3uD1phZ4jF2/U/jZEzgNETro+6U67Jxdv8GrjzrCbXLxRfS8V
Ffd/Yd8Idg2NV5dx8UntP70q5iUXb6BzonvK7L/ibTKhaxE6tQOlb8J0YHYm
+z7F+wLdd/mnuvM8fMns88rqE4c31M5XiDynsDzwrzzbCH8qz0BiB3dsB6B2
sCV22I/twNZbEvouQqdyXiR2rsd2ZvQa4l977F+g/k0h8fMaxw/Tq4r4sRr7
Eagfa6Kfe/Nw1s9/4kie3hSvrvL7l8mZbSIk+1c8M3m2kLiSxnEFNK4q+OOK
4ad1nsYNHv5pL4hP552fNO+2k3xPwfnO5Cwk+5L8YvIUkrwuxnnN6DmEnkfo
VM46ghsWGDcYPYHg5BOMk8yeQwk+rMH4wOT8Hovx6i3GK2bnsQQ32jFusDjR
IbjkhHGJxUMzkecUkYfKL0Zw9SXGVSYnENwOxbjN7Lx1xL36xVw9d6XkdSfP
j9TOlgTPB5T04Dmzp1bC4n28c6rqg+JzZc7fVC+K8wEjhy7lcD6crpci8gQR
ef7F+eCg1dM4nA+n9PZzE3V4defJuD7b4rg8oudp8YE6Kx5eqPmZ9rvH+Yfq
VWWJBHg4devM6KUanJ2o/bcTOeOwnAyfOwn/U4Q/zdPJFosrrnL4sqP82Xwu
nxh/PWIfa2wfhm+Wmn2P8nAtOrutkMsPhj8zCJ89hA/Va/Yl0Us3uXp0zejt
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
hOMKaFzRd6VtpE9I5Xxhc+R3+s029Ob08cnjOLvRfas9fhzh7I86mvwt8jj7
030V1/XYE931PW+8eK+ryiNsTzSZ9DGi7/f0MRDtYyzykIZj/u3I2D+r/y+D
RLRviWi63j0v9IrsewHvy+q3gryhOnsGc/cR+b2eJ24koZrnv77B5i+QSfqx
3XE9/VgWP6seeZ42H1yPpCddDTit1YgkcT+KyR+I5Wfznw/zHE3KLVvRfaOj
v6b19tOg8+eKGp8trcjL5ruvtUAIeqD5ObDMoxwM5SOMrmpXoTgB4ePbdTPQ
UtxPg4NrKmb/UahENj/0+jd2ZiFZ3A+EqlWCfg+vlSOVI1832ovmo1O4/wnK
+YMe1Qimo5vbyvqfHF+FHuncN7Xo34ISdDxbHSaFQZ6lQ/xyLr8KoGTMYKVn
8GL60xerx3N1TabERaGIahSF+1qQRvpdkrjfhWi/y++tkOlPjTj4qLt0lUuf
ZuSA+1po29OcWPORyaDalPTtdEArksF9MBTWXt3/i0UirFPVUb+m34akfj++
t7UpHxl+d3I7PSkM5ZiqZPPkacPyIF/++GT+yhlx22hU0yf0x/rAT17ftRz3
XeFXlqBkQmgc6myHU/axbejGrZlvv43Lgcf8fTlE+3Ku7xe+SrZIRO1uC/bz
5JHE8sAdEv8fcPwzP6q+WzJ8zaJkJL02VI7XBzbDfWCIIf29Wbi/h2h/7zl/
vrD63/hJ8KgT+p/Q0HpLI16feQnuM8MI1V++d6dEos8Nfn8UuxrQZcUNlaPk
60GI9D8bcP8T0f5ngUq80Z3DiTCzoFCL1/emfr8wYeTXWsF0GO8/JMqK87sf
9jsEnW4Y/OhaOdgq6U0/x8UJ7ZNr2FZs5vIIdG7HXa/i8kgL5xHr6/YT6+nr
ItbXNcudaVpWA5GDFiSqdSejGY0/BS6oN6HJpN8ih/stiPZbnq5sNefyC0yf
H5tiwuVXA84vpDSuPofLUzh45M3+71yersN5CpR/COYPlD/tSyfgvjTQvvTu
ph9fuTyCYQGjbY8LhIA3ziO270G8L/y7rw7eF+i+tK9ugvvqQPvq1D7LsX2A
2of25z/g/jzQ/jy1sxW2M1A71/H7C6i/HIm/xmF/AfVXFjl/Q/H5y+ptb/53
CqDvFCePhQ71nBIJGUm6xVz8gCOOH/SdnNce+Lxm51oIf/4Czd8u/vcOoO8d
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
/34fe0/8H7Qc9XQ=
      "], {
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1:eJxFmgXYV9WyxvcKRQ+YxwK9CraiIDbiUZQUlaOYYKJgBwYoil1YKLZ4ERG7
lTAwUCxUDMzjVbE7joVxjPv+vnd8zvMwzPrvvfbaK2beeWf212Gfwwcclpum
uaA0jf41X0pOkWwiGS3pIfmb5FxJT8lCkmnJ11tJnpCcIBkl2ULSXTKf5EfJ
K5ItJfdKNpdsJtlBz74c/U5U+4Tk5xrpPaUG0VftXaTbSR7iGUl/yfGS4ZL1
JXdLTpJ0Rav/mfGuEWp/EfM/NfT88W7mwFq7J79jZ7Wfk4yT7Cr5X8nukmWZ
ju5fIb2bZIZkvGQPyf8lz2eA5BHJpZIdJQ9KLop5dlWfPtKLSo5Nnkc3yWmS
TWM+Y3T9vJjDt9L/Tt7XmZLHJNvr+k+Sf0q2brw+xlhQcoXuHyC9l2Sl5DkM
ZP5qj5MMVvsT6X9JXmVt0j/Heayp9gvS+0kObdxeOdb3fKzxl8bPLSZZUv3n
sA7J9ZIXJWtI7mh8fV3Je+rzsPRS2FHsBfuwqa7PCps5S/JU2Az28HScB2f6
kuQ4rif3+UfjuY9tvA/s6zMx5oWSZyXbSeaqz03Sh7NPag+L+fyk9jzJS5J1
JEfr2mGSyWrfnfyuraT3kV5FckjsB+v6Udd/kDyXPK/jw97Gha0sI+krub+x
X2yWPLelwk5mS1ZgX2vTLKB7ezOnZB/ZQHJP9Lmq8ZmcL9mG8ZLPF9s4Tu2d
km1lTuw1+3+nrt0pPZL3qf1ptI9Q+5Poc4jaN8eebJ/sL7z3Y8kxkk6SDyUj
JGs17su+dZa0Uf+h0qtJZqm9v3R7yeOSWxuPNVkysfG91dXnGul9sRW134v3
TglbYU9XC1vtIJna+Cy68F5df5+5S/6UvBln+lpj3/p7nDe+tkRje8QWsMmL
G/vcX/bWP/qcnWwfjIPP4Dv44ITGZ72i5JZ45zqN9/JIyXqSQ5P3mb0YpvZd
0kdJrlZ7bqzxQLWvjbFuTR6L51dMxinmMUkyRLKq5Nrk/WL99zX2AXDzHMlW
jf2in6S3ZBHJ9Ma2Bc7ek2x72Go7tU9vjGEPJNsKtvG95IzGWLpV+D1rBD+2
jb16Kt6LT2HTzG0lxol58K7v44w408tpJ2PLJslYxvyuibPmeTDj0Djf2xr7
Fra0iPoc3NiPHos+YAvXDonrMyU3xjPs5YGNffCgsB9+dwzbOEhyXfKe0j67
Ma62lryb7PPY9A+NY0ovyQ3Rl/2/XfcPTz7HExvHqA0luySPRX8w4siwB2yH
fVuS/UrGsTnVsW967BV+gB13ibO/JZ4FH/Bt4sjPyfGJ2DQi9oj9AfPAPt1u
mfftjf2R+9NiT2bHOGDIh8kxiXj0IvYWNjc85tElbGtynB37PSXOZZvk9pqS
AWq3jTlh39g5OAl24APY//KxJ+xtj7CZVrFm7ARb3SB5/tgiWEVcA6/AQrgC
ePgwvpD8fPfG9gkfIDYTw4hf88K/eO+rat8WuPas9ISws1WlV4n1v5WMl8tL
7lN7ZMR79mpG43usf2LYGzbKGNj53o39H78YqLMcJLkJfiG9q+RGtX8U8Zkn
OQbsl/6+mEe0AsMlJ4OvurZ3Nr521Fgf6fcHnJH07tn2+5nag7OxZDO1N5fU
ZDvskm2L82u8+ao5y37S+0vuUPsb9R2SjeXfqr2f2sOxTd0/SjJF7V+Sbet1
DEjXfle/47ku/XMx18D2J4X9g1P4GP5FbCfGt2+ME1fHnrygZyaGj82N2EEs
6KT2osm++rV054i12OiNYc/E4QuT8Xas5nOh5Cn9/lVz+U/xOWGLxAJ8n9hy
XeP4slCyr64atto6uV/biGVwu38H7i3QeC9OjutvY3f6/T/S+ybvMbaxsfR3
3poW7P+9Mf6DX781xti3sEf1W076aekcbdZBHGItxCL4324xfqvkd9KX5+m/
QjLugCHzJK9L2jTGoe/D9t9pmhZnh9Myr29jbiXGY/7tk5/n2X815nzELvAK
bg1mEQeIwcPD1rF5eBpxEA5KLDwtGaMYhxg7M84K3H208TlwplzvGL7yWPgL
HATOR7wgLv3a2N9/j31jD+GO8BW4ymfJPJhY/an0m5IXtbA3Yh/AzD7J8wTH
9kjeT/Z1qPSCEVPfT8ZNOBW8+8rGWLeT5BLJ0o15Jesk1sMz4VrwwZWTcZLn
n1T7kuTn2Qv4cNvG53dFjDk12b9PDRvClrrGes6PtbePPQTviTPnxdrJRS5v
nI/MivvsT7fkNbPeGWCSZIx+d0jmJXCSZcCFxnHnG8lXjfMs9NeN8xHyFfIu
cpWD1X/xiH9fYifJfO2b5JgHj/tK+h3JR9hQcizvGfMhZvFu/AashjMQ08bE
Glt8tnGMezJsDFsDv+EoYP+jGmd0cr+lNcHzk3OVMbFfjLNcMlcB84kd+AO+
MD32sU3Y3ZqBAfh6x8Anzn+NZE51djzPsy24kowtYOuigbXgDvwSbrlEck4C
14Wnw1nBEPRC0f4k+tEH7gEvWb3xnrK3R8TYnWJ8fKJT+u/714453BN2hg2T
z5JH4Qd/hk1jz3tJ752cf7F35HDgFXGL+IVdw+V3TuZsTyTnbAPDTmljq9c0
5tPELPZm9dgf9pkz5nyJ9fBpuNmgZDvDxvAJOCj8c17sPzYKDi2bHIP7xliM
80hym7Mjn9s2/Zeb9Y89AY/BZfjDdslcC86A5jf8pRfjBX7i31sm+xtcpksy
/myUjMvgHjgMn8SnyIfIi8A3cI1chTzrKOn1JBupfTTXeB7/SR6LcfrEOHCV
Ucl5I/x2WMyP+AX3Yf7Xh+90juvY+9LJ74cPEW/Ag+erc6qR4Tvt4hzBUnLI
LrGmdWJdcOC+yfhJnIV/rxi6X3KM7Z28R+wPuNQjGeuIP73j+ozGWEls5jme
J15vHePQJq5P/Qu7kjkQ/Ad7IheYP2wNbAVX4RnkMPBe1nRkcq6I/4Ev+AHY
dnpyrGGP2evPG8c6Yh7xtEabWMWZcDZgGe8mtsMBt2hcw+neGB/AQDCCOHhK
+DU+A4eCA7IGcBisw/dPTT5PeMyoOEdwB/wBt6hnXBX7CQaBRdRMLmtcQ6FN
rLggGafhO5OS8wj8a2z4GrH13OTYgt+ekxzrwfWLkmM08YM4Qtx4JjkXwtee
T66tMAdi+pXJvBKfnRB+Csccn2wLnMFl4fvwKvjVkLDZTcJuqQWR53OGnMf1
ydgIN4cPtuT7jbkxeQZ53/Rk/gyWPBjPwrMfin17OZlrcu7kCeQLYN1rybUP
ckn4Hfx3WNjOAzFmt/hN+9fknHBWvOeBeBc2dFf4yHuNuTOYDN5OCT+iNkXe
+xdWPRN7SP4Iv2fPyOPJURcLP70hGWc428fjTLlPLawlF1PAnJqNLdvGPa6T
7xOrsJezkmMwNkgcIw9hb2Yn573gKrUdfsND4alPhw9yNvQhdlyazCewBXD9
ibAfcO6p6D8w2X+wW2qJWyRzFebe/a/5Z9sMtjNI81+0OI6vKf1HNneCT85X
zCnPE/6Mrl7zvdIPZXP027NrC+D7bF1/R/33jzX9EHMmHyAv6Brr/THuk2PN
C3tA/xRtcl5+k3+9W3xmnBG8tFWxv8O77sjmXv+UnqPreybbz9w4d2oy1Ok4
zzeS5wFWz0lRe2v8zjnxXtYPnyEnJqdgHDCZPBg+Qy4MvyXfI4+eFXZIboc9
0e7QeN0/xjnCCb9Lnu/nyc+CXdSN4KjEx9eiTV2pTezb0JjnTzFX5v9LrOGj
5NybM98v2bfxd3CIMxncuLb3TlwHe/F5/P2DZF4L1rMWeDrz2T0Zp8CfPxrj
0U5ht2PCruHd8O+Fww6vjDF3S+4PVp8XmhjKO4gr8IczknEW7B0b57J44zHA
Mzgw7wcjsdUR1XXnabHHv8beHq5zPqQ4/nXXuT+h9o7YPnaXjTNvYdvZGAZP
ax3+Cyb8LRl72Q94Htg4OBlnefc9ccacLxiOr8CruT8o2hcnYzTzHhL7zD1y
kd6xds7u5bAr6qLUEcBLarbgHVhHXeK6bG57v9b7eKzlQOmliuMdednyxbkZ
/LxdMTd/Wv1fCpvvqPaobBxYR9fWKj6rG7K5N/xsOfUZkZ13YmcLZ9cwR1FP
yK4dt5xLtr9cI/1GNj8/Tc9OKI4Nx2T34+xWrh4LW76t2LY482d0/Qv9PiyZ
I4Ax2CTcnxxgTuRitC+IPeZ7R7vQ3QOvqK2R/xOjqGe21JjYTz3/aHaO+Ija
bwfmHFpdl2Rv71J7TjbGPJcddziPndV3QDHn/kDXp2Sfcw9dmz+wrr/0NsW+
uEvMifmAcyOz1/ud9LfZ+QrcDQ5H7kNt8ovk+cBPPg9/x78/C38HD8AF8kTs
mzoCXO7dGAfMAXvAIHILMIlca+3G/O6VZL4Hl3w3+vcIv4a/fRxjwYHBra8C
uzrHmPSHkzMH8taTtI7js22+Z2BLS57LmpJtcpj2Y2I2Vz9Oezu+mO8urDYf
6ODvx6i9bHHeOFH6luzclRrywdm+0TP7N7WORarx5K96883Z2LKHnl28eB3k
7uTw2GqvwD7mCH58EhgySeM8n11zfErtL8P24CVgJ3FkZV1bqDpPGpgdqzgj
vivuVry37MHxxfuALZ+cvafkCy9l82tiwUXZ+4rtTKu2n7Ol52bH/QezYyRY
fCH1t+L9f0DXplfv6Z7Z7+a9K2XbNPY8uTrmEe+IyWMiLhPr7qiOd3N1bUq1
rU2tjlfYCJh3ezXubSi9QTVOv63rrbK5E/nmjtV1lz2l96rmYRfq/uDifOI+
cKU4p91X+ubqbzTE4W2q+dMn2H52DIULvBl8YA/d3736+wn7sVjsST+Ns3M1
/u6VvS+dwi5OrbaN7aW3q/b7AdI7VPPO49T3qOx88m5dOzbbLs6R3qm6rgxn
ObY4lpIfDyzOkdfNxgJw4Fbp26pj6Ym6/152bILjnBy+f7r0acX13UvV98Ps
uHOx2pdUx/wds+9xnTHaxTgn6LmTinPmO6QvqrbZj7PzJXKlq3Vtj+xcBz55
dzYvOyu79kjcv6C6XgmfO585Z2PF9tKnFNfl6Ds6u1b5g/SZxTXUi7NtFN8/
Rc8eXVy/mAFmVmPTi8Xxg9hBnCG/ItZ8Xozd+M6+2b50WPhfn4gXJ+rapIhZ
l6v/AcW5MPXjZ6tzu6XUnlVde2Ds17J513klaheSc9U+v7h9qfSl2bn2Jmo/
XF3DuETty4rzcM5tXPbZwQser8bNJYtzP/K+brq2SXVetB+8MTuP7qZ2VxJz
YktxzaSlrqf2lcW1Ld7/aszhRenrq3H2S7U3yM79++Gn2bFgqO6/kP1t5EGN
Mb247vC7ZLPsbxNfS48r/sa1vfTCyXWeI9Q+srj2QbxaP7uGekl2DCN+HSE9
rDovwqd/S/ZrvnEk7B1co2Zf/c2YWPdFxLufpX/K5hpbSJ9cndPdXWwr2Elf
tbcq5kB/SP9ZnN/OzMYI5tm2+H3UG6apfW9xPLq6mJdQN5kMFhXXGi7Xe84q
zquw96nF8R8ecVgxlxiv9vDq/bml+ow5X3jHudXcgzM5pfG5sJfjYz/v1/W9
i2tks7IxCPx5VDIju5b3mXTn7FrQiDgnzmjpsAnsYV9dG1Kdu/YCe6rz5H2k
B1dzjf2xjez6aG/pEcWxZnrgKVhKTWZodg2jp9o9qr/HnqtruxTXrsixNquu
E8A7dgzusQO2n73PxB9qpcSCrdS3b3U+ekJ17kyu2E/tratzdbjsrsXc9kzs
JLvuS959bXZO/Bv7XJwDDZEeWqLmCF4W8w18+phivz4gO34Tuw+SPrCat76u
6wcV16IOJm5U59h9s2t88JmTwOnsuh3jrRFjHpjNFeAJrAOODj+H84IjYAhc
fmQ1n2ePV499HlW91+T2I4tjAPj/TfaaWe+V0ldV55TjpZ/IruOezX5m59Qd
pbctxkn4xRHBMagp7lRcV+Qc8E/OYlw1FoPD87L7cY791X6lOOdeV7p1jMO3
VmIncZM4cGtxLODvK+4pzsPg452KOXkXXV+nOocYq/6dss99r2L7xrbX1f31
qms9cPObi/n5n8SN4m8Y60n/pzGP6qr2jcV5203F+T4cuhdjZtfublD7+uK/
B1mCdWVzxVWK+ThjsqbOxevi++HCYWNw/2uK+f982ZjSOmxwkehzbTHng+8x
r3VjnNWkJxV/m2mTPW/mTGw8LTs+Li+9ZcQ1ODj1R2LxAsXf0cj3F8zmi3DF
TcMOsAG4J3kU/LO3+rfP/oa4ZHZtjRrbfcy5uObdU/r07DriAzEuYxIf+Psu
wLWtrt1SXC/mDPvEOS6pPktV1xDvzY4lxBHme2dxzXQJ3f97db67ovRK1bW8
tYvnzXeZ7rq2RXU9rk+cE2fEfMnlyOMea8xv4Dbv6/6g7L/vwD/4loWPbCvd
v7qeCKdbLZvXDc/O98j1Tpc+Mvv72arscfU3vN2ysR6bb6dry1bXNNtKL1Od
94Nh+AD2j031i9i3ejangc8sCKerrqUS37YLX8P/Hgkf3Ej3N66uOY7Flqpz
kVnscfbfOzB3cJz5Dwqfx98nZMchYhA8iNwJLrSoxlisukb8rO73yq57wdcu
C272ZDEmkscsDxfK/mbYWu021bVdalrnVNe1xuj+hOrvNKP17DnF3znILfBz
8osziE3ZdZP11d6wOO+HC5AnEGtuqOZhcLCns2MncZOclXOdKPkUvlf93fTJ
bPxq+QZV/G0Kf2QvOwbH26DYf/Cd2dk5D/OBd9xYzT1mE9Oz6zHM8YyY51vs
Q3at6DV4SnbNYwW1+cCHekH/bZ1dByLPWCQ71yBn6pGdN62kPisWf1fmoVUC
i8iJqQWQF69Vzf/gfvD9rYs5/0bZsZm4/Iv0Q8V/O0bcm1mdo64hvWZ1rRxu
CF+EH26qa/+ormt3kG5fXVuFJ26TzRWT2rm61t8tm7fB2cjPJmfnaI8U3+P6
w2rPKP6uM1N68+y//aTW0r643vIoPpv99ynTsuuh1GTB2o0Db9+UHpBdB1pF
71q1uo6/tnSn6tr9/wOd1yDC
             "]], Polygon3DBox[CompressedData["
1:eJwtmHngV0MXxufeGSJLUhQt2pR6JdokWlAJhSKEfmlTWdoUUYkWW8RbhKKN
NvtSSiK0UKEoOyF7yWt5LanweTz3j+c755kzd+73zpxz5pyp3nNg5wF5CGFM
FkKivRRyfwyhKXwP+OvIb4AL4afD90f/FAM/hJeDv4ZuDTgP3hb+IPJscDvy
H+BAxpYH49F3gK9Ftw50hZ8CH6iXw9+j+Q38iPwTGIZ+NPwp9PPhreErwZvI
68FFyF3Qz0NfE/5/5MPoa8C7jgGTkS+k7yz0FcE9yD3oG4juLvi1mhs+SPOD
CfA14APm+hD0RncB/HfkHWA4/Hj4Sp6fwfhx+q/0VYAfAm5C7kjfteiaM/5v
5Du1ZvADwF3B/7kKY4fBz9Tc+s/w6uAWdGfBP0N3ELgbeTlYhe49rbnWkzEn
Ie8Jbgle8+HIu8GGYk+eRD6O9/8VvD73aT74d8gV0W+ED2bsM8jvas+R9wSj
NTdjXmHsCnA2vDV8OuN/AK8iL6bvHeRNoCl8JLgEuQW4PnjPLkeuxfO/Bs+X
aS1y7+/74F7tBWiCPArMQb6SMZV5djmYg/wjfWvRtYQPRW5M3y74bvAO8rvR
e3ke/Inc36xvrQCeQT6C75mIfgr8b9qZ9LVElqk9kvs/6b/cAa6X7YGejPsY
fir6/cAHwTZ/NHNF2USwTXVE9xFyoq8i7UTaVxjzPbov4Z3RVwabg23oInT7
MWYLfIE4urrgc/kavATdvtG8bOa5j4UfTFuOcWWR/0tbH/4VqAIfnbxWpeGX
wcuBb5APoe8X5J202+BX0TaD59HfI5uohnxY/Nflwk/ButrRtqgx8gX5pHxR
PtEbuVnu+Qcz35/I1Rn/C3yjbBD+Ge0+9NWiPYV27+jv3yuzrh28Gm0Nxh6D
3Ia2DHwnqAuvpz0NjicHojsBnvFsN1AKuSVIyJ+gb4B8NPhTsSj4XcfrYzK/
8yjk+mC/4DFNkZtEv29XsbZzo21La3y6YhXv7I9cOvNenBYta0+qoGuvb4L3
kY/Idgp7qaJvRF8nOtadT9/J7E1p+KfyHfkjctXcY/eEP087lvYKzYvcAf1E
2ZzeDfaH3wbfB/kL9B3hZ0Tr6sDPVCyWjev7FX9kh+D74D0/FLmffBZ5u2JU
YTOylcq0laJ9Qr6gMSfktiHZTmewjL4WtA/RNwn5Gr5nONhLc+t/R8+Zcvf1
g/cHW7W2wbYxWO/JbCNDkAeB8cF9Q6NjtmJ11cy+P1frkzkGvIT8K1jP+Hrw
AegHRr9bPvwWukmyAfgx4GfF/mhbbx4cW16Ed8ocYyYVPiTf2UzfDbQfKYbS
Tsu91ivBnOA1H8bYZXzvN4p19C1Fdzz8HvhaME7fHW2LpRR/kV9A/11mG14M
miD/lf1rkmFW7jNVZ6nWoAzj79CZUOxvV/gF0bHjSDAa+TrtB3JN/V/kMfLX
wt5GII8Er8veFE+R74le+0aMGavYzfyHI9cGp8JfVMzJbMOv6qyj70jkeTxz
jsZH21MZ+m5FvgXUhB+h9ZBf0vaMXs8ptHdHx/6G9E+O1jeVbxdjexVj9Uwf
MEVnEP3lFf/g3cDX8tXg2NU7WqcYU4+x3eEHwi8DFyOv1ZkV3Fcq9xmjs2Vv
9Sk+ggaZ59TZ8RiokfkM6YLu3Ohvqwtvi6609j04BzlX8QzMgF+S+b/uAG8H
/+ce7O0ssAH5ETARuaFyCOTVoFFyzqFcQ32reHY6/D/Ic+k7C/l+sF4+BWYj
v86Yjchvg/7w+eAd5CfAJv7r0+hX6dvBOcFngs4CxatFOm+Q30R3ms7L5D3Q
2m/K7Bsbcsvykcdkb4x5FbkN6BsckxWLFZNPLmJE5SJGKLadHH0WKsbV4dkz
GVuCfBtYo7WI5t3lc/Ba6Ptl9pGW8K7wvshTM9uiYqhip2yyQ+4Yr9iuHGkV
c60GXfStip+5Y6piqXKI3eha59aNUHyALweNg318l8633M9fm/ks71TEW/3/
Jsl7pr26W/tD/2rFEfq2M24qWI28A937mWXlXMq11KdY0E7/OTgm6F1L6fs6
8zufVu6U2xc/zry2WuNaxZmovdMeKldQzjCWsUt45ivGts2cO5QU57tyiPXw
i7U/4Hn6n4c/l/z9eqeeHUP/l5nnqFB8k75F36RY1B65fHBMaqV4At+a+Qyd
hn4q6IP+DfidyM+ify2zjUyA3wZWIHeSvyv2gTrw6vD2yPeCdfCZ4KboGKnY
qDF3yb7Bn7IV8LJylWR72AZWIHfP7fvbM9vOS8k62dDvuXNU5aZvMWYBuoeT
Y41iykadh7l9Q/b3dnSf5JLiDLihiO2K8crdavD8rZlzuJH0H5k8vqtiUHLO
r1x/En2/RZ8pmudqeESfgVHI14GayTm7cnXNmSfnzK2Dx/TVwZpsqy0QByD3
om9A5npjr+ScW/HrevhOdKWS5U3KQZJrKtVSN+j96P9SvC3sv1vuGKnYqBiz
jvFbo+cfmLk22Ce5nlONoFz2cPiEzPndW4ytkNuXtV4Z8t7J71I+9z367dFz
aU7JPRkzqJi/dnINpnxbc/6Uu+ZRrbMuuNaqn7yWqrlU+9SF35G5BuoDbw6G
wA8G9ZJzeuXyGlM2ueZUrTkOPhT+a/ReLMocuw9I1imGz0OeC65WrKVvMWOX
ROfS84NziWfg7TPnFA8jtwD3Ip+UOdc8JLesnHMmfA+tIfrm8Afg00Ez5GNB
A3TLot/VkDELo3Ng+bveodzp9uTcSTmUaun+uZ9VTa3Eaxp9/wvOwR/h51HF
3Mxn/mbkT6N9QT5TjfFPwd8Mjtcro21iRBEvdxUxULFvLPp9k2ts1daygZ3R
Naxq12tkQ/LNaHkJuFW1Jzgo2Oflu+fk9nX5sHLV/ZNzVeWslZJrXtW6N2sP
k2t81fY3Kh4gH5qsexmM19zJupfAVcxRNbmWUw2s2qgzfE7mGqla8hx6VjXx
2Tp/wKXBYx7k+c2KoXp/cO42AWwIzuEGFzWGagvVB8r1Ps69NooHQ5B35c7t
doArc9eEqgWrM38H3nW+bAY+G34j8uTkWKb1nw0fCV+qswHcnDsnVy6u/LxM
7hpetfvk4FxPOZdyLeV8W5C/yF2bHgqaIP+RO9bpTHtBuVxu21IO0iX3maCz
QGeC/ltNMCv4P16AXBvMRu7P/FN5fjdtqeCafatyBZ4/jrYRvCztz7l9VXu+
QLlX7vNJOWWN6BpPsUB3Kjcqd1fOFmyD5ZJjlmKV7nQaI38LVsJHgFa5Y4qe
1x3CiTw7LjoXvV8xMndOolykUnCuMyo611XOs1B3E4rPwT5wGPo20bl21eCz
TGeuzlqdaardjlCMC67hTkF3avLZ1Bv+hXLr6Fpb+pPQtUmuzXrBf5AvRte2
wxWTmWux8gLkLfR9jm5L9Nr2lD0pN4rOFXVOK7e+OTpXVo49Pvd/1n/Vmums
XpL723VmlwTbgPa+kvIWxS/ZOvIV9M1U/M8du5TTLsq9ZlorxSzd9Vxd5CO6
85mh3CZ3rqkaUudYSTG33vE1/+0bcLniN/xixvdMzmWHBPtWp+TcVD7WQ+cr
8lLaocG59xpwdHAO/i3934ErGDMIfiHPdku+25C+n3w1OZe9Br6cZ+9LzjVU
UzzBs49H5z7tMueeykFVS6qmbJe8R9qbGegPp68VfFrmfFK5R9tknXKQE5P3
SHvzQOZcvnWyrJy+d/I361sfpW+P5Bio2Kc7r0+i3zG1iLeKLaPQv5g5xsh3
9B3yHfmQ6hvVRMq3VfNUTI5xim26A2yG3BhchH6KzoNkm5Gt3Ac/P3lPtBfz
4Gck26hs88HMvtwxWZZPq/YoUQ6UuQbpnrzmWmv16S7pvOS5PqevPrwrfD58
QfBd1AnJ79b9iO4mjk3+b7qjOD3ZZ+Qrs2Q/yXusvdUcql1OS9aphnmY+cYl
x07d8Y5BHpt8VraT/yiXSK7tdYYqd2gIngzOIdblroFU+8imHpJtKAYHx5Bt
uWOW1lvPXMp/eTn6bkJ3oO9qbHKu3iz4LrJv9N2m7iSfyx2zFasfCLblFcG2
LJv+MHdMVSydLn/IvWZaK/mIbG1Zbp1s7ijkRfR9kjlH7yFfAI8H+8CVyXfW
uqtemFl3CX2PZx6zDV2j3Lmf8qnLk31ENvVkZt9fGOz7igGqBXsl26pqQt1l
qgZTvqY7zb7JMUuxSu8YlJxjan7d6f4RnTMpV9KddXn4Zcnv+pZnhiFfBZ4t
zoi/o+94dberHFN3fUOSv0X1uGy5aXLtJJv+B2Gy7iQ=
             "]]},
           Annotation[#, "Charting`Private`Tag$13128#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}},
      VertexNormals->CompressedData["
1:eJyEvHc8lm/4Po5EQ9pU2okkkqSSOktDZaRSKkJmi1QaQmkvUaQhhZYtMirk
tGXvvR7Pw2OPtGjod3Ndj++nz+v7/v7653l1db+u+zyP4ziPa9znqzkmx3aY
C/Dx8RUK8vENY35PiZ0KaOrqAmW1C39t3gbD5xVfzz0O9sI73146Vs7qgr2n
1W8f/PEW3ITMn+1anI2ZYQqxBcntYBkRkvNw3Ct4YzT1YW1rFf6qsqobx98C
KuOv3T5h7gueD6rTQro5yKfs3FLwlQMTQpdIC/0JhyeLbr3ntDSjceBeXe5I
NjQ18GdPkimAO1mrL3X8bYaH2i+t1wp3wEKLs5kdn0uh7lWbHi7LhgeJjz6J
mrfDLnEHq1vna2DNXQe9Lo27mGxZtq1LqBz0Ct+Yv+JjwYnmS+Oye5uhOyi/
1UOlAXytU/UuZjVDkMhz41/iB/B9zKa+w3JVcM9DeHL911rY+1U5ydGxGdN3
Zti9F8iGHv49i/8od8H8mRPF16Y8Qv/0877VYlnQre/VIHy4E34eE+CkS+Vg
EV9mxPi6ZBAf/dyhz7Ad+l+oFOezq/DdukPKbh5J0G2isvVGUjPcb9XvsY3l
4MfJz48pJyWCZvSJyW4nOSCQNHVrsmAL6r8792FFUiI+axX8eo8ZH0bG4ZaE
tvXlpCQsFPb98eVDM4R9N2lxTuaA8rTNv14WJKPzuiizOON2kIsNejGitgqs
jx8vWfg5E0Oc9Fr5bTrBu+rcbu/GbPhbvZ99RK4Kfwqab2Yx+eqSfEHHe2Kd
mnIDbugveTgirxnuJgW+/T7aGKQ8itZ2C5Vj6yeV0QN4WhE8UUjgxfKx5u3Y
0lGfeIPBX/P2IP5Q5qF/2tWnHTf8jojsWlkOk6NHGE6xyEXJD1/vM/yizCiD
uIkMv86EX7ww/O7nNX0cfMgVeNCxbifsGp+VuJGvBZZ9UfYYwMPZYsE6f9k0
VZVuuRifLxxYUepX6pvdjm7fFxtMX+mvKpCxYLYOtwrkIK3v/NIuXNHc736A
tRk3JpXP6D2SDZ7Llo1M/92Fzx93PRh1NlsVfk+bs+C9F9zvPKptb9GOAQo6
6lJ2Ndjip/6UNesulIbd/ynDxD8+SWPV9g3lOGFN61Xu1lyUovFLkfjxFo2/
5IDQjP5lVVg0K3en8GQW2udk3vEXa4ZXBZdePVBpwO1JtuiU1Yzywwb1BtMp
ns0ET6T6RDvKuxfhHXm8b/OZN9vDIwmXxKyRZvSDT4l+IHeS+qjJdcn4bq6K
HqM33PByUG+Qc/rqMpZYFpYtfBbO6BN7iT7BaHjH/DiBbMwoefrzt3IXPpw+
qGd4TXX+hegc+ajObajOvxKdYyvVuVi6lbV+TTIc2dGKb4zacYXTdv6VrCpM
6bd9m2WfBMVnzndsi2nG1ilbPdenc9Cb6lyL6Bz5qc5H/Zly7HN4OUSuSquY
u5KFSvLGmxcENgOX1qk/qVNUG0Pq9AmtU74Hg3WKQOu0vOCsgYYwG6K2+U86
trgAm4f36r5j9LPxhpQEo0O4uDjX9PPKcvR9N6hDSPpyuu6cRTtsTv3bI83w
vujNIO94m/pbJ/E39Kb+5lqfLnQ0pR1cXIx/NxT4oY1z15ErdVV4R+T9D4ef
zbDmYM+vyJ1BWJO8XiSjg4Pzr+3KUO7kgIZbuLqAmx/mTSj+0funGc8+69qi
fJEFAv0ZoiPmxcOGgnzH99JtcG/+Xi2jE5Xg7vV0kqJ4CaTP3bQcFrbBupmr
yirC6sGozkpk8/JqWKvctOqZDxcCm+XnKm9sgh2R3zROr+GA62ZZnb3yJWC2
6rPUzrxO8JybejJZPRfiPz1fOCMqAYepFVj2R3fBSyXL0+4P3wJfuK/zzgdx
eJHG8+UPiQdIPHhtz6pdX/nr4Wm7vLv3PD9YeOZBzabxbRj22NdcPigH7jmq
7rD2q4UOealdv8XbYHnRqiOO1c0Qrfe37HIRB46HpXRGBMTBs7CCEyKPqoA9
12CP7ut2UCbjaN0yw9XmSiX0HFrt6Tm/BB4stJkzal4bNvZnzp7YUQyTmt+E
uR1tgJNGs99v1+Li+YlVq2/vywHX0OKosedqIZngg78yv17U16uAgvk2/TeN
OiCmwtFJTskTOKuVltgolcEZpflnn0u2g3PuqTvhsUU48X1bnX11AXTfzHiq
oNAEo0QuRcfLNOCoCcIvJtZeiA+Zs1eqroM1hMMuC/2XA+Ov6fh6ytehgrwR
d/blYE77dvWBeDIoX3YpanNFH1XhVUu77p1Mvo4UB7krrzSuSt7HSYV1ijdM
GsBbvakhyL8ZC6X3yB+/UokvFNwLHzM4PCE4gMywW5YKZcXoPPaslCCDg4a0
1swvO7gQq3/j2n6+clR3fBnk3dwG7Dyd4HSJYjjz6dfsnzOr8aBFw+EJ8W0Q
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
HY+nrB6vZHSCZ+nzfrONr7/N+wDn7osmbvzDxg803y0L1b2s3ZNhrgRK5jLr
QLy5adYiiUp8c6ygZ45kIlRtzVN6s6IFp8/ZdG/kSg723t6zOM35Hdy3+nmD
0Qka0/lLJyy7FTyzEHa/l7x2X7QceTqP8pn0zDa+EbREF7PsVlXi5A9jDOvP
cmD+zrVnM5lzfNOfER+Ny2uw5SmJf9jpnDsMv7DI4t4rMZ8s5OlcQ2Dzz57r
HMj9nDcztvU1Ot+30czVboFlm3dtYPiFI75qjype3hqKZ7bp5qeKi7ggHjX7
UN+LBniB+r9rvYthsYrBmrbMDphV36Gmnp4I695ubg55XILzu/x1+rdxYbjW
F1Hu+vfQNUHtmlscFy3klGXN1jfC/PRKec+FEVDi3jp2QVYTiip7+AUfKgUX
K50pETcbYOULv+0VxY3o1hi/X25tAdwQy7oy1pwFF2/pPwoQb/1Pn1zm5ONd
rFwBo04Vf/1i3gEHdPQXSYV7wdMPp5L6YqPhRfvFVw6XuqBTIfyX67JkTNs+
cXL8svcgERDSWZLZBdePDh8ZKxeGWTHjpEWuD9TbJ2tGD5BG8MS/T3pG6V8I
xu0r8hW9TnBBe1F4snUcFw5fkbybuuw9Ou5qKBuYR8FmcB7oGPfonM6FYNCw
XLl24Hkgz+P9maPO2tf74tjLnp91uRwIsrps8H1EC45JFgnytrqIfG/s20Rf
NcDIv8d2ppxoxuE3W47c2FSAQm+35FszPmZA9AyhIw3AwbwQN+ZLn9fpbYYH
6V3rf6fWQ+cUOyllsVr0WzLutMiKNnCffPjnculc2DKVnT7ldw3GJ3sWpM0q
B515F16dZdbfhceWJqef6MTnsX654csLYMneHafGTkkGttvbFUsXcTF5uVxS
L8N7GOEdS9TWrmZ4xOajQvIeDI8hhEdY94rDFcvrxLuPdnHUu1PAeXrDIpdb
WVD9NF5tcmUnDj9xMDnEIBNaZsWK7rRJBZWe2Yc+xnTi99fFkTUbCmDiZZPc
+vlvUYbG84LEg3I0nqmGxfkp5o0o079glLokYqW4zZb5dk2wmDM+fcxnLppk
jL7SJ48YHhgRoPijEUyz5havC+pAgSCpuZfDE1B09uYJRedKQc7JZUfcmC50
O/0tzGpjGn63aNj/9XAqqF3UilFf0ImTD/feZE8rwU3dioGK14NxaVtNdcih
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
       "],
      VertexTextureCoordinates->CompressedData["
1:eJxtXAmcjdX7H0tSQrK02BvJFv3tMnmKEomiQpR9j8gWZStLlowhSyKiRJJ9
G9lmzIIZzD5j1nvv3Dt35t65M5RElP+9z3m/z9t5/Xx8Pj5fz3Oe85xznu0s
7204YnK/0WWDgoKSygcFBf699Wnct0vr2CjI+DPvm1PZV7rmC/7n+c/Cty4u
EDz7Qsf1k88XCb45/OZUquQT/MG1N8aV/+kYfd2o55pGPQ9SxSuLug/79Krg
ssxlE6zzR1rokQT5VnqZwD9T4gj65hydlHV0UhxBX2DoCwx5wHr/SdQos87O
l3PPC6685aGVZ28kCdbHkyTtjwfEZaWJfsDoz0pX/WdZ9M+y6Jcl8ssY7aAf
MPQDhn7AtR4ef7EkJk+wPr8O6R9Yn2+H9P9MAK5xSntg8AOD/xirXyD6AkNf
YOgLPL5r8POn7uYJHtvqr0MJ0PeZItGXu2tUJOsNjPUGhn7A0C+T59cr4wEG
PzD4JwbUOeoTfYHRHlj3n2uk+8810v3nGun+c40u1/nVs6zdDmP+twvOZn1+
o6Y/b/NtGxgpeFn72PFhHdIEvxQ/pGTsNru0B4Z/tm357vCde0qEDgw6+lP2
GkNLxgYWJPs++aCjPejH1m1YlD7eex8dWPePGNr/1yMVdricdCKA82J0f60c
K+2V/SbIfFhxY17gFNEXGPNr5X+d7eGqzCf4f3q04I8jbdOoSQCHpch6g47x
oz30Ax3jt9KBod8UtpccOj2qTlwHp/M+ftChrxUrfrvIA36ndbUTHzfw3Sdf
xZN8iz520ddKB0Z/VvwRy3fJ/AFDH2DMF9rr8c7sD/yQr6yxkE5E7Vlc9gXD
vo+5ZD3AD3uy9sfD6+mx2HehYNDRnxUH83oWy/iA0R/4MV7Qf/qu6al/HU6F
e3hkfq36gB/9qXBfIv4MOsYLjPGBH/oA6/5+TfoDXZ+PazR80sxWU+8evS/e
ID9j/P87f2+35Atr+0jRH/EB8wW6Ho8ixT4QH3T7ibPYZ5wlPyZY+k+y9JdE
enxL0/P97BQZn9Xfwa/HszTRF/6r+1OWRV8zn1v92ZqfQYf+oKM9/Bf8Vn9G
/tbn1yH9IV9jfMDgBwa/NZ/z+M+Z/g469IO/Qb41H1v9EXT0h/wL+cCYb/gT
8sVrgf8IMf0L/JCH/Ax7BoY+8I/oNtuqfTMkl8IZ59LQ1qGu2lMdxvw7ha76
L6CbEUuee3h4LjHM9tDdJqVNG413KHqqhxqOCRQwiBdrqMem/Lbna2cZ4z8r
7Tl+hUZJe57fX6KkfS8WcEH6V/aUTFX2Ntxz7LksZa+7U6ni1pCiT68Y9nA8
1aJ/hrRX62uT9tx/M5e05+kJdkn/PB1Hi0T/e/zHK3QmTyoVjPhyvmzjgbcy
0g37OGqhBwVBv8lMviT6KZxKo84k7h3V4MB9+j/L+mcLhn8Aq3xgF6z8wyX6
K33dol8Ppvuo5vlnJvyR5ZPx6f5z0JIP4yzxMUniN7C2X/HHJ12fRIv8JIv8
LBqW8NRrrWvaJL40rPTNMPvIKzJe9Aes10s2Szx0iDxr/oX/gh/+CP3hr6gn
QO/8z9WdDz5bSP8GpuuJIok/oEM+/E3P79dEHjDkAev8QUGwB/iT3j4oaOu/
xckLqzuFXn3+srT2+1xq/BfWULehFz/elJon+UjvLyjo979XznymXJHRfrXY
g+L/RTDsGfrAP2HfsGfwY73BD3r/hucb/tj8tND1ei1O9OP13BxnyS9xlHYn
5rMVLxTf1x/iA/pT658pdMQ30OFPPWsEGOIU3ZtL9jK+fmu2pSicnCv+gvbg
53iy3Cb8jNfbhB/xBv0Do3+VTx1CR3yFv8Bf4W+wV8wf6PAPtlt3gfgH+LE+
yjwKpT+0hz6Id7AX1F/gt8YL0NEe8bBrp6mzI3PyBMM+gfXxloh+sDfkJ2DQ
1fxFWfJ3lMhDftHt9zdpD/tBPIT9Id8i/kJf2M+I/O7n6lWz3Wc/iLfI/8Bo
j/XV47lTMOKRvp9xCR3rhXwBjHqA+/u2UMaH+AP/AD/oKrx6LPW0NV+XSPzg
4YwvJcQHxjPM9UW8gX8innzTatzK4I0eoaNeAdbPh2JEX6wn7B/5Qas3114i
x7gBrcPO54m/g996/oT8AfnIpympHy082LVY+LF+iAd6/Z0l/of8suvlgINE
iz+jPgSGvQDr9YfTct6Vb9HPKfqBH+2t50erA8Mb7abVvVIKjtU26xXIR70I
+Vhv2Ju1HsT6v7120cDBc0tN/zPiC/wJ4wXutWjKveZfRKv4kH1G2sMfdXuP
EzryB8bD9HaJQod/AlvrI6wP8gXWG+dPwDkXe0V6D7vEnyEP+Eri7i0D306U
9UX8Bga/1f9RX4AO/4c+WF/9fDZf+LHewIj/kA9/Bh3+DCz+a6wP4jHWBxj2
iviN9sDoD/UH5gt40MiHtv72l1mfoD3i+e4Zk0rXvhMm/g0M+wFG/QAM+4B+
oOO8VOxrwrjPmqxPEbo+X2ss9hYUBPmIJ8CwN/Bb5YEf/mTlR70BeVYMewVG
fNL5UwUjHgFb7RPtET9hz9dzg4NmbPUoe6uYQYi31vaQj/VF+5A/ez/x1cNG
fvojXfgR/6CPFcP+9fm1CYb9w36Q/9Af79cqOC3zbbPcV+TLeNAe4+X1uGP6
D+jo34rhX/r6uCz2WiD5xeqPVn7US8DwR+QjyNP9wy0Y8RntrRj+DIz9GDD8
FfGW7bd8sci38iOe6/qXin8hPoTWHHXF7UlX5we3veJv1nhhlYf9oX7edNBS
fx618EdKvoV/o55FPBjfd5nzQ88p4Uf+BR36Mv3Js5I/QEc9g/Z6/0kWezHz
P86/oA/8FfUN/An7Ffibbm9mfQB/QTwG1u8rHCLPar/W+yWc9+r7J5dFP6cl
3hYItt7vYP0hD/aD+baed6A95KF+wHrDXvR68Jr4M+wP84P4hvwLjPwLjHod
84f4Av9BfgJG/Q//RP0DOvb3WF+Mz1r/rQ8I2JEt84N4hfkB3j41c2G1hvFi
7xgf7A3jY9wpScZnvV/F+Ops2L3/7f5usQeMF/UAxguM+s06XtBRPyIfa/cV
abtp9c+fnxo5wdh/NTTPz9A/xo/4Bmy1R6w/MOwL+mD9YR/A6A/+UGvgkxXH
Pzo3BPm8V7OK93odPCfx5bXqT2x5IDbjvvP5htzflxLPfw2I7/W91F/TucMw
sUu0h39yfnnlsH5fW/uIyOfxrQ2nsClzBrRwF0t80eWZ8Y3bNYimkDZx+3u6
D0n9C/1Y/shos+4y6NCX49FB8z6f5TeNt/Rn3tezPXdPobq5zr4jKzkkvoH/
f8a7Zum0o2WbPou3HpF6GuNdG5B/PYMqTi8TOr1rntChP7f/Il30Zf7ZGbq+
nTMs4zPvA1jfCtkib12Af6P5HoDvA9bkSHvEV+gLe8H4cwPyF9v0/UR5u+gP
fn3+HDJeXv/W+TJ/iL8YH8/fDw69HltqygO/dl830KWf//cw62rEZ9gH/FXb
Tz7slvEpdzLv1cEP/Xh6gz1in4jX4AeGfG5ft5jeMPwL8Rz9sb2HFOv7zQgv
vWz4n/U9APPPKpbxMv86s3/wY/1ZnQsllNqw4YAefQ8JH/pjefGW+4py5j0e
/s2vtmjB472uUncu3w9QxOMdNrn/Nur1mfvp1XJB86uEJhjx7hRtWJ3VvPLN
YhXvKkcKP4sbFkED94WMOrfukLKPMhfp7P7evw4eaewvF8UKP9vLoov04sSE
Wp9PiFX9xSSSx1Yx9pNo431KkyRKXTV68OyeGcp+piVKe5aXkki94pruu7DT
2P+/lSZ0tv8xabSixuHXFp4+rOzFm0l7ur0Ut2dhnuq/VhbdyD7TzFmxQI3v
dCaNvtZje8i4IpXvCjJFHo/ndibNz5s1ue+XifRxgH4vV+is34o8+m70e+tH
v3dU6dPCQatX/d0sqbJRHzdyULvwI90T3zbyy3m7tOf+qzjorx86Jb9wM1fF
g3ZOSiqJ2jwp34hHbzppevjTg97fa8xnfL60Z/kDnVQu8gt/hkpQ8nNdQmdz
31ZAfct8G7Mx47DKH65CSq6xZcnxCQUKVyuiiW9UO+gKU+dNP/5TKO3VcUgh
nTMwz2cbL416s2nq9tWx6j5tjo8SYpadneFMpCMB+gCftAd9d8SWxOPJh5S8
3aVCZ3uKLqWGdR+burhGqoo/352mxH9+6Ro6zEmrAg0e2kgfngxfsbO+l1oF
2j+2hexbenROWuqlDHaP76nCoacS9tXyqvj6e7Ssv/U9CdtH4/PUYHu/pu8c
yBN6XuHjzXuG2dV8Jlyhv9s8WvHBDLuyzzFXqMzWLv4Kx63kfxpLPY7Pa/Rm
57NK/1MJVO2bvNLrbxrnkW8k0LW+tvYtrnsNe7+sn89GJ1Dm2J27m28ulvue
Si9eeH311Mtq/C+m0IHKlxNutUlQ9tDBfF/C+nZIpTWR/V17Pjsk+9PYxOem
7S2Trd7HtMmhaddvdj81w6h/BmbQ0kU5jx3LjlD6O3JEHo/v3xy6um918ta5
mXKf7F341fjtre1K/9o5Ip/j6xg7lcQEdZt+NULhKnb6oMqTicM/P6f0uWaj
keV3fZrfxTjPP28T+bh/rtFiTvEdMuZ3nJ28bdadeWnHOaXvHJfMB/uf3Xy/
wfP3UAFV3dff++6z5nsOzD/Dq27q0TLh50l52So+3XDT5LkPbWg1zif8WD/l
H25Zf+Z/pJAKtin7UPWbR9af42lDDw38qNncLWMKVbyt4xH7Y/9Y6KH6hj1z
8xbFVP/x8TFN7tmV/htLaN+z745cHmbeB+TtfPDZigtyVPzfUEI1JzpvjN2a
K/fN8Adu36FU/IHpVUslP2wKtB//g9TbXJ8POiDrzfl+7gHZf4Sxfx2W/vA+
o2qTDrWej3AIHjerRqd7J72Ctf2l7Sxd6Nb+/U5FWVLPoV7m4f0eSa8Fnuvd
M/eX2vuTKedkPqzvx9gfTl2RfM32NDWWmkZE7d5e7zfxH20/3dDvf3uVfVjf
ezF/jzSRz3h6mv7+a0qq2Iv1vRbTw9Jl/8n6/pNJH/35YtCk6uZ7DvCzPfyc
RaPr7a1d7pEI8S/UEzYeXy6VvbjygTf2m+85wC/vNww6MPrn+PC5Qz+/b28X
fVCvQR+2h+YOWm/ED5wftay+rfaDScelHsN88fRmO/X1inHq89HRKfUP959t
ee9R6tb34yMKZf1UPWJ5//FoocRH0LX3Isc9Et/hn69frzA0e+Jpqddgn3zf
HOvfv58PPXb0VtZ970UCaHA3870IT/8mD71k2Cv4oR9v74NN+UxPMffzXK/N
M9938nzeKRF/gj9r9X7fUvEv0OsZ8aJjYICjfpL4qOr/VBrRYlSP3peM95Pl
HDSqfb+LM4b767SAvGV7aF6fybkXL55V9Nr76eiOA0sORpxQ6zXsHA1/emZM
o06Zyn5fjKB3pwVvW//mcWVPt9Ok/mA8PJ2q/XWKpg/KV/YZmiX1DNdDH2WL
PqpeyhJ+toeODpHP+ix0Sv3G65nhFP0YN/GKfhxf93ul/mQ8xyvj5fnqUEKL
jPFyvXHXRy6jvuV6JNZfVw8JGvnj48Z70lJ/XfRJ/zlDjxvvNw8eot6d+254
cqdRb/W6TFUPuqf92TlH6f9FGp2Y3v7SYyFGPbkig65mjo6KeeSInG+1GRU7
ePDdHPotQO+dLZjX/6pd5PF8n3bSh8s+SIw/kKnqzTVu0YftaZlPzjvYnrb4
aML/vffT3FnGe+NXi8n+ynD/jPtkP672/ytD/ud7k8qJct8RWL+WnVL098Bn
EmntmOVVQ2rmSDwNj3/h1vAZdsHIp4yfSKDaR5ssuj3HJ/tpnD9Y98PqvtXy
HqUwV79//8p8n8J4aa7+XuWkjdYPG/Fu31U+2c+iP+t+lNfvy3zRD/tFxf9d
CPZ/GC/iC8YLjPjKzfMK5X7Kj9pvqOPR368sKZT1wH5NP48x36+w/q+UijzW
e7o/f98pfmfGYuzngoJQL3N9O2kxfV6v6agLXfLoscCE1t4s8rYH4tH8DTT1
/Wcq1fwqnyoFFrTxFpkPHn/nk1Sx5cj1jkXGfXfKWen/6QDbgtX0ali3HgNC
3NQuwFA2jKJ//njHK9PcVJPpq6h3clv/Xx+V5/hxQPIj23e/w/TUhFlfv7bS
R634vOc4Tdy76K0rvkMqfjQ9T78+lbTm75+NfFySQOlnWsQWjzLus+MSZX/C
/OPj6b3LJzqMP3lB8d9JpBFp534PbZas+IP9+/r36ucP2paq4mFeIv18cXDm
w3uM93jBl2V+uH5dEE9PdOzdr1uW8f3Ck5foX7JP6jPNuF/ZHS/7Ie4/PI6G
vD0ltF8rl6K/FC/zxfFvSSyFrvqszivfFah53h8n+yfu/6F4sQ+ut1yX6A9n
rxNDn/EoeVPjqc+Qda3/yTLua+7Ey/6P/WddOtUy5pPp95KozYTSmt2/MLA3
mZYb++0xAX0yr1L8s/GupYt99EZgvO+Y+1HWb1cWzXt+x8C+VU4a51PZNNyo
z1ne5Fx64rUjRanuDBU/6+ZS7BRv703DjPPdLrnSXvmXneYa++FAfHxsgY3m
7KlzZOaTxn3wPBvVN+QF6pv2120ij9fLZpP9OI93ukP053j0rk3yO8/Xcgf9
aIy3b0C/x/Jlftj+FhTI/KjznwL9/c9st5w3sP3XcdPlJbvbVQqLUvGpi1u/
r/fvN2B/Afrgsm45n2C3Ki7Q3+81cIt9cjgqKRD75O3qo245z2D9urvpoQUv
Nhr5ZLrSp5lbzus53mx3i78wXuoW++XwEl4o9svhIbVQ7JH1q1Ek9sbjzy8U
e+PwF1Eo/sf6POWW8xuWP7+Iphj+y/jPIlpXfX5FV1Se6q+tR+IL59dLxdQi
d+i3TbvY6OmAvBU+iQ+cr2b4ZL24va9Y4hnv7+uXSvyq74cXqpRSdyMeBeT7
5pdKPOL66/NSuvGeN6XdvGKVn2eVSHziei/ZR57edfollbHTWxyPfhX9OJ7u
OCT13MjAANfvopEnMpZP7GCX8/7fDfk8/zN3SX0dGtD3wj4qeX7+/LHnioX/
buNHuj8wwq74/46UfM3zm3SKEgx7U+e/ifr7aG+ifh7dOEnsg/HuRNpS/vGP
+x3PVDg3QeyF5Z0w9z/s375s6rSij6fx6hy5n+kUlfJywg/GfVn1LBp284/n
5242vyfD+yt1/pBFswx/fiCwzOXzRD/2vxu5xNdZb6n3ftdTcqU+53h7105r
Z1UoH+UMl/tt6Mf9L7OLfqBDPx7PTIfUW2p8+fr59wQnpWr1l1POa3i+GxdK
Pcf2Psl8D8b4g0KJ75ytSwtlf8n+Ut38PkzZf6Gc57C+QwplvdnfX/ZKfuXZ
vOilQsP+uH1j83sLrl9nltAgw97U/qVE+ufzgE/99t9z6ZHUdPWebNaEUlp5
e85zK9sdlvcbqA/V/v0Q9TD4efe233xfVovzzfdUfc6NL6+872H/6rlmg4zv
eRa4lmY139P2vWcMe+8fJfdPPL0NomjRV56vf1warua//xV9vadfpqxZ0x5/
k47K+w7tfqA4meb6R1chyHxvpr3frpdODQ60GlZmrfke9fLOSr4rp7zKnvum
6+/Zq2aLfcG+cd7K/R7PoqlvBrf4q61D9R+SLfmA1bvur9OrtrRFfBWj4sdJ
m/59xzYbzTbsO2BPX66z6e/rbtkpYdhbg/rMNt+nYnzW92cMpzhlPDz+AU5/
fP1ikveycb+X6tbfk33nJldYtbq1OprvTR/45It/bww9dN99LJvDzSJZP7Yf
j/l+jePlXx7a+cq0Z8cOMd+ra+cz40rIaXt492DnVRU/s3zUYHj4zmrrs5S8
eiUS72CvqGtxHoTzYXUeu0POg9X94BHq8tSMDaHdL6n+Rp3Wv/esfkbyqbov
OCPycR503pCfG9CPTlnu52L0+4WoWMv9V4J+fzA9Qeg439HuP/z765vryn8z
Isqt5vfbDDl/V+fBGbSpzm/1oyu7VTzYm6nf54VnUlTC3dvpr7oUvzNT+sN5
Lfpj/o1X5b77IO/n8wTz/nSe+Z0EzofQnuvN5rkW+XZZD56eIXYaa9xvMP0r
Bw37d/7ZW8fdSr8T+fp93bl8vX6+Zn6nivOic/+9f9hl0nG+qt2fXHdJfc7q
fVJouY8y7xvYf14w6Tjfifjv/cNCDy1eOzO4wY5Lyl67Fct9FZ+f+vfHE7pk
z6w89KKqN6b5xN4Yf2J+R4vzV8hX92fFQsd5DOg8vJqlst+G/Ttvfx/89fBX
SCk8VzCfx/T8ju7eUpjXb+Z+wfAX7Bdh75f+VnR1fnNYMI9/U7hgVnNYBAW5
FHYY/jHCuJ9Be/1+/jQ16L5gd4eSZLVfKH+EFgyp8Mhb01NV/T/xMC1Z+kPm
DU+yEf9Py/gxPmCMT7sP9P/BeOCf0JfXt/U5wbivAcb9IOYP/gz5p4zxaPbg
nw/gxoZ8DfvlI37ifSLqWc4fLWOpRmjpctdm4314brQeD/rH67jWFRkn4gv0
BT/GA37QcX8JOuIR7AnxCPzq/DtJ+BnXTaEtdxVmfcek6f374xfyC8t/J0Hy
Cd5bat+D+PXDeiE+oT91v5pOLwVtY8zpY18GVTfsV50XZgr/10Y8y8lv4Gkb
k6Hm+9FUmT+MR8P+8aAeYf8oyaRme468vqG2R+5ftftOvz6IP+V4/22+L1P1
RAad6bx3zWL/PpD5Z2VIe15vR5a0bxrAXXNkPRFfMR7wd72pMPiP3PmPf67I
E349HgcFIR5r9v6CTdaLsccmdNwHoz/Eb9QbeO+E+2ue3+8dkm8Yr3To9u/v
T8Me8/0o6+/Il/lW57MO/X77P5j7b5NvOe/LF3sAP8YHfmDcV8Oeymr5IygI
+QPxUd13O6U9u8ccl8wXT++2At3+/PkG5++4T8d69zTkRfwXz3FJ/8hH6I/j
cU23yGf1ot1CV+nJ5Ef+gv1z+09c1GHm2c9W1jXO3+JcUu+q/Fag34f7+9Py
TbSJ1f6jSDCbQxUPPVq2ekyf+HUhyJfQB/zQH/yg8/K18QpGfsX6Ij+Czv6/
0yvrw/l3QLH4A+770R/yKeIrq7fUzOeQF629ZyiWeIj8i/45v1/3CVbrXyL9
4T0B9EG+Rn3J8qoWSz5kfd/30SIj37E+nYslPzL/UB/NM/Ijn3dMNd83QB/Y
19cWfXA+j/r6n4D8+geonlFfs7zae2X//Qvns2+pTvd7x6OHmL9/g/eWdfn8
YJ+8D2X77rnR0l8kXRqW2OtsxQg1/g8i5P4X57+310zueedjo/4/GCnyOT5E
RujfG/0SIfsH5R9n9d+vWBRNm5ffC775gPk9kvbe1p/fEB9wX6C9l1xxWa93
/PvDPj9uGdQ+9bSKZymptC5wvBVzXOiQz/ZyLVX2d3ze+mIqtfylnK1Pwhl5
rzprkT1j3lM29V5uUorYL+4ThhrvFzj+18ulcGN/yPdbS3L198kf5urfM120
yf6e/WeDXfaf6jzRrv9eQRuHnL/g/gLrr+7bHKIf9pOYDxUfXPr9znAXNTfG
i/fNaI/7D+zfWV6zQtmvq+OEQv37SH+80b4v88czrA/uQxMN+2L/3uUVewpQ
B7/t1b+fXu3Vv6db5RX7YfW2eMR+lL97xH9xnwJ/AIY8jm8Plsj5BrfvVir+
wfq2K6UpwT/MbnMsUtl71AFa0r7H4LKxxvuCn9IEB+bzxz1Ommrw4/4wcVfI
mJ9mG99ph6RQ/10jKCzqqrIPj/nehuUl5+v1R1Q+tdpc54WWbxfwfF8I3AN0
2NCwTT+v3KcC475UO78uZ9fu77K6H6EBkRPOfb3/Is1gdzhMc55b9cSsFthf
HxH7ZPvfkijnRcrfEqlxYVLyiq2H5D0+7jeYf5eDDuxuGt6xtlvpf9BByxY2
3/XRahPjfTUvRxnLe/IqRfR/twpa/PZtDp0L/EfwTup+mUq3LzPeL18vkfVn
+7lbIuPjeDrAJ/rw+i7JIJp6K+HDa8Z7vdAM4ef18e//ciNCwzdmX1T9dyyW
+MLx7Kb5fRnHk5P58nsmyC/4PRzUa9r9ZOsk0n//7Jr8/hTi2f8DSobtLQ==

       "]], {}}, {}}, 
   {Opacity[0.5], 
    GraphicsComplex3DBox[
     NCache[{{-(1 + 2 5^Rational[-1, 2])^Rational[1, 2], 0, Root[
        1 - 20 #^2 + 80 #^4& , 3, 0]}, {(1 + 2 5^Rational[-1, 2])^
        Rational[1, 2], 0, Root[1 - 20 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 3, 0]}, {(Rational[5, 8] + 
         Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 3, 0]}, {(Rational[5, 8] + 
         Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[-1, 2], Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
       Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
        1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 4] + 
         Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[-1, 2], (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
        Rational[1, 2]}, {(Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
        Rational[1, 2], Rational[
        1, 2], (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
        Rational[1, 2]}, {(Rational[1, 10] (5 + 5^Rational[1, 2]))^
        Rational[1, 2], 0, Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 1, 0], 
        0, (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
        Rational[1, 2]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 8] + 
         Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 4] (-3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 2, 0]}, {(Rational[1, 8] + 
         Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 4] (3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 2, 0]}}, {{-1.3763819204711736`, 0, 
        0.2628655560595668}, {
       1.3763819204711736`, 
        0, -0.2628655560595668}, {-0.42532540417602, -1.3090169943749475`, 
       0.2628655560595668}, {-0.42532540417602, 1.3090169943749475`, 
       0.2628655560595668}, {1.1135163644116066`, -0.8090169943749475, 
       0.2628655560595668}, {1.1135163644116066`, 0.8090169943749475, 
       0.2628655560595668}, {-0.2628655560595668, -0.8090169943749475, 
       1.1135163644116066`}, {-0.2628655560595668, 0.8090169943749475, 
       1.1135163644116066`}, {-0.6881909602355868, -0.5, \
-1.1135163644116066`}, {-0.6881909602355868, 0.5, -1.1135163644116066`}, {
       0.6881909602355868, -0.5, 1.1135163644116066`}, {0.6881909602355868, 
       0.5, 1.1135163644116066`}, {
       0.85065080835204, 
        0, -1.1135163644116066`}, {-1.1135163644116066`, -0.8090169943749475, \
-0.2628655560595668}, {-1.1135163644116066`, 
       0.8090169943749475, -0.2628655560595668}, {-0.85065080835204, 0, 
        1.1135163644116066`}, {
       0.2628655560595668, -0.8090169943749475, -1.1135163644116066`}, {
       0.2628655560595668, 0.8090169943749475, -1.1135163644116066`}, {
       0.42532540417601994`, -1.3090169943749475`, -0.2628655560595668}, {
       0.42532540417601994`, 1.3090169943749475`, -0.2628655560595668}}], 
     Polygon3DBox[{{15, 10, 9, 14, 1}, {2, 6, 12, 11, 5}, {5, 11, 7, 3, 19}, {
      11, 12, 8, 16, 7}, {12, 6, 20, 4, 8}, {6, 2, 13, 18, 20}, {2, 5, 19, 17,
       13}, {4, 20, 18, 10, 15}, {18, 13, 17, 9, 10}, {17, 19, 3, 14, 9}, {3, 
      7, 16, 1, 14}, {16, 8, 4, 15, 1}}]]}},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{351.3397935589483, 373.52555757979354`},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.5120710164995176, -2.5864226523091913`, 2.1208963052641305`},
  ViewVertical->{-0.2381337647221288, -0.03594331788524689, 
   0.9705670445665594}]], "Output",
 CellChangeTimes->{3.844836924006027*^9, 3.844837013022943*^9, 
  3.84483715792282*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"f213b7d0-ed08-4d37-ac2e-84db29d8e2b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"r", "=", "1"}], ",", 
            RowBox[{"atd", "=", "#1"}], ",", 
            RowBox[{"frq", "=", "#2"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", 
             RowBox[{"atd", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"frq", " ", "t"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "t", "]"}], ",", 
             RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.4", ",", "0.7", ",", "1"}], "]"}], ",", 
           RowBox[{"Thickness", "[", "0.015", "]"}]}], "}"}]}]}], "]"}], 
      "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.3", ",", "0.2", ",", "0.15"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Spacings", "->", 
    RowBox[{"Scaled", "[", "0.3", "]"}]}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.844837276154462*^9, 3.844837276155464*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"e642d136-76aa-4abc-95c3-63ecc569d1c7"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.4, 0.7, 1], Thickness[0.015], Opacity[1.], FaceForm[
          Opacity[0.3]], LineBox[CompressedData["
1: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
20LkhxK7ytOQhI9LtaXD2nh4I+vDET91EuY75Ea+6SDyn+S68HwLCc1bi7dr
9fBQ4G2ZgP1iEoq4/zu4qo+HphZrhHKGhrHshJNtWT8PLafP39jrPYw7E6L9
ZoZ4eNzhkHndjWEMGHhj+ZhErD/Zqe3WwWG8v+vYEwaZh0HGBy7f6BhCWrOR
agiNh3sid2yq+DaEhvIFfG10Hg79fp+2zXUIbyZ7/J5n8HDfhKHrg4tD+EAu
8sCWER7KqF9uy5AcwjbpY5F7RnkobquxljU9iPMXwq5Jsni4a2x7yMbaQfT5
fOnicjYPVU92dGjZDuLDM21iPzg8ZAZe19I9M4iNjO9cizEePty52F53wyAe
1fgttmKch+eCY5LOMwdwqf3x99EEi8pxtI8XDGC9z35rqQkeDj8PzN4SMIDD
3wvCPhOc+OXg6V/GA/iNb+k+/kkeKqQZadQeGcBwv7vi1wleZPpt37vFA5h8
wNg5jGDrKFetW/39CBxl4zqC6R6OnG3p/fhBvmqARbDbNrwx6N2PLaMbZ+YI
XqZjNxByqx+LwfU7P5eHgm8+lKgd6cexrNtCf/53vWmX1pRQP+5fuLeMTHCn
43+1nwb70HhOq6CAYEUtjpdSZh/yJdC3eBN84sL3mv5XfdjLp3pUheAlKYN9
jkZ9eJP/ozCPWM/ejKXCK472oWag3Jd3BO+M+vrxy1LCpxi8+7uL4Deps50H
h3uRRL+2M5HIjyJbe2lBVi/mXj8jsY3gnL1Frip+vbjosQrXm8ivKFv9cb1x
Ly4OsYkmEflfcav9zCX5XrzoOKUgTXCmzI69bct68bnS0Twrol7SH7ttdUg9
2HojbV8YUU+To46m7dk9WGa9KriAqHfUwg31q6970O3g5n9NhB4uni2722LS
gyEWlXfbmTz87nz+WcPyHmyuevAoi9DTi/+k+DXJ3aiTu2xLEKE3yfl/pOqc
bix1cWIaUnk4Z3iqqdK0G3989BdqIfQaDq17WnO7UOE9/7nVhL5F2OJaNwK6
cEf3K4pbLw8XwnUWqGZd2H1vM32gm4dK79wV+Fd1YYBlvKIDsX9Svvm6Wll0
4nHPNdsWNRH6nj7WuPJEJ6YVxfXzN/DQf79Tb87qTjxGvqv2u5aHsp2cE6KF
HWieLnkxr5KHBv8Zvty2rgOnX7irRBTy8HnK4F4usx3Xh2cEHM3nYdlW9Zi6
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
v83MzMzMzPQ/PRE0D5jxtrwIBDE4
           "]]},
         Annotation[#, "Charting`Private`Tag$14849#1"]& ]}, {}},
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{9.156284919454038, 1.5000000000000568`}, {1.5, 
       0.4999999999999716}},
      Method->{
       "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "ScalingFunctions" -> None},
      PlotRange->{{-0.8845009289000652, 1.3}, {-1.1838404405170728`, 
       1.183840641927833}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {138.40845735207446, -123.20707266475416},
      ImageScaled[{0.5, 0.5}], {225.33468154131214, 234.68013840905556}], 
    InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.4, 0.7, 1], Thickness[0.015], Opacity[1.], FaceForm[
          Opacity[0.3]], LineBox[CompressedData["
1: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
dit24u+ZR5kP7s5hsI2Gw5RLB4oGWilJsTEQw/Mb/1zoQKsDP14H8jAwuM+g
deZ4BzYas8dNrWXgZYcTabfWd2BsLF09ahsDJ7aZsiaz25Hrn4j952MMLD/z
MKJ+pA0rrKc1654wkFdjwaOjvg3fq/plNwYxsKL22kRpThuWD7Mt1L5ioHle
l/8ezzY8foYvNSOBgc5hF2Oer2vDI7JVTzdVMnDM3e615oFWzJZZm3+djYkq
JotP+OybcfhFuY2mK5O8h1R2xGg1o31xwJ/K+0yksv5Y8Mk2Y9KaPIX9T5g4
+Mrahq2xCUOmhQeY/5Ee++3KqYDK72j+zHKqOYuJQQXY3ZfQgJs/9x1ePcrE
T3KJ579cbMDERPvI3GkmPk0SX2kh0oAxNxri9VhMVJs+Ut4bXI87NUP3GbOR
nnnluT/NpQ6LH9zYVyBC4C2XYfcA5W84nXxG8o02gdJCnYahUzUo3P2g4PQZ
Ar0emZrax9fgDhZtP8uIwL28f9bbC9Tg6Usub/guEaj2jHa+a7Qaj1qZ7PR0
I/D81Zs2Cu+q0dtF/sYHDwLLZkzVzxhUY+o2t/ZmLwIdpo/jr+IqrFrUraQ8
JVBwn+uVH0GV+MZYL2wv2adVpvCKF0Ml/vomGtUXR6C4w9r0s6wKTHfIFHF5
T+DdzWHdhFkFMvPMtzp8IFDOhldOfEc5PuPBnUFlBIqlnjQwsi1BU3qi48X/
9ZHVucTa9i94fIOYfRrZZ3omP/cPOfoFJRvq14+OEMjbF3W2Rfgzsqo4tXdN
kyy/KBr+9ROG/wvrJBZIbw9Yu8pT6RM+/lmwVLxIoOnRsUiFd4X4RHmT8+2/
BL6XakhmOX1Emg7Ptg/spPdtiDdWEc5H81UiLhfXsPDe46mrrx/loZ/v3M8Y
sq9WDHHfXjOZi1xzyXebyb57192Z1g9fcnCb5Gvzf6THbnw7YGi3IwfDigdS
ljaS3pO9MmUxOBs91fd3jJFem/708ezVkix0FlFMfbaF9OJ1CRvzgjPRR2vN
sZNk3z8yxKddZpmBOra3I6dJLxj7I39C4m8qGv/TdePezsLg4iQ994YUrI2Q
nfAgvWL6fttgaGQybim04hwgvWNe4viegweT0HYiZ7ODLAuFHtMOVXAn4rvp
a7yRpLcUPWi0Ee+MR2/ftJBC0muGfarMzibGYcbA75gK0nuuWMSXmd+ORbta
4cNfSI896Ps60Ns7GnuHBC0SSU+6oLpLhnvLOwz7T2XZg/QoZ9mn2fqFbzHl
iMS2o6RnXXP9/sjiXDj+PZFeyiK5QDluYf/Mazy8ZUVHKOlpr6I4nSj+L3Gl
RchladLrtgmr6FyWfIHZTdxXkkhuzF7XeP9eEOo8tm9fR3rh0e4AvYVMP5Sp
m/94i2Q5z4VOoD3C+nOHeIpIvmvx6WrZLg9U3rGyhkny40uPT3197YTvslwI
YdJDRVPTYyKJCxhZTX/6P4/lKy68oNF/AvIz/z37vx7rpVl9xdYOTorkL0mR
/EykXAHr3YAhd7iTi+Rkjg9/I696wVnHdWId5Pyyj7Ql33r6gMrwcvNLkjfY
7D+sov0U9k6uZamTfHOk0SdCKASij0f49JDrCaijRA04/gdLvKr+V0jOdtRo
0ux4Bd+yGv/0kPFY+bfG/cmhMCjq9x0DkmesBvaHxLyBc16t2q/J+O1UV/1w
mTMSuNJvSneR8R7oYvP/ZRcFYc+NvHlIlk046ZYpHAddV5yLVP73e4eaFTrP
T8SDRefBIVVyP+9/UarUdkoAudVu6jvJ/V7JPhepXpMEM8Gcxb2kt34Vz1p0
Id7D5dMWQ2+lyfP33frPHbEU+OChcFaLPE/c9/R/UG+nQdF6fjkXSRaKe0ax
jkWlwyZn2XdzW1kYIqSWYleTAbz0FqcL5HkdkfvP8NfmD5DIyDRZQZ7vqCrO
f85DOfBD7W2XH5kfa8PjiZcuuSBk7i7otY7cn3s/7j3jzoMr4qIj18h88mLT
ucW5Ox/0A194cJH5F26Rajt6/yNcNCkz8CLzU61W1CaNvxA6v+Xp/iQ91k4h
6eaRuELY/cFd5gKZz660tqn66k8Q08abOU/m//XYtN3X13yG8/uPbb5F1oeH
3O6LvlGfQV/tu471BIE7L14LtVX8AtzbovN1SK/liTMuunOmBG5PqVuPk/Wn
cLzDMyMEofLPj//sWgnsnlxXMcVfBjNONyao3wkcWb8Rrc6XwReR5xTdegKP
23AsU4bLIHjGZoRZSdbX4Ec5B9kqgBXk0+ufT+AF8y/C+ZoVYJW6Av2zCfx4
xqucJ7gCJJT/Fd7NIOv1Y2aDukglDK/mlFZMJJC/+mph0+4q8O1dnz/+kvTY
kqzgTcZfQcOYZZzuQKCWo1Hzp+ivIHn3tbGZHbm+yNgQqfGv0Jg7yrtwhUCT
rRaHzDxq4En2/r8rTMn3/338u8y7b7B7rXaSqQaBr/vMLtPb62D0yIS7hCCB
z50leqc218P4Onpx+2oCLZhcjz9eqodXaxSN73OS83/Le/piqh6c5H//ebfA
xLgasdW6/xrgcKD/gf2k94af7g1/sKkJnmzbs9SaxMTmRI0xV7MmeOgnciQ9
mokymStnZCOb4NGflCz3cCZ6M9QuU/mbgWO8J2qM9GCFykTd3ufNYEkVldx/
g4nOZXojMkEtQFd3/BWhwER+BZqPzbU2EDjlJ3E/jYH94gOOv7zbYOXPfVcD
SW/devxx5vXINtDd07v1ZQQDOTX2c840tUEOx9SDoECyX6jO9LM70A6PNNcN
yV5nYOFiz4gqWwc83q6cKiPLQC2ls5MX7nXCcK9GPsfROQzRirjc97wTQk4b
2+UozuGQs+vIofedMOIpbWEiNofyJ6OvRLR2wvcPUjPPFmfx0Zng5wNyXfCk
tVw4KX8W/w7V6Qa2dsFJ7d5HX2RmkW5w6IwRXw/4Rnzi3sw7g/qPVUcjtvWA
vXD17vKFaVxl5/WxbH8PTL55kWQ7TPZnhdwTaZbk+ETqi7ySadwbEyHMltED
PPt8fug7TePMJqmx4WO9wJ1gbt/UMYUXL+b8eHyhD3psT5iVJ0yi0MHLK9fr
DEDpjEKIrek4Rr4R6VAxHYA/Ld63xE+NY5j9LYkz1wbg5Bbzu7T94zhvoZ11
8fEAjLotJ7xcT/a7ppkenMUDsPtc4v3wpjGML/cnymUG4d1OR5NzOmNo/lFl
Ze3yIJgveuXb6o6iE9+pRHW+IdAzyTnCqTaKa4v+WBdsHoLjgqk5ObtG0X53
2ETy/iEoqmSkAv8oEqZnD2fcGAJXiTsTcq0jSKvWehXUPQSS3m95NC1HsKOV
10PZggJblK3V5ryHUTapR3D8CgVyDVVXvHcdxkt7FCLi7Cnw/kJvwk27YeyQ
ddokc4cCm/X3PpE7O4yaax//8npJga1hza8vbx1Gt3e8lwPrKBBdFt/+rZKO
/NIGzVktFKBJCIY++ERHEyM3/75uCgRqurIdzaTjv04ZC/0xCgzKOn/+GUbH
/YrCHlGcVOBhplBEb9Dx6pPs0OWjVOg9/9NWZyMdg445lX/SooL1uf3//eCl
o4ylotGDs1SQZqVi5go6yitoKGy/RIW7v5JYejM0XJNGrGd5UYEwSxU6Uk3D
af+hyYJyKgiW//vacYeGps36ZdvrqHBx745vdrdoeJz3cntUKxWqDUu+rLKh
Ydxr1e2FdCpsnx5WcCO91UdXRfnRShps4NjVO6dAQ2amYEWAPg18b+bevjRG
RaGpXWYhpjQ4AUeNBQapGPdVUjzxCg0Sr54ZbWin4h3q9ndsd2hwK0Qq2KWC
ivs3n1L2jqWBULOy1I1ocnx6kH3WPA22bL5UQDelYlVi1KGKFXSw2hlQffMs
FVW4ZBPH1tBBJvDNfnYtKt4r8/a33U4HVu7BVwYHqFhzyuTiEQM6mD2KRs+N
VPypoNl8OpsOC70lPqOdFIw/E3r48Rc6NOtyft/WRME+7Vsbar/RQU0utOpa
DQXTvg0oh1DpoPn96gq+TxT8T+AxZX79MCiGr42tfkvBu/fivp58MAyD1Odl
JRcpeLlhz5ou8xGoE3vnPdQ7hDHGZtY2diMwyrs9n9E4hPdBNJrDfQTWa6Qt
cZcPoatHUbDjfyPgV3/e+VTyELp9q5DirCW5+MVbNtchNGpNbBQ6PArAMfpy
Lf8QVnhPb7HaOQY9Dcqz2scGsXtFrMbFPRPwfTDWxe5NP0q1m9Qwj06A+xv5
+oTAftzw5vTTEIMJ6HH7Xdn8oB9j4+N30W9PgOOGXXf/XerHZOEnNT8KJuDO
ShnhONl+HBJx7w07MglHc7YuVOf3Yao4m06OwRQkX15s/1zaiw1rPQLFrk7B
xmdiF5OzetH6+K2iYNcpGB7WN3sQ3Yu+8cNS98KnoLz4YQXVsxc5+S0J94Ep
uPbGXvv14V7kn5OIoNtPA4/dV0f73B7s/c3OEH8yAxLPpNO8nnVj/3RG346w
GdD+pXT55Z1ush6lj8ilzoDM32dhT650Y8OGxaOyTTNA301Us6l2o7sCw3t+
8yx0rzvnepnahV7nhpYjc2ZhYWO04VuFLqx3SNxpVDULu9sKc7w3duElx751
XF2zQNO/uOvEcideOS61fObPLKzcHcdh1dyJzlc87z/WnIMkNhM9qlMnPovh
vivaMwcj2fK2nOkdOPM8k0N9ag5E1fTV4v/rQMN3v9qN/s5BEI1jYPPdDqwd
59jwYS0DchJOGr470YGK13RGbigzIHLfuMBQXzv6dWsefu3BgBbOa4ZWHO1o
ufHw4xQ2Jpgpfwu5rNKKhbanc3fzMIG/s4hhvrkV/2TYLGQKMOGs6uJj5X8t
qObBZ/hcnAl7LC74BlS3YHyX4nnaYSZc+Det/fFcC15wOyCQ68qEZ+85Ph+x
bcYcc9+pqPtMCLExbDuh3YyH5HbtJe98WI5QyVSQb8bPY9/Dt71ggs/yHV2d
gSbcNBP1h5bGBMHDImmW499R/pyJ1bFBJtw7u3p1BKsBHYmn4veGmVBFnQ9d
kd+A5x+tLkmYZMI+n69GSq4NeH3K7FD7PBMEYnzrJln1uCLs54cYfgI0N/9+
1MSow8budGrDYQKsY65z51O+IeFo9FNFgwDxgoXWuqhvKO1+1feVJgH8oqJz
H8y/4QtH1W/bDQgYDp35PtpWg1tVOeKjbQioP3Thxvqqr3h/jPp6OoiAM+L8
q75HVuGu3l9KSy8I0FovET54ugpPXih2XwglYEbA5HHxciW23cwJ+xRDgOv+
lkNdVyqx0tolxjyXgM1LkSKfpCvQVSh0tO0jAa+4kq4f6CrHxqOiYoc+E8DD
2dXl71+O5zkr2RsrCXhOieSIGSvDCMlrDqvbCRjN3fHpji7iUufWyfEuAh7p
n36Ym1qKBzrs8vP6CNAuVyuO5C7FH7HvxvjoBNz0TxrxqviC7+20uloZBHie
4ez8rFyMrzRfNgj+IGClixpH+IsivDYt4qu2QECOg0igwvQnvP5veoXxXzKe
K24dexVfiEvoG/KChwVmYhPbnNYUIK/9/D95XhZ8FVhsNrqWj+xqjWW5fCw4
kh6pzV6Wh/sIJe7H61jwh3OfS+ntXJztXnapE2IBFOwOa67PwaHQfPZ/G1nQ
1pB1LVcqB3l6C8ylRVnQa7iHtzv9A860ugqIirHg1MeixBAL0iuF2EoWxVlg
5Hv3JbEmE50Umwc8JFngc7/mUfPNNLzaVQGiUiyQ8ZUMNdiSivdoA3f+93fD
t7kFtobUJ6Ptyat6nrIsiGRw9ZySS8IE49Leb3IsEGw23tnQlYDZEdu3L+8k
x7f7H9zsF4/qM/9JbN3FAv8jDe/2K8dh/m3nOnkFFlz9SO06XhWD0lWvxCUV
yfHO/t7VElF4fZ3yJo7dLBC+O2W34BGBOqcWPnwnOfbu4jdKRzj2kxeZzx4W
BG9k9gbsCcW/F4JydyixgDa5tW8+8CX2ZRVuyCGZn3ldwLruOab/KeGV2cuC
+u3E0ScPA9HFzPilP8lOZvsazfb64t8tMcmtJLOnf3ServfCljlpHZ59LBC/
SxP6vtcNLTtod2VJNlTwlpnaa4P///9lO9ofOtUoFHz5PzH4xRM=
           "]]},
         Annotation[#, "Charting`Private`Tag$14883#1"]& ]}, {}},
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0.4999999999999716, 1.5000000000001137`}, {1.5, 
       0.4999999999999716}},
      Method->{
       "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "ScalingFunctions" -> None},
      PlotRange->{{-1.1999994857949134`, 1.2}, {-1.1999993808375224`, 
       1.1999994644079157`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {419.89813154076444, -123.20707266475416},
      ImageScaled[{0.5, 0.5}], {234.68020051039412, 234.68013840905556}], 
    InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.4, 0.7, 1], Thickness[0.015], Opacity[1.], FaceForm[
          Opacity[0.3]], LineBox[CompressedData["
1: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
N6WWMa5LNGFVrN6gog/Zn+xj3+tqN+HrgszkmKARjN1puFQ6qAlHFp3wak4a
wT+pVs8ydzZjz+LtY7s/jaCmhXWBoFUz/r15KiEwewT/HaiyufqoGRviuk4I
/BhBt06vKNuOZvROsS+VJPPFzIWfjXJeLZjB+Cg5TOYPnlrGi/GkFgwR3VCe
NjCCVa+EOtqbWnBJ+5Oe32MjKN3142zFxlakn5RVeLyAiz9XvZM+WN+Kp6Vi
0rOFuSj08Wv5g8lWrDentdUu5aKP15EvNQptmGqi+iGPzD9MI/vQ+7fb0GSn
ucitrVy0fy669tS6dvzTv1R3UIXMr5Y+DxnG7Xho0z+XfepcXPZoSbibezsy
gwPCPuhwkVXzbPhTTTvqzJPkfNnPxdwkupb533Z0VHg2m0jmtydX154WXNeB
Oes4appHuKi3/M98J/cO7NnrWdxtysXYX50xSgkd+KjHquv8SbKPLDYT49R0
oPmp7yHSVlz0FtC+67KuE58FmUqok31n0JZx/nVtJ3KOaa0cv0bm89DtCZf/
daKDZ/q1UDKPXnufnrRToQsVBid5HmReXS5zhffzdhfmH++OKibzrMjdk2uf
v+1C+3nWARSZdxU1+mdO1nWhqvN/Ozs8uHj8jfuzDoVuVM9a5RDvSc5Lj1AO
PdKNVx+IDB8i8/XWW7FHDt/pxod8kTdayL7z8uN8u9m33bhF4U45kPlcYGk6
J7muG32+m6X6kfldZXDQ6NhkN17yLGGnk/l+W92dKZ5CDx7OPKKbQ+b/Oq0Y
xydHevCDlatnNNkP6JvEJFfd6UH9a+tkzpL9Yexz3qeuhB48eKvNjo/sG1Kb
arNf1vTgEkbtdm/Co0esYw/86cFtf7fvoxN+7y/Tz5HrxVf3xez/t7/8J3Vm
+pFRL87Vsrv3v/2m6OQKq5WuvRhwdYPR//afEMFxz5joXryySyHuf/vRgljj
lpXlvei+csvJevI+86TtHY94vTj/8KSWHWF+3133bwj3ofcyUOol8cVv3W+9
Wr4PeYtf/7eDsO4e7v4i1T60uZPsdIGc5+3hMo6lUR9uvzft5kLOe1BQT4Rn
3YdzDaX6rEk+Nnyuu3T3Rh8GH/R5oEjy5S+S95HvcR+K7fusW0f2m1tcg/i7
UX1ofWPdqCnJd4xo1uTopz6sfaVv/5nsN/3flV0sSvvQYfhZKI/sN6r5Xd/z
O/qQf9cVw0VEzzffmYni3D58FnPwMt9tLoZ5XWk/N4+GSVo1F7zJ/psZ6SdM
U6KhKZ/5fGEXLjba3/EV06GhxfuPkS5kf95x9d32XcdpmML7sLmJ+C9ztl7y
jAcNPbIP/64m+7h54PMS6yAaLp0s0I+/QPQrEwsxS6Dh+yTDLX1kn5cwz7kp
W0VDx7mvXuiTfT+fZ83P66XhlS8Syk/MyL6jUxb55RcNX0xdTH5jTOq1Wqt1
+So6tscmX71hyMV1lnRehjIdL3ssllyrR/JT6cavu5eOfJVOv8TI/nNp5f05
O+zouO2/XQuPkPqsGPpr88KDjjnrIxrtSP3+WuySPBBIR4llqhZbyD60KKqK
bZ1Fx4nI+r2/SD9QM3+fFziXga0M83nzSb8wWLRZyFmCgepcX63fglzUdlXa
vG8jA4svikjY/BtBmR8/WOmHGUQnRX233hFUONwhm/mKgftFs76faRtBsV8x
f/iTGDjXwrVItn4Ey84LJezLZ2Dq9/GTKsUjKHHfxv1hHwP7Mq/XhMeNoEbJ
2vOrNjJxa+a/ZFbECPocl516rc7E9WMTiktCSD9uVNBdbMDEvHW2O+eT/rtW
WU4s046JeoWnKSebERwolX4tncTEW2xbpbxTI/hIytBeMJeJ307X3GGZkHii
B127fjKxY16vf4fWCKZ65d4+RDHRdWrm7sEVI2jNS3+otoGFsMtvz0uREZR8
X7jfU5WF5+omE4r5yfOLOno/HmBhx7vdbTg6jDER1xc0nmfhfpqCk17ZMDZZ
ReWLx7DQTPLf9tcO5H7pbV1xYUk/Vgk4T82eG8bUAy0WerL9KHNKWFXv5DDW
oJX8ki39GNi39N5tGEb1NYuzrA/24xCfiP5DkWGsStC40323H3U+5V3gm0vu
r6Llp+c87cfI+t6lZ38PoU+z2nehsH7MMRT8Vt45hFpVicXNn/qxxvTrJ6PE
ITwo4+Ghy+zHaqns7IHwIbyGkR+jRvvxbM+T0Mv+QxiT7R7eN9WPd4o7A1Ze
H8LLCjYqUhIDKH5e4ZCWxhBKTvaInd4/gEfbH4l8+cHBw8FjkpNRA/jq5MtK
h88c3FGqufjNhwFkVQytXpzAwbinUn0KXwbwodO34DFvDj6b/cBsrBzAb2E7
F7mReX6vUnV59sQArmeeajdV5uCxq51S5+ay8cC3SWtJGTJPHr5MG1rMRoPe
gowj/wZxl1r6+3g5NurodZm8yBxEYVUD65cGbJT1SMTE2EG8sqkrYK8pG695
n94SHziIoQbJ8+os2Wj165yy6dVBDHSdLXzqyMbAVObSN3KDOOdqX9TDEDa+
cwwT3/6EQqk3/lMBzWzsfjR2lu1GISNgxU7dbjZ+sLDw8z9PoXX2kEQzk41H
t8snv9akMGtsYlnMLzb+WVElxxpm44p9rPpvohTWs9gKizvY6HZr/pZbyylc
OZoWJF/KRps1+74vk6FQpaqKsTqajUFnlaZGFCnM88p6anWYjcptj46r76Xw
n7t67UINNrrwTqrO6lN4vHSRWOI6Nk7/6pd/f5j87gNWS87kAA6Mu4e+OUVh
xnZO2F6S9x2Jnje22lM4IkxnPXwxgKa6ATuEnClcnRhaifcGcPDqwwXl5Fya
ZtNpYmYDaGKR9mL4HoXti5x/qc0dwLcRBf7MIJKHwpODQSP9mHvOODX8BYVD
dcxt9I5+bHa2+KoaRqE/92KuQ2Y/fkH9DYoxFGZy63ySYvpxYbh3k2cchV20
qg+9xJeMLu68b28pFKtbLql2oR9/zb386FcyhTuvdzPMj/Tj4aKVm4fSKBQS
kV9xU5P41MLgv+pPFJ4Tv1IYK96PKa8CXh3OprA6ZJU+/mDhCe21bN0iCjct
5PfLT2dhtO+nc37fKbw7sk076zULA/VHbL6WULjsq5nwmxssHLDNT+r8SSF/
kkZi0FkWMreNmlZXUli5anuO5yEWut0V102qpvDyKVft4+tYKDfJTFlfT6Fl
ZcIOTTEW0ps6A0sbSPxySZHyU0wU8jtx71gThdIZ7FJOIxMvH3x1bGsrhWcO
FwjUIhMNHsjH3G+jsCArOuNTMhMTmzN/FrQT5jt6yM2HiSuGTgfN7aLQ4Mue
zFOOTMyQvB2+oJtCWXlrjz0WTHzWlHZ6irBJPJexWp+Jw+9KF/X0UGjbWaYw
T4WJukGirNReCp+zLt1lr2Zi9kkz2Wt9JH9PRhRqhZjIq2b+WkGjMMVN7nT2
OANh8f3XnwnH37E5Hktn4MKPl0yBTqF4VapxQA0DBRebmH4l/GJvrPedXAbG
n7/YKs+g8EKSk+K1dww0EDFc5UHYajF1x/o5A5e9FbUoIXxgjkPGCU8G2qzX
aJwhnDD3D7/JFQYKLM8p3MgkdVOzNNnIjIE3wgfP7iMc/q2z02gvA1MCw3nG
hAc2zKkxUWagxtvxdCPC3TV52SelGLj8QkS3BuFg/daa84IMzAHvrJWE1197
d/DGGB0Vo0TucMjvadcLnn7cQ8ebrXOufiQsq2OlFl9Bx/067qUXCU/vChcv
JvdYgfTvahHCLbaKCv1xdPwbfag4iZxX1oj/tSi594o705kahPPjY5O179Cx
L/+DWz7J17fl/x642NJx7eiy3B2EfxU9sEwzpSOtYTXvNcn3uvbdZ7lAR/PT
hlaTRA+mvn+R6mY61v65sN+Y8G0bNct2fjp+n5b2ayB6qq1lUa94NKTn8If+
T2/e3wmDMz00PCSn83wn8YNdpvuW6Wwaer75z8yxg8JVvHyBNjInfC9IeONJ
/HOjbNHp3GAaXohb2ulL/NXq3CQVepWGzKDp9TdbSHwxAm2Bp2h4ycA273wz
hWNCHzOCD9Dw98oLegeJX4+aLLJMk6Xh2LtZ/X/E31aRO+JMmvrw0vkruxcS
/5t3r3Z+VtSHeXnfi/NJfUx/SPNrSetDgdOhJ65UUCg50bzMh8xd0kGbEz+X
UXi2wsngKPRhQITjSeFiCiMHni7NM+/FoXXzlgtlkT4Z2vPo3q5e7Lmbwb77
mcJkW+6J00t60ev4ojmjGRTGMMZLTH/2YPKHTYvrPhI9Pct3WezuQac5bvyP
PlAob/L9FH1NN36tX/BqURSF9su2ucvNdOGcKNnLPpEUzl3Hfure2YUR3fqf
p8MpnGyOmOca2oUC9lFl/0KJPvWHzV4Ld6G0Z4PE6mDSf5dfMSia04mrhLc8
3fuQwl3vFvlUdHVg4nWpbyxfCuM8Nnwdy+nAVWrKSUE+FL413n/szfUOfFiz
fmLmPoW0um9VCsYdWGiSPV5M+uU7rQTnik0dyHDB0UBPCpUXTVleZ7bjY4tW
ET0P0g/qTiS7FLWjcbNE7dY7FN5z4Kq/jG7HH2fWFq+9TWGZvcoyVfN29B6u
dlG6Rfrr5VOWX1Tb0T45vwJuUvhp7ZduU/F2VOFf8cCa9Ota9g/Hkdo2DFky
aVx8g8KAwY+Og6lt+NUxfEyA8Ia2Aw8F/NuQmq6UM3Oh8KKvUCJcacP04J0K
maT/Uwm072EH23D6UO9+GcIfUsSqxTa04UQtlL+4TuGibJ1PiQLkc0fl8ZWE
WT73z5xhtmKeC0s81YlCDV+9b9u/t6L/8Rk7Y8LqE8656+JacZ+A4+4ZRwol
VhzTUvVqxavajyryCW+0jN586Wwrbq8bPvOEsFCRt/1naEXm3yg1W8ICSlGM
NbKteKSMGW5K+G3jnOvJMy0odMOq1ITwSJn6uGlPC35p+jVtQTjIzfCYVEEL
mpW23r9FeJ5xzrmZqBb8F+/77C3hLDvfeXM8W9Cv+OtFBmGGsYqorFULSv66
tX8Hibctp8bKQrsFMxfxX35O2OkG++fn1S1Y6taxmJ+c19wwar3SbDNu/Jnl
8Iiw659XBgW9zThp5V8uTfIlvltc0KGwGR1nfY//IBzWQ9uyO7YZ7z6aMfIk
+W4YsQ2W927Gd5F+A4ZED3pf4uz6883IPUu32uRK+l27jp7+/mZcoPWHLU30
FJ5x3u6j0Iy1UbQ8eaL38xp5/w7BZjQq71msSfzA39P6ueNnE+rXNf39QPyS
MP1viU9yE7qsmj81Q/w0/bZn6kBAEzb25B28fPd/n3c+lTrahN3v7/jeIn6V
qfn+WUmlCc2GMxpkvUn/HRJ1NZNowvXqRYpdxN+vW6uzJ9obcVS88N2LR6S/
KKt+sc9vxEt9QeuCH5PPqydgKroRX7j/Ph3/lNwHvR79NhcaMTF8OHQhmQ/o
Bm9C9Ucb8Jrqkdc0Un/bs2mnbZsb8JCDrpfNawqv8i/1jchtwNyFy07+jqYw
TStOcPeDBjxR0LrXPIH45frDZLNVDSi0jz4ink78m9d1R4ivAfXowjvVMsl9
UOH6pra/Hhe4aW93IP3kWpBfnX9GPVZvDHgv9Y3Uc0mbcKVhPUpsakl3JP1q
ZmlTKd/2epS1eE7TqKUwevbWK33Jejyt6GG9spHCj2mdJ2YZdVhxRdNzRSe5
7z0L50p61qHbt9KvK4ZIvWTMvtazq8W29jnCm5YOYtivWSETtVp8VDp2wlhy
EGfn/8e8Sm54esWn237Sg/g8U9i4L7YGRZr0rLQ3DGLZyVdUbGc1WhWVBqRr
DaK7D0Ns/GgVclMmqpMdBvHh7TCTiTVVuPqMa99m10EMdjh5f+5oJeZqH/b7
fmcQGQ49i3Y+q8RiEUm77Y8H8faROYt5FRX4vvPVhPDbQfTYIXlF88BP3PfX
oz6vbxDXqR1PuiH2E8UfnDmiTg3iyl1D3OTOcvRsWtVVxRvEvjvN68Sdy1Gu
7EKE1jwOZn+LuZcZXYYbvy79rbGBgx+y/4g4j5fg+jjl1x4uHLy+XvuaRkQx
Zhue02StGkKVTuMzq5Zl4757scN90cNY/+Q//u8JWch1SPFhJg2jlrPCSynV
LLxu+NGSmzWM1LL+ey0nv+DDbbWZK2uHcZtTUKv9q0zsn6vGyJkdRkb+j9kn
gunoE1p+rJfsZUd/7zSt1o3F3+bHlZI2cPHYaGVSr/EbDIO5wXw7uaiP2lmX
sqLxlsZiezMdLopeSs7ezYjANcqXtSZOcXHeWjNp9qYQNO7tVFr8hIvP/z5d
1Rx0Fd33bDbczeFi2etUrsTqKAjxfPwtzXQU+W+2JIorxsClkhce+81HMeiU
4prciDcgUy7P12Q1ii9k1jRs+BAHPsfPY6/dKP5uct+6tuYdJObbNL+9N4oz
R4YHvqp9hKSx/X0VH0bxTpJGf//adEh64P5rMG0U77e0JuukpMMKb7Urcz+P
Yt0+03m0b59gVaXcyPKCUfyovEyziJkJNxZMGjbUj2Kmo5v5CZ0c2CYRV+A8
MYoiSXb586pzYHbWct6fyVGsKW+9/Nv8KzgfcndwnsPDNpWqX9E3ciFIUm2r
3kIerjA/YzGakg+U1Zuki1I83M9kpUbv+QbSWO0UtJqHX9suh/pVfIMUa9bR
j/I8NFUWXLyIKoD1G70Z5Zt4uM7Xz9PsRSFMvpP6abubh+FKPw4EdBXCo7UR
1FZtHvbtbnjWva4ITnJGNnJ0eUgTKjhX/qUIJiwFn+424OFQ7FZaVlsxqN5k
vtY4ycMju7zqnORLYPbH8ECMEw/braOLVZxLQPKxrESlCw89qeBdC4tLQOzR
HEGWG4lPcOwA26YUCgV605kePNzjYWhkHVcGlpalWaJ+PPw2oPw0eqwMrB2W
P0l9wsO1PdnXqb3lIFGyTFEjgMS/J/19NKMc/DMmzFY+52Fw8Jlke4UKyBqN
s/0XwcPtOwclea4V8MXy0JN5UTws0Q/771ZpBdgOL4v5G81Ddcseo+e2lRB+
I3FPShwPV970GZTLqYTPQiIhlxN4+J/rLd2MBVWgF/nzzpJ3JD4jixP1H6rg
Wsrqdxs/8HDvv7vKVv+qwGXmRl5oEg8f9zv8GTCshrwzkQt5ySQfhzegfWQ1
mGcX3lFLJb+/sj1ghFMNqdWR03ZpPMw4+9fBTrMG1vZeveP3kYex/YbXuv1r
oF//L+15Og99P7GfGXTXQMbq0NWPPxGOO9KbsqUW/KtWy17N4KHuSoeLgp61
cD3mX716Jg9N3iRsPFFTC/NOSa8fIyxwdFjykGgdLM+Yu+jVZx7qLy3W+b8a
zjyayu6L44aSIVRCFI1oLkkq1U6lyRyllAiREomMaVARpfdVUoaIytBrTq6E
TcIbZbi4xutOLtd8nydJRL/n/eP352edddbaZ+/93eecddbZLnoNoCEovKL1
nrK3ihEZaNcANO3WQ68oTtMVf3Q/tAEe77pzW7qAQCWNcVpEdgPUvrwib0ux
TsXOx+GtDVBuxuHFUiyptCfxxp8GqJt+Q1RQ3HfJ6pyrViM0h6ivb6P4Ql2p
zVGzRkgy2RnaSvFCvxzZ5b6NIB/t97Oc4sNGVr+HEhqB0y7wfEYx7Sg9LbOq
EYIXrRuypnhG4fhTh5FGcF5+5Yw4xek28gdklOiwrd3/Qwxl70EnA73U3XRA
/7hJVYo97u0hdM/T4cnXD8qh1HoPJ14dK3hIB1t7I6luyh+D8S4Va/Lp8Lvw
5L9LKe4S1rAjOulgGnDd1Jjy560FXvVcsSZ4FcF76kj5W33KacHqtU0wZWAS
c56KR19S+3pbiybgOctYHaPiJe27P/m2XxPMcxD7tIaKJ4tpOR6V2AT/QDpr
MIPA2lthR0OGm+C1WZn6Zio/RP2DLB0XNoNwxW/9vDQCHzqWGW/Qb4ZfijdF
lqYSqDYdrhFyvxk48yCo8BVlb27RteCMZtBx/S41m8pP9Yfl990amuH5HvU/
e14SGH8u/rLkohYIWWqzOjCewGmla4Ef9FsAcg3sg6j895nR/XzCrgXqHxlL
Xn5O4Jad6cFWKS2wlNjxfmEUgYpZN/Tyv7SApKpL+ddIAp8uDH8zM9QCjCBj
46t/EXi72nbzMR0GkG8fEfco/UXYeuX2lzJAJmC2SsNNAsXfX2BGcRiwIFyC
Nkbpd9GT5BatWa3wj8TV2XMCKL3KhpWKH2kFvx635jFK/23TpfFhja1wJDp5
+7gzgf0NLyxcv7cCaOZZhTkSmDnRJLVRsQ3e/vX1srQ9gV8/yqw/f7IN3MyN
KhknCdTj7Ptxi9kGEx+PO8ZQ9ed1MiPo5kwbhF/G0heGBNrK8S/ZL20HfoX0
jb+pevUz87Pev/btcEPkiKPBDgJLTerGNbnt4KlsH0jXItCqVUVus1gHJERJ
pxitJNBzZbW6yooOWCBXmP+Oqp/25Q4S4ec6oI24WmmuSGDis8/KrO4OeJeY
VVwmSqDLtK4ae7oD6NKysu9+C/H27+m+0iWd4Pi2uD2KqudW3X6VC206wfmT
mr7WMDU+Xpug2tQJmzLEfMNahRiTyVC1Ke0Cl3HtYmtqP9Fs9y+4xeyCthvs
JTXJQlTqvVAX8LsL1Bwm69fGC7EsadhfsIMJVaRjHu2REM2HtQ69ymNCduLM
cnEvIWqIvt53Ia4bThZwam5uF+IZq61lGbRuCJe3LO7bLESHh7Miy5u6gS7b
YbB3jRA/Xa2PPy3DgrFIx5QKFSGqzrvcaOLHAnf2ywubx0bRQ7pYNnwVG25e
2vBx+5VRPGyeYLpamw2szzRDA7tR1J66JpK1mw1OBtWrN5uOYkqVTZrHCTZI
Hbxr/WndKPrFxLfUhrBBcr6d9Cf+CNZdPDqvn8uGk8auhUHHR1Dvxvu/ZobZ
cKw/vF5x/wjuZG7NmZpgg5yE50DM5hHUSmkQyZTjQN/ieckuMiN4f7z16PB2
DkQ0tDuuLBtG3SnxDvI+BzwSNXQ8NIexyfvszJnHHKhS4rBMFYYxTS20ICeO
A03630SWiwxjao//fsUsDuh3VEontA9hkGhjSksjB6q1PbVnPxxCGx+LSWNF
LtBGVUxbRwYxbImKl+1//+/t17ZIdg6iN2xxPKXBBeZwX+CW6kEcvrNgz0Jd
LhS1rv7bI3EQ9Tb7q8ZacqFzg+nLWLNBXBH4vVw6ggvNtLAFYtkD+CnUMIP/
hAuqzwkLVuwAXlFeS8uK5YIggbatKGQAB3qEhEwaNf/cxKGLZwcwfKzDd6Kc
C9Ilbh3FsgM4+W5NdTXJBbt386e93ajz66KbA3VHeDCYRhd1XC/A2XrfyNum
PHgyPiunT0WAnqQubZ0lD54Fi/RcnSPADT3DRk5neKAvOIovuH24Q6Q/1sOd
BxB4wcoopg9X8wtclkbyIMN4U/VWyT5clsrI8KbzwNQ4uz5mmI+64jR3NwYP
liXtOnesi48XJCUXO3TwYOo801e5lo8TXv0rDv/X/+GHX211Gh+TXHYFzyZ5
kBKgKVXpxMcK3pz1AfN7oO/RpWgzVg9mhGa5jVr0QI2xOtOdxUM9lbbaqyd6
oK43Ry+1jodvImKCf9v0wKtY1jGyhIfXq1rUVjn1gLSXrWp5PI86Jz6T+erT
A4Udbzn7TvOQjE57V/KiB76NjeXxOrk4hxbj9W9yDwye0LE2+8rFUOOpP8zU
HtjjzQipK+bi1xmTiLV5PTA1+fz5nAQu/hugWEPdRaGo4H250zkuhsk0xUqP
9UBOTUHXl0EO5oe0dLN/9cAJzvel7kwOqr3G0co/PVDlpVKmUc9BrzIVpxIZ
PkR5nR2oy+PgkjhRvssqPiz2Eg+YE8jB9waF3KK1fHA7s2+P4WUOJkVmealr
88G4UG3kqR0Hg+WcNBbt4QN+Z1Z5HOCg3fBu/86TfKhyi9MUl+egtMTa6kI7
PjQNqS1iiHKw+/pigzRnPtDogqMfx9jY5sr0KfXmQ74EU+6/9y1BYsDw10g+
2N2AxVGpbGzaXe/6rJ4PJpKPx+4cYOPdLeoiK1r5YHPF89zOHWwEDceM0m4+
BJa4SPzZwEZGISd/4wgf/BZfCspTZmNdVJ39kGwv3LHdfTColYVahFwyad4L
c02P2cWvZ6FEwg7xt6d6wd1kbH2uMgs3ScizvB16IbWkaFG3GAtTdQSGht69
MLpk48Kb7d3oezfKjv68F9inkgebQ7txd7xXdiq/F/LEgvmhAiZauWFo/Ggv
LN0afmWimYnDi6SC3vzqhVmCBFZgORPdI11qv8v2QeLPlaJFsUwcX9KwMliv
D6xCSsykTJkYe2jgutOjPrhgtH5hMq0Lo7IZmdJGAljTeSp2flQnnppQ1dW3
FsC+WX2pN4M70X/WwR9BjgJYdkR8ydiVTrS9J1Wz47oAfAY/5Y6YdKJdRTTc
zxKA/q+VnKWSnehX1IyuSv1AN0zzXxLUgVfEHZY7kf3AsAnybHBuxy0/57qq
0wfBidPwj8WqVjwdo6SoxBuE/kUeB2rkW9Ff4uxdpbFBSLqpo75pioFzFNrc
NisNQUy1lGRxIwM1P+cGo80QZL5Zt6AtiIE2IUXpovwh8PWZe6W6sQUDtv2K
zJkahvSParO2Ojfj+LcHXaqyI6BTpR0RZtqMZrPonGD1Ebg/nL6yfFsz5uHi
xKMGI6Ds6RbWItGMFnfyXbJCRsC1HaYfvmnCiPKF967OG4UTT9jXpZh0tG9a
UZ4oJwRn01/tS3UaMXWFxaGDSkJIT1U8r6/SiNESnbd71YRgoqPevv1PA36T
RW+FDUKIIRxPttc0YNHnqV+qRkLYkfl6Jtu+AZf9LJ8uuSeE45uuX3OSrccR
1YB9ww+FAPfPWLe01OGPh61VClFCkNjnN0c6oQ4zVheMGSYLQcN3QgM31OHz
489oO0uF4JOiv+700W+4yV+798CYEFba7Ijz86vFmQjyAmNSCK0TPiq6u2tR
pG2m+YwoAYYme6tporXo/9ao/ZAcAYqT7nHzwmswylc557EWAfUSp2SUn3/B
D2KJOkxrArb6BoS/T69G9bSLvAxbAgYWrVH4cbEaI2KzT3g4ElCZKrz2Z101
6pr5Snx1J+DbLc29PplVuPfF9fmcuwTsfXnn2XhmJY4mVgrPZhFAs1TzSnhT
ge5Jdr+Z7wgwmSUpIX+mAk8GvVpz9AMBXdEqXYYLKnBX6XWz/goCynIfSEvd
+ISrk4py9rQRsD/GUuXXsXKUjQ7NWsEkYDxZ2iZ7TjnmitSlkhwCGDV20drF
ZZjm8ET8xCABVXV/5F+sKkPZoR8lmtOUPassBEa9JTj2hU44i5Lg8O5R+yvj
EnzaKKr2eDYJNp/+8nuZV4wlvYOcNFkSdBfrez0K+ogl5++KtSwhYU3VLZ3L
8h+Qo/3oi+syEhy5h41UvQrxwQujNMFKElgqX3r8GTS8Pd/58Ou1JAg/nKFb
xxegTPtsn3l6JOyfyG0tX5WPYkyHU993kKC1fnL5tpB3aK53Nw53kcDtZb27
1JeHv51vDirsI2Gf5xmzFem52JWSQo87QILElrzNqVK5qPD3xtq5h0jo3/1d
8odrDjIYc9+mG5Egt/9La69lFnrvanNvMSFBY+pZtZlCJlamjIoOmJFwaxnt
lA39H0w/v9j6myUJAcU0EyezdDRYwPkdd5wERdXmrEuyabj1wYntltYkSH8+
lrOqNgW3q07tCbQh4cFCi9KPhq9xyHzN98HTJIj3xgiSxF5hoJ+EvKEtCbV/
PEeOYBLGqJTeDzlLglXl+15a4EuMStayzrEjweLxOgbLIwHryqs8P9mT0Li7
etNQXxzGfqhtKD5HgvKSEuUXdjF4OVPhcqIDCVutRBomGdF4XrB670VHEjTj
IhNkTaNQXW3/ATUnEoJ+KX9jfo5ERsIh70KK7zWT5n0+j5Dz5Eut/nkSPqT0
imQ7hqHDculDqRRvzD5vutL8Llr/PcGdpHhyY35Fut8NZF7a8mKbMwkc+65v
aebe+Pm5uLcNxUY7yY015k74//6JSdtWLWcZ5Rf/D9Zahok=
           "]]},
         Annotation[#, "Charting`Private`Tag$14915#1"]& ]}, {}},
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0.5, 1.5}, {1.5, 0.4999999999999716}},
      Method->{
       "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "ScalingFunctions" -> None},
      PlotRange->{{-0.9856259811876102, 1.15}, {-1.1071397517593384`, 
       1.107141757133728}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {701.9279116851906, -123.20707266475416},
      ImageScaled[{0.5, 0.5}], {226.41489345278444, 234.68013840905556}]}, {}},
  ImageSize->Full,
  PlotRange->{{0, 840.8764749930011}, {-246.41414532950833`, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.8448372799961004`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"4d6fdbd4-71c1-47c7-ae48-a4f8d6165f2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"PolyhedronData", "/@", 
     RowBox[{"PolyhedronData", "[", "\"\<Compound\>\"", "]"}]}], ",", "5"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8448474738202662`*^9, 3.844847507339337*^9}, {
  3.8448475384404593`*^9, 3.844847561651294*^9}, {3.844847688502746*^9, 
  3.8448477341361933`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"eb9fb285-b570-410c-b94b-286c71d0c52b"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
            Rational[1, 2]}, {(Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], (Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 5 #^2 + 5 #^4& , 3, 0], 
           0, (Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[1, 8] + Rational[-1, 8] 5^Rational[-1, 2])^
           Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (1 - 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 - 5^Rational[1, 2]), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2],
            Rational[1, 4] (-1 + 5^Rational[1, 2]), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], (Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], (Rational[1, 4] + Rational[-1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[-1, 2],
            Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2],
            Rational[1, 2], 
           Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 5 #^2 + 5 #^4& , 1, 0], 0, 
           Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2], 
           0, (Rational[1, 4] + Rational[-1, 2] 5^Rational[-1, 2])^
           Rational[
            1, 2]}}, {{-0.16245984811645317`, -0.5, -0.6881909602355868}, \
{-0.16245984811645317`, 0.5, -0.6881909602355868}, {
          0.16245984811645317`, -0.5, 0.6881909602355868}, {
          0.16245984811645317`, 0.5, 
          0.6881909602355868}, {-0.5257311121191336, 
           0, -0.6881909602355868}, {
          0.5257311121191336, 0, 
           0.6881909602355868}, {-0.2628655560595668, -0.8090169943749475, \
-0.16245984811645317`}, {-0.2628655560595668, 
          0.8090169943749475, -0.16245984811645317`}, {
          0.2628655560595668, -0.8090169943749475, 0.16245984811645317`}, {
          0.2628655560595668, 0.8090169943749475, 
          0.16245984811645317`}, {-0.42532540417601994`, \
-0.30901699437494745`, 0.6881909602355868}, {-0.42532540417601994`, 
          0.30901699437494745`, 0.6881909602355868}, {
          0.42532540417601994`, -0.30901699437494745`, -0.6881909602355868}, {
          0.42532540417601994`, 
          0.30901699437494745`, -0.6881909602355868}, {-0.6881909602355868, \
-0.5, 0.16245984811645317`}, {-0.6881909602355868, 0.5, 
          0.16245984811645317`}, {
          0.6881909602355868, -0.5, -0.16245984811645317`}, {
          0.6881909602355868, 
          0.5, -0.16245984811645317`}, {-0.8506508083520399, 
           0, -0.16245984811645317`}, {
          0.85065080835204, 0, 0.16245984811645317`}}], 
        Polygon3DBox[{{19, 11, 4, 8}, {14, 20, 9, 1}, {19, 1, 9, 11}, {4, 20, 
         14, 8}, {19, 8, 14, 1}, {9, 20, 4, 11}, {7, 3, 12, 19}, {2, 10, 20, 
         13}, {12, 10, 2, 19}, {7, 13, 20, 3}, {2, 13, 7, 19}, {12, 3, 20, 
         10}, {5, 15, 12, 8}, {18, 6, 9, 13}, {5, 13, 9, 15}, {12, 6, 18, 
         8}, {5, 8, 18, 13}, {9, 6, 12, 15}, {7, 11, 16, 5}, {14, 10, 6, 
         17}, {16, 10, 14, 5}, {7, 17, 6, 11}, {14, 17, 7, 5}, {16, 11, 6, 
         10}, {15, 16, 2, 1}, {17, 18, 4, 3}, {15, 3, 4, 16}, {2, 18, 17, 
         1}, {15, 1, 17, 3}, {4, 18, 2, 16}}]]], {195., -233.8125}, 
      ImageScaled[{0.5, 0.5}], {360, 361},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{Rational[-5, 6], Rational[-1, 6], Rational[-1, 6]}, {
          Rational[-5, 6], Rational[-1, 6], Rational[1, 6]}, {
          Rational[-5, 6], Rational[1, 6], Rational[-1, 6]}, {
          Rational[-5, 6], Rational[1, 6], Rational[1, 6]}, {
          Rational[-1, 2], Rational[-1, 2], Rational[-1, 2]}, {
          Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}, {
          Rational[-1, 2], Rational[1, 2], Rational[-1, 2]}, {
          Rational[-1, 2], Rational[1, 2], Rational[1, 2]}, {
          Rational[-1, 6], Rational[-5, 6], Rational[-1, 6]}, {
          Rational[-1, 6], Rational[-5, 6], Rational[1, 6]}, {
          Rational[-1, 6], Rational[-1, 6], Rational[-5, 6]}, {
          Rational[-1, 6], Rational[-1, 6], Rational[5, 6]}, {
          Rational[-1, 6], Rational[1, 6], Rational[-5, 6]}, {
          Rational[-1, 6], Rational[1, 6], Rational[5, 6]}, {
          Rational[-1, 6], Rational[5, 6], Rational[-1, 6]}, {
          Rational[-1, 6], Rational[5, 6], Rational[1, 6]}, {
          Rational[1, 6], Rational[-5, 6], Rational[-1, 6]}, {
          Rational[1, 6], Rational[-5, 6], Rational[1, 6]}, {
          Rational[1, 6], Rational[-1, 6], Rational[-5, 6]}, {
          Rational[1, 6], Rational[-1, 6], Rational[5, 6]}, {
          Rational[1, 6], Rational[1, 6], Rational[-5, 6]}, {
          Rational[1, 6], Rational[1, 6], Rational[5, 6]}, {
          Rational[1, 6], Rational[5, 6], Rational[-1, 6]}, {
          Rational[1, 6], Rational[5, 6], Rational[1, 6]}, {
          Rational[1, 2], Rational[-1, 2], Rational[-1, 2]}, {
          Rational[1, 2], Rational[-1, 2], Rational[1, 2]}, {
          Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {
          Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
          Rational[5, 6], Rational[-1, 6], Rational[-1, 6]}, {
          Rational[5, 6], Rational[-1, 6], Rational[1, 6]}, {
          Rational[5, 6], Rational[1, 6], Rational[-1, 6]}, {
          Rational[5, 6], Rational[1, 6], Rational[1, 6]}}, CompressedData["
1:eJxTTMoPSmViYGBQAGJmIF69CgRe7Q8Fg6NwGoe4PZq4PQ71MHF7BjB4sJ9I
Gl09Lv0wcVz24/KHPQF5dHF09ej+RxdHdw8u++DhQ6S5GOFKyH9E2oMujouP
y5/2RMYTRrwRK09kOOJ0H6HwAABYCUC2
         "]], 
        Polygon3DBox[{{28, 15, 4, 12}, {28, 12, 18, 29}, {28, 29, 21, 15}, {
         15, 21, 5, 4}, {5, 21, 29, 18}, {4, 5, 18, 12}, {26, 31, 24, 14}, {
         26, 14, 2, 9}, {26, 9, 19, 31}, {31, 19, 7, 24}, {7, 19, 9, 2}, {24, 
         7, 2, 14}, {8, 1, 10, 20}, {8, 20, 32, 23}, {8, 23, 13, 1}, {1, 13, 
         25, 10}, {25, 13, 23, 32}, {10, 25, 32, 20}, {6, 17, 30, 22}, {6, 22,
          16, 3}, {6, 3, 11, 17}, {17, 11, 27, 30}, {27, 11, 3, 16}, {30, 27, 
         16, 22}}]]], {585., -233.8125}, ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{-2^Rational[-1, 2], Rational[-1, 2], 0}, {-2^Rational[-1, 2],
            0, Rational[-1, 2]}, {-2^Rational[-1, 2], 0, Rational[
           1, 2]}, {-2^Rational[-1, 2], Rational[1, 2], 0}, {
          Rational[-1, 2], -2^Rational[-1, 2], 0}, {
          Rational[-1, 2], Rational[-1, 2], Rational[-1, 2]}, {
          Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}, {
          Rational[-1, 2], 0, -2^Rational[-1, 2]}, {
          Rational[-1, 2], 0, 2^Rational[-1, 2]}, {
          Rational[-1, 2], Rational[1, 2], Rational[-1, 2]}, {
          Rational[-1, 2], Rational[1, 2], Rational[1, 2]}, {
          Rational[-1, 2], 2^Rational[-1, 2], 0}, {
          0, -2^Rational[-1, 2], Rational[-1, 2]}, {
          0, -2^Rational[-1, 2], Rational[1, 2]}, {
          0, Rational[-1, 2], -2^Rational[-1, 2]}, {
          0, Rational[-1, 2], 2^Rational[-1, 2]}, {
          0, Rational[1, 2], -2^Rational[-1, 2]}, {
          0, Rational[1, 2], 2^Rational[-1, 2]}, {
          0, 2^Rational[-1, 2], Rational[-1, 2]}, {
          0, 2^Rational[-1, 2], Rational[1, 2]}, {
          Rational[1, 2], -2^Rational[-1, 2], 0}, {
          Rational[1, 2], Rational[-1, 2], Rational[-1, 2]}, {
          Rational[1, 2], Rational[-1, 2], Rational[1, 2]}, {
          Rational[1, 2], 0, -2^Rational[-1, 2]}, {
          Rational[1, 2], 0, 2^Rational[-1, 2]}, {
          Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {
          Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
          Rational[1, 2], 2^Rational[-1, 2], 0}, {
          2^Rational[-1, 2], Rational[-1, 2], 0}, {
          2^Rational[-1, 2], 0, Rational[-1, 2]}, {
          2^Rational[-1, 2], 0, Rational[1, 2]}, {
          2^Rational[-1, 2], Rational[1, 2], 0}}, {{-0.7071067811865475, -0.5,
            0}, {-0.7071067811865475, 0, -0.5}, {-0.7071067811865475, 0, 
           0.5}, {-0.7071067811865475, 0.5, 0}, {-0.5, -0.7071067811865475, 
           0}, {-0.5, -0.5, -0.5}, {-0.5, -0.5, 
          0.5}, {-0.5, 0, -0.7071067811865475}, {-0.5, 0, 
           0.7071067811865475}, {-0.5, 0.5, -0.5}, {-0.5, 0.5, 
          0.5}, {-0.5, 0.7071067811865475, 0}, {
          0, -0.7071067811865475, -0.5}, {0, -0.7071067811865475, 0.5}, {
          0, -0.5, -0.7071067811865475}, {0, -0.5, 0.7071067811865475}, {
          0, 0.5, -0.7071067811865475}, {0, 0.5, 0.7071067811865475}, {
          0, 0.7071067811865475, -0.5}, {0, 0.7071067811865475, 0.5}, {
          0.5, -0.7071067811865475, 0}, {0.5, -0.5, -0.5}, {0.5, -0.5, 0.5}, {
          0.5, 0, -0.7071067811865475}, {0.5, 0, 0.7071067811865475}, {0.5, 
          0.5, -0.5}, {0.5, 0.5, 0.5}, {0.5, 0.7071067811865475, 0}, {
          0.7071067811865475, -0.5, 0}, {0.7071067811865475, 0, -0.5}, {
          0.7071067811865475, 0, 0.5}, {0.7071067811865475, 0.5, 0}}], 
        Polygon3DBox[{{30, 19, 2, 13}, {31, 20, 3, 14}, {2, 3, 14, 13}, {19, 
         20, 3, 2}, {30, 31, 14, 13}, {19, 20, 31, 30}, {29, 16, 1, 15}, {32, 
         18, 4, 17}, {17, 4, 1, 15}, {4, 18, 16, 1}, {17, 32, 29, 15}, {32, 
         18, 16, 29}, {24, 21, 5, 8}, {21, 25, 9, 5}, {24, 28, 12, 8}, {28, 
         25, 9, 12}, {12, 9, 5, 8}, {28, 25, 21, 24}, {22, 26, 10, 6}, {23, 
         27, 11, 7}, {22, 23, 7, 6}, {26, 27, 11, 10}, {10, 11, 7, 6}, {26, 
         27, 23, 22}}]]], {975., -233.8125}, ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{-1, 0, 0}, {
          Rational[-1, 2], Rational[-1, 2], Rational[-1, 2]}, {
          Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}, {
          Rational[-1, 2], Rational[1, 2], Rational[-1, 2]}, {
          Rational[-1, 2], Rational[1, 2], Rational[1, 2]}, {0, -1, 0}, {0, 
          0, -1}, {0, 0, 1}, {0, 1, 0}, {
          Rational[1, 2], Rational[-1, 2], Rational[-1, 2]}, {
          Rational[1, 2], Rational[-1, 2], Rational[1, 2]}, {
          Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {
          Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {1, 0, 0}}, {{-1, 
          0, 0}, {-0.5, -0.5, -0.5}, {-0.5, -0.5, 0.5}, {-0.5, 
          0.5, -0.5}, {-0.5, 0.5, 0.5}, {0, -1, 0}, {0, 0, -1}, {0, 0, 1}, {0,
           1, 0}, {0.5, -0.5, -0.5}, {0.5, -0.5, 0.5}, {0.5, 0.5, -0.5}, {0.5,
           0.5, 0.5}, {1, 0, 0}}], 
        Polygon3DBox[{{13, 5, 3, 11}, {13, 11, 10, 12}, {13, 12, 4, 5}, {5, 4,
           2, 3}, {2, 4, 12, 10}, {3, 2, 10, 11}, {1, 7, 6}, {8, 1, 6}, {7, 1,
           9}, {8, 9, 1}, {6, 7, 14}, {6, 14, 8}, {7, 9, 14}, {8, 14, 
          9}}]]], {1365., -233.8125}, ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 4] (1 - 5^Rational[1, 2]), 0}, {
          Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 4] (-1 + 5^Rational[1, 2]), 0}, {
          Root[1 - 5 #^2 + 5 #^4& , 1, 0], 0, Root[
           1 - 5 #^2 + 5 #^4& , 2, 0]}, {
          Root[1 - 5 #^2 + 5 #^4& , 1, 0], 0, 
           Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], Root[1 - 5 #^2 + 5 #^4& , 3, 0]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], Root[1 - 5 #^2 + 5 #^4& , 3, 0]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], (Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], (Rational[1, 4] + Rational[-1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[-1, 4] (10 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), 0}, {
          Rational[-1, 4] (10 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), 0}, {
          Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 5 #^2 + 5 #^4& , 2, 0], 
           0, (Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (1 - 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
           1 - 5 #^2 + 5 #^4& , 1, 0]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
           1 - 5 #^2 + 5 #^4& , 1, 0]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 5 #^2 + 5 #^4& , 2, 0]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 5 #^2 + 5 #^4& , 2, 0]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], (Rational[1, 10] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]}, {
          Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], (Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
          0, -1, 0}, {0, 1, 0}, {
          Rational[1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], Root[1 - 5 #^2 + 5 #^4& , 1, 0]}, {
          Rational[1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], Root[
           1 - 5 #^2 + 5 #^4& , 1, 0]}, {(Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], (Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 5 #^2 + 5 #^4& , 3, 0]}, {
          Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 5 #^2 + 5 #^4& , 3, 0]}, {(Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 - 5^Rational[1, 2]), (
            Rational[1, 10] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 - 5^Rational[1, 2]), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2],
            Rational[1, 4] (-1 + 5^Rational[1, 2]), (
            Rational[1, 10] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 + 5^Rational[1, 2]), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
           1 - 5 #^2 + 5 #^4& , 1, 0]}, {
          Root[1 - 5 #^2 + 5 #^4& , 3, 0], 
           0, (Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[1, 4] (10 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), 0}, {
          Rational[1, 4] (10 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           0}, {(Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2], Rational[-1, 2], 
           Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2],
            Rational[1, 2], 
           Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], Root[1 - 5 #^2 + 5 #^4& , 2, 0]}, {
          Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], Root[
           1 - 5 #^2 + 5 #^4& , 2, 0]}, {(
            Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2], 
           0, (Rational[1, 4] + Rational[-1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 10] (5 + 5^Rational[1, 2]))^
           Rational[1, 2], 0, Root[
           1 - 5 #^2 + 5 #^4& , 3, 0]}, {(Rational[5, 8] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 - 5^Rational[1, 2]), 
           0}, {(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2], Rational[1, 4] (-1 + 5^Rational[1, 2]), 
           0}}, {{-0.9510565162951535, -0.30901699437494745`, 
           0}, {-0.9510565162951535, 0.30901699437494745`, 
           0}, {-0.8506508083520399, 
           0, -0.5257311121191336}, {-0.8506508083520399, 
           0, -0.16245984811645317`}, {-0.6881909602355868, -0.5, 
          0.5257311121191336}, {-0.6881909602355868, 0.5, 
          0.5257311121191336}, {-0.6881909602355868, -0.5, 
          0.16245984811645317`}, {-0.6881909602355868, 0.5, 
          0.16245984811645317`}, {-0.5877852522924731, 0.8090169943749475, 
           0}, {-0.5877852522924731, -0.8090169943749475, 
           0}, {-0.5257311121191336, 
           0, -0.6881909602355868}, {-0.5257311121191336, 0, 
           0.85065080835204}, {-0.42532540417601994`, -0.30901699437494745`, 
          0.6881909602355868}, {-0.42532540417601994`, -0.30901699437494745`, \
-0.8506508083520399}, {-0.42532540417601994`, 0.30901699437494745`, 
          0.6881909602355868}, {-0.42532540417601994`, 
          0.30901699437494745`, -0.8506508083520399}, {-0.2628655560595668, \
-0.8090169943749475, -0.5257311121191336}, {-0.2628655560595668, 
          0.8090169943749475, -0.5257311121191336}, {-0.2628655560595668, \
-0.8090169943749475, -0.16245984811645317`}, {-0.2628655560595668, 
          0.8090169943749475, -0.16245984811645317`}, {-0.16245984811645317`, \
-0.5, -0.6881909602355868}, {-0.16245984811645317`, 
          0.5, -0.6881909602355868}, {-0.16245984811645317`, -0.5, 
          0.85065080835204}, {-0.16245984811645317`, 0.5, 0.85065080835204}, {
          0, -1, 0}, {0, 1, 0}, {
          0.16245984811645317`, -0.5, -0.8506508083520399}, {
          0.16245984811645317`, 0.5, -0.8506508083520399}, {
          0.16245984811645317`, -0.5, 0.6881909602355868}, {
          0.16245984811645317`, 0.5, 0.6881909602355868}, {
          0.2628655560595668, -0.8090169943749475, 0.16245984811645317`}, {
          0.2628655560595668, 0.8090169943749475, 0.16245984811645317`}, {
          0.2628655560595668, -0.8090169943749475, 0.5257311121191336}, {
          0.2628655560595668, 0.8090169943749475, 0.5257311121191336}, {
          0.42532540417601994`, -0.30901699437494745`, 0.85065080835204}, {
          0.42532540417601994`, -0.30901699437494745`, -0.6881909602355868}, {
          0.42532540417601994`, 0.30901699437494745`, 0.85065080835204}, {
          0.42532540417601994`, 0.30901699437494745`, -0.6881909602355868}, {
          0.5257311121191336, 0, -0.8506508083520399}, {
          0.5257311121191336, 0, 0.6881909602355868}, {
          0.5877852522924731, 0.8090169943749475, 0}, {
          0.5877852522924731, -0.8090169943749475, 0}, {
          0.6881909602355868, -0.5, -0.16245984811645317`}, {
          0.6881909602355868, 0.5, -0.16245984811645317`}, {
          0.6881909602355868, -0.5, -0.5257311121191336}, {0.6881909602355868,
           0.5, -0.5257311121191336}, {
          0.85065080835204, 0, 0.16245984811645317`}, {
          0.85065080835204, 0, 0.5257311121191336}, {
          0.9510565162951535, -0.30901699437494745`, 0}, {
          0.9510565162951535, 0.30901699437494745`, 0}}], 
        Polygon3DBox[{{4, 13, 30, 20}, {38, 47, 31, 21}, {4, 21, 31, 13}, {30,
           47, 38, 20}, {4, 20, 38, 21}, {31, 47, 30, 13}, {19, 29, 15, 4}, {
          22, 32, 47, 36}, {15, 32, 22, 4}, {19, 36, 47, 29}, {22, 36, 19, 
          4}, {15, 29, 47, 32}, {11, 7, 15, 20}, {44, 40, 31, 36}, {11, 36, 
          31, 7}, {15, 40, 44, 20}, {11, 20, 44, 36}, {31, 40, 15, 7}, {19, 
          13, 8, 11}, {38, 32, 40, 43}, {8, 32, 38, 11}, {19, 43, 40, 13}, {
          38, 43, 19, 11}, {8, 13, 40, 32}, {7, 8, 22, 21}, {43, 44, 30, 
          29}, {7, 29, 30, 8}, {22, 44, 43, 21}, {7, 21, 43, 29}, {30, 44, 22,
           8}, {45, 10, 16}, {35, 41, 6}, {6, 41, 16}, {35, 10, 45}, {6, 10, 
          35}, {16, 41, 45}, {16, 10, 6}, {45, 41, 35}, {14, 9, 46}, {5, 42, 
          37}, {14, 42, 5}, {46, 9, 37}, {37, 9, 5}, {46, 42, 14}, {5, 9, 
          14}, {37, 42, 46}, {28, 17, 2}, {49, 34, 23}, {2, 34, 28}, {23, 17, 
          49}, {23, 34, 2}, {49, 17, 28}, {2, 17, 23}, {28, 34, 49}, {1, 18, 
          27}, {24, 33, 50}, {27, 33, 1}, {50, 18, 24}, {1, 33, 24}, {27, 18, 
          50}, {24, 18, 1}, {50, 33, 27}, {3, 39, 25}, {26, 39, 3}, {48, 12, 
          25}, {26, 12, 48}, {25, 12, 3}, {3, 12, 26}, {25, 39, 48}, {48, 39, 
          26}}]]], {1755., -233.8125}, ImageScaled[{0.5, 0.5}], {360, 376},
      ContentSelectable->True]}, {InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{-1, 0, 
          0}, {-2^Rational[-1, 2], -2^Rational[-1, 2], 
           0}, {-2^Rational[-1, 2], Rational[-1, 2], 0}, {-2^Rational[-1, 2], 
           0, -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 0, 
           Rational[-1, 2]}, {-2^Rational[-1, 2], 0, Rational[
           1, 2]}, {-2^Rational[-1, 2], 0, 2^
           Rational[-1, 2]}, {-2^Rational[-1, 2], Rational[1, 2], 
           0}, {-2^Rational[-1, 2], 2^Rational[-1, 2], 0}, {
          Rational[-1, 2], -2^Rational[-1, 2], 0}, {
          Rational[-1, 2], 0, -2^Rational[-1, 2]}, {
          Rational[-1, 2], 0, 2^Rational[-1, 2]}, {
          Rational[-1, 2], 2^Rational[-1, 2], 0}, {0, -1, 0}, {
          0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
          0, -2^Rational[-1, 2], Rational[-1, 2]}, {
          0, -2^Rational[-1, 2], Rational[1, 2]}, {
          0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0, Rational[-1, 2], -2^Rational[-1, 2]}, {
          0, Rational[-1, 2], 2^Rational[-1, 2]}, {0, 0, -1}, {0, 0, 1}, {
          0, Rational[1, 2], -2^Rational[-1, 2]}, {
          0, Rational[1, 2], 2^Rational[-1, 2]}, {
          0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
          0, 2^Rational[-1, 2], Rational[-1, 2]}, {
          0, 2^Rational[-1, 2], Rational[1, 2]}, {
          0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {0, 1, 0}, {
          Rational[1, 2], -2^Rational[-1, 2], 0}, {
          Rational[1, 2], 0, -2^Rational[-1, 2]}, {
          Rational[1, 2], 0, 2^Rational[-1, 2]}, {
          Rational[1, 2], 2^Rational[-1, 2], 0}, {
          2^Rational[-1, 2], -2^Rational[-1, 2], 0}, {
          2^Rational[-1, 2], Rational[-1, 2], 0}, {
          2^Rational[-1, 2], 0, -2^Rational[-1, 2]}, {
          2^Rational[-1, 2], 0, Rational[-1, 2]}, {
          2^Rational[-1, 2], 0, Rational[1, 2]}, {
          2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {
          2^Rational[-1, 2], Rational[1, 2], 0}, {
          2^Rational[-1, 2], 2^Rational[-1, 2], 0}, {1, 0, 0}}, {{-1, 0, 
          0}, {-0.7071067811865475, -0.7071067811865475, 
           0}, {-0.7071067811865475, -0.5, 0}, {-0.7071067811865475, 
           0, -0.7071067811865475}, {-0.7071067811865475, 
           0, -0.5}, {-0.7071067811865475, 0, 0.5}, {-0.7071067811865475, 0, 
           0.7071067811865475}, {-0.7071067811865475, 0.5, 
           0}, {-0.7071067811865475, 0.7071067811865475, 
           0}, {-0.5, -0.7071067811865475, 0}, {-0.5, 
           0, -0.7071067811865475}, {-0.5, 0, 0.7071067811865475}, {-0.5, 
           0.7071067811865475, 0}, {0, -1, 0}, {
          0, -0.7071067811865475, -0.7071067811865475}, {
          0, -0.7071067811865475, -0.5}, {0, -0.7071067811865475, 0.5}, {
          0, -0.7071067811865475, 0.7071067811865475}, {
          0, -0.5, -0.7071067811865475}, {0, -0.5, 0.7071067811865475}, {0, 
          0, -1}, {0, 0, 1}, {0, 0.5, -0.7071067811865475}, {
          0, 0.5, 0.7071067811865475}, {
          0, 0.7071067811865475, -0.7071067811865475}, {
          0, 0.7071067811865475, -0.5}, {0, 0.7071067811865475, 0.5}, {
          0, 0.7071067811865475, 0.7071067811865475}, {0, 1, 0}, {
          0.5, -0.7071067811865475, 0}, {0.5, 0, -0.7071067811865475}, {
          0.5, 0, 0.7071067811865475}, {0.5, 0.7071067811865475, 0}, {
          0.7071067811865475, -0.7071067811865475, 0}, {
          0.7071067811865475, -0.5, 0}, {
          0.7071067811865475, 0, -0.7071067811865475}, {
          0.7071067811865475, 0, -0.5}, {0.7071067811865475, 0, 0.5}, {
          0.7071067811865475, 0, 0.7071067811865475}, {
          0.7071067811865475, 0.5, 0}, {
          0.7071067811865475, 0.7071067811865475, 0}, {1, 0, 0}}], 
        Polygon3DBox[{{33, 13, 12, 32}, {33, 32, 30, 31}, {33, 31, 11, 13}, {
          13, 11, 10, 12}, {10, 11, 31, 30}, {12, 10, 30, 32}, {24, 8, 3, 
          20}, {24, 20, 35, 40}, {24, 40, 23, 8}, {8, 23, 19, 3}, {19, 23, 40,
           35}, {3, 19, 35, 20}, {38, 27, 6, 17}, {38, 17, 16, 37}, {38, 37, 
          26, 27}, {27, 26, 5, 6}, {5, 26, 37, 16}, {6, 5, 16, 17}, {15, 1, 
          25}, {28, 1, 18}, {1, 15, 18}, {28, 25, 1}, {15, 25, 42}, {18, 42, 
          28}, {18, 15, 42}, {28, 42, 25}, {4, 36, 14}, {14, 39, 7}, {36, 4, 
          29}, {7, 39, 29}, {7, 4, 14}, {7, 29, 4}, {14, 36, 39}, {36, 29, 
          39}, {2, 21, 34}, {2, 34, 22}, {21, 9, 41}, {22, 41, 9}, {9, 21, 
          2}, {22, 9, 2}, {21, 41, 34}, {22, 34, 41}}]]], {195., -701.4375}, 
      ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[1, 4] (-2 - 2^Rational[1, 2]), 
           Rational[1, 4] (-2 + 2^Rational[1, 2]), 0}, {
          Rational[1, 4] (-2 - 2^Rational[1, 2]), 0, 
           Rational[1, 4] (-2 + 2^Rational[1, 2])}, {
          Rational[1, 4] (-2 - 2^Rational[1, 2]), 0, 
           Rational[1, 4] (2 - 2^Rational[1, 2])}, {
          Rational[1, 4] (-2 - 2^Rational[1, 2]), 
           Rational[1, 4] (2 - 2^Rational[1, 2]), 0}, {-2^Rational[-1, 2], 
           Rational[-1, 2] 2^Rational[-1, 2], Rational[-1, 2] 
           2^Rational[-1, 2]}, {-2^Rational[-1, 2], Rational[-1, 2] 
           2^Rational[-1, 2], Rational[1, 2] 
           2^Rational[-1, 2]}, {-2^Rational[-1, 2], Rational[1, 2] 
           2^Rational[-1, 2], Rational[-1, 2] 
           2^Rational[-1, 2]}, {-2^Rational[-1, 2], Rational[1, 2] 
           2^Rational[-1, 2], Rational[1, 2] 2^Rational[-1, 2]}, {
          Rational[-1, 2] 2^Rational[-1, 2], -2^Rational[-1, 2], 
           Rational[-1, 2] 2^Rational[-1, 2]}, {
          Rational[-1, 2] 2^Rational[-1, 2], -2^Rational[-1, 2], 
           Rational[1, 2] 2^Rational[-1, 2]}, {
          Rational[-1, 2] 2^Rational[-1, 2], Rational[-1, 2] 
           2^Rational[-1, 2], -2^Rational[-1, 2]}, {
          Rational[-1, 2] 2^Rational[-1, 2], Rational[-1, 2] 
           2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          Rational[-1, 2] 2^Rational[-1, 2], Rational[1, 2] 
           2^Rational[-1, 2], -2^Rational[-1, 2]}, {
          Rational[-1, 2] 2^Rational[-1, 2], Rational[1, 2] 2^Rational[-1, 2],
            2^Rational[-1, 2]}, {
          Rational[-1, 2] 2^Rational[-1, 2], 2^Rational[-1, 2], 
           Rational[-1, 2] 2^Rational[-1, 2]}, {
          Rational[-1, 2] 2^Rational[-1, 2], 2^Rational[-1, 2], 
           Rational[1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 4] (-2 + 2^Rational[1, 2]), 
           Rational[1, 4] (-2 - 2^Rational[1, 2]), 0}, {
          Rational[1, 4] (-2 + 2^Rational[1, 2]), 0, 
           Rational[1, 4] (-2 - 2^Rational[1, 2])}, {
          Rational[1, 4] (-2 + 2^Rational[1, 2]), 0, 
           Rational[1, 4] (2 + 2^Rational[1, 2])}, {
          Rational[1, 4] (-2 + 2^Rational[1, 2]), 
           Rational[1, 4] (2 + 2^Rational[1, 2]), 0}, {
          0, Rational[1, 4] (-2 - 2^Rational[1, 2]), 
           Rational[1, 4] (-2 + 2^Rational[1, 2])}, {
          0, Rational[1, 4] (-2 - 2^Rational[1, 2]), 
           Rational[1, 4] (2 - 2^Rational[1, 2])}, {
          0, Rational[1, 4] (-2 + 2^Rational[1, 2]), 
           Rational[1, 4] (-2 - 2^Rational[1, 2])}, {
          0, Rational[1, 4] (-2 + 2^Rational[1, 2]), 
           Rational[1, 4] (2 + 2^Rational[1, 2])}, {
          0, Rational[1, 4] (2 - 2^Rational[1, 2]), 
           Rational[1, 4] (-2 - 2^Rational[1, 2])}, {
          0, Rational[1, 4] (2 - 2^Rational[1, 2]), 
           Rational[1, 4] (2 + 2^Rational[1, 2])}, {
          0, Rational[1, 4] (2 + 2^Rational[1, 2]), 
           Rational[1, 4] (-2 + 2^Rational[1, 2])}, {
          0, Rational[1, 4] (2 + 2^Rational[1, 2]), 
           Rational[1, 4] (2 - 2^Rational[1, 2])}, {
          Rational[1, 4] (2 - 2^Rational[1, 2]), 
           Rational[1, 4] (-2 - 2^Rational[1, 2]), 0}, {
          Rational[1, 4] (2 - 2^Rational[1, 2]), 0, 
           Rational[1, 4] (-2 - 2^Rational[1, 2])}, {
          Rational[1, 4] (2 - 2^Rational[1, 2]), 0, 
           Rational[1, 4] (2 + 2^Rational[1, 2])}, {
          Rational[1, 4] (2 - 2^Rational[1, 2]), 
           Rational[1, 4] (2 + 2^Rational[1, 2]), 0}, {
          Rational[1, 2] 2^Rational[-1, 2], -2^Rational[-1, 2], 
           Rational[-1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 2] 2^Rational[-1, 2], -2^Rational[-1, 2], 
           Rational[1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 2] 2^Rational[-1, 2], Rational[-1, 2] 
           2^Rational[-1, 2], -2^Rational[-1, 2]}, {
          Rational[1, 2] 2^Rational[-1, 2], Rational[-1, 2] 2^Rational[-1, 2],
            2^Rational[-1, 2]}, {
          Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
           2^Rational[-1, 2], -2^Rational[-1, 2]}, {
          Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 2^Rational[-1, 2], 
           2^Rational[-1, 2]}, {
          Rational[1, 2] 2^Rational[-1, 2], 2^Rational[-1, 2], 
           Rational[-1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 2] 2^Rational[-1, 2], 2^Rational[-1, 2], Rational[1, 2] 
           2^Rational[-1, 2]}, {
          2^Rational[-1, 2], Rational[-1, 2] 2^Rational[-1, 2], 
           Rational[-1, 2] 2^Rational[-1, 2]}, {
          2^Rational[-1, 2], Rational[-1, 2] 2^Rational[-1, 2], 
           Rational[1, 2] 2^Rational[-1, 2]}, {
          2^Rational[-1, 2], Rational[1, 2] 2^Rational[-1, 2], 
           Rational[-1, 2] 2^Rational[-1, 2]}, {
          2^Rational[-1, 2], Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
           2^Rational[-1, 2]}, {
          Rational[1, 4] (2 + 2^Rational[1, 2]), 
           Rational[1, 4] (-2 + 2^Rational[1, 2]), 0}, {
          Rational[1, 4] (2 + 2^Rational[1, 2]), 0, 
           Rational[1, 4] (-2 + 2^Rational[1, 2])}, {
          Rational[1, 4] (2 + 2^Rational[1, 2]), 0, 
           Rational[1, 4] (2 - 2^Rational[1, 2])}, {
          Rational[1, 4] (2 + 2^Rational[1, 2]), 
           Rational[1, 4] (2 - 2^Rational[1, 2]), 
           0}}, {{-0.8535533905932737, -0.1464466094067262, 
           0}, {-0.8535533905932737, 
           0, -0.1464466094067262}, {-0.8535533905932737, 0, 
           0.1464466094067262}, {-0.8535533905932737, 0.1464466094067262, 
           0}, {-0.7071067811865475, -0.35355339059327373`, \
-0.35355339059327373`}, {-0.7071067811865475, -0.35355339059327373`, 
          0.35355339059327373`}, {-0.7071067811865475, 
          0.35355339059327373`, -0.35355339059327373`}, {-0.7071067811865475, 
          0.35355339059327373`, 
          0.35355339059327373`}, {-0.35355339059327373`, -0.7071067811865475, \
-0.35355339059327373`}, {-0.35355339059327373`, -0.7071067811865475, 
          0.35355339059327373`}, {-0.35355339059327373`, \
-0.35355339059327373`, -0.7071067811865475}, {-0.35355339059327373`, \
-0.35355339059327373`, 0.7071067811865475}, {-0.35355339059327373`, 
          0.35355339059327373`, -0.7071067811865475}, {-0.35355339059327373`, 
          0.35355339059327373`, 0.7071067811865475}, {-0.35355339059327373`, 
          0.7071067811865475, -0.35355339059327373`}, {-0.35355339059327373`, 
          0.7071067811865475, 
          0.35355339059327373`}, {-0.1464466094067262, -0.8535533905932737, 
           0}, {-0.1464466094067262, 
           0, -0.8535533905932737}, {-0.1464466094067262, 0, 
           0.8535533905932737}, {-0.1464466094067262, 0.8535533905932737, 
           0}, {0, -0.8535533905932737, -0.1464466094067262}, {
          0, -0.8535533905932737, 0.1464466094067262}, {
          0, -0.1464466094067262, -0.8535533905932737}, {
          0, -0.1464466094067262, 0.8535533905932737}, {
          0, 0.1464466094067262, -0.8535533905932737}, {
          0, 0.1464466094067262, 0.8535533905932737}, {
          0, 0.8535533905932737, -0.1464466094067262}, {
          0, 0.8535533905932737, 0.1464466094067262}, {
          0.1464466094067262, -0.8535533905932737, 0}, {
          0.1464466094067262, 0, -0.8535533905932737}, {
          0.1464466094067262, 0, 0.8535533905932737}, {
          0.1464466094067262, 0.8535533905932737, 0}, {
          0.35355339059327373`, -0.7071067811865475, -0.35355339059327373`}, {
          0.35355339059327373`, -0.7071067811865475, 0.35355339059327373`}, {
          0.35355339059327373`, -0.35355339059327373`, -0.7071067811865475}, {
          0.35355339059327373`, -0.35355339059327373`, 0.7071067811865475}, {
          0.35355339059327373`, 0.35355339059327373`, -0.7071067811865475}, {
          0.35355339059327373`, 0.35355339059327373`, 0.7071067811865475}, {
          0.35355339059327373`, 0.7071067811865475, -0.35355339059327373`}, {
          0.35355339059327373`, 0.7071067811865475, 0.35355339059327373`}, {
          0.7071067811865475, -0.35355339059327373`, -0.35355339059327373`}, {
          0.7071067811865475, -0.35355339059327373`, 0.35355339059327373`}, {
          0.7071067811865475, 0.35355339059327373`, -0.35355339059327373`}, {
          0.7071067811865475, 0.35355339059327373`, 0.35355339059327373`}, {
          0.8535533905932737, -0.1464466094067262, 0}, {
          0.8535533905932737, 0, -0.1464466094067262}, {
          0.8535533905932737, 0, 0.1464466094067262}, {
          0.8535533905932737, 0.1464466094067262, 0}}], 
        Polygon3DBox[{{32, 13, 1, 14}, {32, 14, 36, 48}, {32, 48, 35, 13}, {
         13, 35, 17, 1}, {17, 35, 48, 36}, {1, 17, 36, 14}, {45, 37, 20, 
         38}, {45, 38, 12, 29}, {45, 29, 11, 37}, {37, 11, 4, 20}, {4, 11, 29,
          12}, {20, 4, 12, 38}, {30, 9, 3, 15}, {30, 15, 40, 46}, {30, 46, 34,
          9}, {9, 34, 19, 3}, {19, 34, 46, 40}, {3, 19, 40, 15}, {47, 33, 18, 
         39}, {47, 39, 16, 31}, {47, 31, 10, 33}, {33, 10, 2, 18}, {2, 10, 31,
          16}, {18, 2, 16, 39}, {28, 43, 23, 7}, {28, 7, 6, 26}, {28, 26, 42, 
         43}, {43, 42, 21, 23}, {21, 42, 26, 6}, {23, 21, 6, 7}, {24, 44, 27, 
         8}, {24, 8, 5, 22}, {24, 22, 41, 44}, {44, 41, 25, 27}, {25, 41, 22, 
         5}, {27, 25, 5, 8}}]]], {585., -701.4375}, ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{Rational[-1, 2], Rational[-1, 2], Rational[-1, 2]}, {
          Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}, {
          Rational[-1, 2], Rational[1, 2], Rational[-1, 2]}, {
          Rational[-1, 2], Rational[1, 2], Rational[1, 2]}, {
          0, Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[1, 4] (1 - 5^Rational[1, 2])}, {
          0, Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
          0, Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[1, 4] (1 - 5^Rational[1, 2])}, {
          0, Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
          0, Rational[1, 12] (1 - 2 2^Rational[1, 2] + 5^Rational[1, 2] + 
            2 10^Rational[1, 2]), 
           Rational[1, 12] (1 + 2 2^Rational[1, 2] - 5^Rational[1, 2] + 
            2 10^Rational[1, 2])}, {
          0, Rational[1, 12] (1 - 2 2^Rational[1, 2] + 5^Rational[1, 2] + 
            2 10^Rational[1, 2]), Root[
           1 - 44 # - 100 #^2 + 48 #^3 + 144 #^4& , 1, 0]}, {
          0, Rational[1, 12] (-1 + 2 2^Rational[1, 2] - 5^Rational[1, 2] - 2 
            10^Rational[1, 2]), 
           Rational[1, 12] (1 + 2 2^Rational[1, 2] - 5^Rational[1, 2] + 
            2 10^Rational[1, 2])}, {
          0, Rational[1, 12] (-1 + 2 2^Rational[1, 2] - 5^Rational[1, 2] - 2 
            10^Rational[1, 2]), Root[
           1 - 44 # - 100 #^2 + 48 #^3 + 144 #^4& , 1, 0]}, {
          Rational[1, 2], Rational[-1, 2], Rational[-1, 2]}, {
          Rational[1, 2], Rational[-1, 2], Rational[1, 2]}, {
          Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {
          Rational[1, 2], Rational[1, 2], Rational[
           1, 2]}, {-2^Rational[-1, 2], 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2]))}, {-2^Rational[-1, 2], 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {-2^Rational[-1, 2], 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2]))}, {-2^Rational[-1, 2], 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          2^Rational[-1, 2], 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2]))}, {
          2^Rational[-1, 2], 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          2^Rational[-1, 2], 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2]))}, {
          2^Rational[-1, 2], 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[1, 4] (1 - 5^Rational[1, 2]), 0}, {
          Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[1, 4] (-1 + 5^Rational[1, 2]), 0}, {
          Rational[1, 4] (1 - 5^Rational[1, 2]), 0, 
           Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
          Rational[1, 4] (1 - 5^Rational[1, 2]), 0, 
           Rational[1, 4] (1 + 5^Rational[1, 2])}, {
          Rational[1, 4] (-1 + 5^Rational[1, 2]), 0, 
           Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
          Rational[1, 4] (-1 + 5^Rational[1, 2]), 0, 
           Rational[1, 4] (1 + 5^Rational[1, 2])}, {
          Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[1, 4] (1 - 5^Rational[1, 2]), 0}, {
          Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[1, 4] (-1 + 5^Rational[1, 2]), 0}, {
          Rational[1, 6] (1 - 10^Rational[1, 2]), 
           Rational[1, 6] (-1 - (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 12] (2 - 3 2^Rational[1, 2] + 10^Rational[1, 2])}, {
          Rational[1, 6] (1 - 10^Rational[1, 2]), 
           Rational[1, 6] (-1 - (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (-1 + (7 - 3 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 6] (1 - 10^Rational[1, 2]), 
           Rational[1, 6] (1 + (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 12] (2 - 3 2^Rational[1, 2] + 10^Rational[1, 2])}, {
          Rational[1, 6] (1 - 10^Rational[1, 2]), 
           Rational[1, 6] (1 + (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (-1 + (7 - 3 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 6] (-1 + 10^Rational[1, 2]), 
           Rational[1, 6] (-1 - (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 12] (2 - 3 2^Rational[1, 2] + 10^Rational[1, 2])}, {
          Rational[1, 6] (-1 + 10^Rational[1, 2]), 
           Rational[1, 6] (-1 - (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (-1 + (7 - 3 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 6] (-1 + 10^Rational[1, 2]), 
           Rational[1, 6] (1 + (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 12] (2 - 3 2^Rational[1, 2] + 10^Rational[1, 2])}, {
          Rational[1, 6] (-1 + 10^Rational[1, 2]), 
           Rational[1, 6] (1 + (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (-1 + (7 - 3 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 12] (2 - 3 2^Rational[1, 2] + 10^Rational[1, 2]), 
           Rational[1, 6] (1 - 10^Rational[1, 2]), 
           Rational[1, 6] (-1 - (7 + 3 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 12] (2 - 3 2^Rational[1, 2] + 10^Rational[1, 2]), 
           Rational[1, 6] (1 - 10^Rational[1, 2]), 
           Rational[1, 6] (1 + (7 + 3 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 12] (2 - 3 2^Rational[1, 2] + 10^Rational[1, 2]), 
           Rational[1, 6] (-1 + 10^Rational[1, 2]), 
           Rational[1, 6] (-1 - (7 + 3 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 12] (2 - 3 2^Rational[1, 2] + 10^Rational[1, 2]), 
           Rational[1, 6] (-1 + 10^Rational[1, 2]), 
           Rational[1, 6] (1 + (7 + 3 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 6] (-1 + (7 - 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (1 - 10^Rational[1, 2]), 
           Rational[1, 6] (-1 - (7 + 3 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 6] (-1 + (7 - 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (1 - 10^Rational[1, 2]), 
           Rational[1, 6] (1 + (7 + 3 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 6] (-1 + (7 - 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (-1 + 10^Rational[1, 2]), 
           Rational[1, 6] (-1 - (7 + 3 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 6] (-1 + (7 - 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (-1 + 10^Rational[1, 2]), 
           Rational[1, 6] (1 + (7 + 3 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 6] (-1 - (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 12] (2 - 3 2^Rational[1, 2] + 10^Rational[1, 2]), 
           Rational[1, 6] (1 - 10^Rational[1, 2])}, {
          Rational[1, 6] (-1 - (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 12] (2 - 3 2^Rational[1, 2] + 10^Rational[1, 2]), 
           Rational[1, 6] (-1 + 10^Rational[1, 2])}, {
          Rational[1, 6] (-1 - (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (-1 + (7 - 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (1 - 10^Rational[1, 2])}, {
          Rational[1, 6] (-1 - (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (-1 + (7 - 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (-1 + 10^Rational[1, 2])}, {
          Rational[1, 6] (1 + (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 12] (2 - 3 2^Rational[1, 2] + 10^Rational[1, 2]), 
           Rational[1, 6] (1 - 10^Rational[1, 2])}, {
          Rational[1, 6] (1 + (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 12] (2 - 3 2^Rational[1, 2] + 10^Rational[1, 2]), 
           Rational[1, 6] (-1 + 10^Rational[1, 2])}, {
          Rational[1, 6] (1 + (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (-1 + (7 - 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (1 - 10^Rational[1, 2])}, {
          Rational[1, 6] (1 + (7 + 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (-1 + (7 - 3 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (-1 + 10^Rational[1, 2])}, {
          Rational[1, 12] (1 - 2 2^Rational[1, 2] + 5^Rational[1, 2] + 
            2 10^Rational[1, 2]), 
           Rational[1, 12] (1 + 2 2^Rational[1, 2] - 5^Rational[1, 2] + 
            2 10^Rational[1, 2]), 0}, {
          Rational[1, 12] (1 - 2 2^Rational[1, 2] + 5^Rational[1, 2] + 
            2 10^Rational[1, 2]), Root[
           1 - 44 # - 100 #^2 + 48 #^3 + 144 #^4& , 1, 0], 0}, {
          Rational[1, 12] (1 + 2 2^Rational[1, 2] - 5^Rational[1, 2] + 
            2 10^Rational[1, 2]), 0, 
           Rational[1, 12] (1 - 2 2^Rational[1, 2] + 5^Rational[1, 2] + 
            2 10^Rational[1, 2])}, {
          Rational[1, 12] (1 + 2 2^Rational[1, 2] - 5^Rational[1, 2] + 
            2 10^Rational[1, 2]), 0, 
           Rational[1, 12] (-1 + 2 2^Rational[1, 2] - 5^Rational[1, 2] - 2 
            10^Rational[1, 2])}, {
          Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), -2^Rational[-1, 2], 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2])}, {
          Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), -2^Rational[-1, 2], 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), 2^Rational[-1, 2], 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2])}, {
          Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), 2^Rational[-1, 2], 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), -2^Rational[-1, 2]}, {
          Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), 2^Rational[-1, 2]}, {
          Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), -2^Rational[-1, 2]}, {
          Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), 2^Rational[-1, 2]}, {
          Root[1 - 44 # - 100 #^2 + 48 #^3 + 144 #^4& , 1, 0], 0, 
           Rational[1, 12] (1 - 2 2^Rational[1, 2] + 5^Rational[1, 2] + 
            2 10^Rational[1, 2])}, {
          Root[1 - 44 # - 100 #^2 + 48 #^3 + 144 #^4& , 1, 0], 0, 
           Rational[1, 12] (-1 + 2 2^Rational[1, 2] - 5^Rational[1, 2] - 2 
            10^Rational[1, 2])}, {
          Rational[1, 12] (-1 + 2 2^Rational[1, 2] - 5^Rational[1, 2] - 2 
            10^Rational[1, 2]), 
           Rational[1, 12] (1 + 2 2^Rational[1, 2] - 5^Rational[1, 2] + 
            2 10^Rational[1, 2]), 0}, {
          Rational[1, 12] (-1 + 2 2^Rational[1, 2] - 5^Rational[1, 2] - 2 
            10^Rational[1, 2]), Root[
           1 - 44 # - 100 #^2 + 48 #^3 + 144 #^4& , 1, 0], 0}, {
          Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), -2^Rational[-1, 2]}, {
          Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), 2^Rational[-1, 2]}, {
          Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), -2^Rational[-1, 2]}, {
          Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), 2^Rational[-1, 2]}, {
          Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), -2^Rational[-1, 2], 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2])}, {
          Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), -2^Rational[-1, 2], 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), 2^Rational[-1, 2], 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2])}, {
          Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), 2^Rational[-1, 2], 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2])}}, {{-0.5, -0.5, -0.5}, {-0.5, -0.5, 
          0.5}, {-0.5, 0.5, -0.5}, {-0.5, 0.5, 0.5}, {
          0, -0.8090169943749475, -0.30901699437494745`}, {
          0, -0.8090169943749475, 0.30901699437494745`}, {
          0, 0.8090169943749475, -0.30901699437494745`}, {
          0, 0.8090169943749475, 0.30901699437494745`}, {
          0, 0.56101634775753, 0.6597428722985966}, {
          0, 0.56101634775753, -0.6597428722985965}, {
          0, -0.56101634775753, 0.6597428722985966}, {
          0, -0.56101634775753, -0.6597428722985965}, {0.5, -0.5, -0.5}, {
          0.5, -0.5, 0.5}, {0.5, 0.5, -0.5}, {0.5, 0.5, 
          0.5}, {-0.7071067811865475, 
          0.12400032330870876`, -0.484379933336772}, {-0.7071067811865475, 
          0.12400032330870876`, 
          0.48437993333677204`}, {-0.7071067811865475, -0.12400032330870876`, \
-0.484379933336772}, {-0.7071067811865475, -0.12400032330870876`, 
          0.48437993333677204`}, {0.7071067811865475, 
          0.12400032330870876`, -0.484379933336772}, {0.7071067811865475, 
          0.12400032330870876`, 0.48437993333677204`}, {
          0.7071067811865475, -0.12400032330870876`, -0.484379933336772}, {
          0.7071067811865475, -0.12400032330870876`, 
          0.48437993333677204`}, {-0.8090169943749475, -0.30901699437494745`, 
           0}, {-0.8090169943749475, 0.30901699437494745`, 
           0}, {-0.30901699437494745`, 
           0, -0.8090169943749475}, {-0.30901699437494745`, 0, 
           0.8090169943749475}, {
          0.30901699437494745`, 0, -0.8090169943749475}, {
          0.30901699437494745`, 0, 0.8090169943749475}, {
          0.8090169943749475, -0.30901699437494745`, 0}, {
          0.8090169943749475, 0.30901699437494745`, 
           0}, {-0.36037961002806324`, -0.7837431956073054, 
          0.07663641442075782}, {-0.36037961002806324`, -0.7837431956073054, \
-0.07663641442075789}, {-0.36037961002806324`, 0.7837431956073054, 
          0.07663641442075782}, {-0.36037961002806324`, 
          0.7837431956073054, -0.07663641442075789}, {
          0.36037961002806324`, -0.7837431956073054, 0.07663641442075782}, {
          0.36037961002806324`, -0.7837431956073054, -0.07663641442075789}, {
          0.36037961002806324`, 0.7837431956073054, 0.07663641442075782}, {
          0.36037961002806324`, 0.7837431956073054, -0.07663641442075789}, {
          0.07663641442075782, -0.36037961002806324`, -0.7837431956073054}, {
          0.07663641442075782, -0.36037961002806324`, 0.7837431956073054}, {
          0.07663641442075782, 0.36037961002806324`, -0.7837431956073054}, {
          0.07663641442075782, 0.36037961002806324`, 
          0.7837431956073054}, {-0.07663641442075789, -0.36037961002806324`, \
-0.7837431956073054}, {-0.07663641442075789, -0.36037961002806324`, 
          0.7837431956073054}, {-0.07663641442075789, 
          0.36037961002806324`, -0.7837431956073054}, {-0.07663641442075789, 
          0.36037961002806324`, 0.7837431956073054}, {-0.7837431956073054, 
          0.07663641442075782, -0.36037961002806324`}, {-0.7837431956073054, 
          0.07663641442075782, 
          0.36037961002806324`}, {-0.7837431956073054, -0.07663641442075789, \
-0.36037961002806324`}, {-0.7837431956073054, -0.07663641442075789, 
          0.36037961002806324`}, {0.7837431956073054, 
          0.07663641442075782, -0.36037961002806324`}, {0.7837431956073054, 
          0.07663641442075782, 0.36037961002806324`}, {
          0.7837431956073054, -0.07663641442075789, -0.36037961002806324`}, {
          0.7837431956073054, -0.07663641442075789, 0.36037961002806324`}, {
          0.56101634775753, 0.6597428722985966, 0}, {
          0.56101634775753, -0.6597428722985965, 0}, {
          0.6597428722985966, 0, 0.56101634775753}, {
          0.6597428722985966, 
           0, -0.56101634775753}, {-0.484379933336772, -0.7071067811865475, 
          0.12400032330870876`}, {-0.484379933336772, -0.7071067811865475, \
-0.12400032330870876`}, {-0.484379933336772, 0.7071067811865475, 
          0.12400032330870876`}, {-0.484379933336772, 
          0.7071067811865475, -0.12400032330870876`}, {
          0.12400032330870876`, -0.484379933336772, -0.7071067811865475}, {
          0.12400032330870876`, -0.484379933336772, 0.7071067811865475}, {
          0.12400032330870876`, 0.48437993333677204`, -0.7071067811865475}, {
          0.12400032330870876`, 0.48437993333677204`, 
          0.7071067811865475}, {-0.6597428722985965, 0, 
           0.56101634775753}, {-0.6597428722985965, 
           0, -0.56101634775753}, {-0.56101634775753, 0.6597428722985966, 
           0}, {-0.56101634775753, -0.6597428722985965, 
           0}, {-0.12400032330870876`, -0.484379933336772, \
-0.7071067811865475}, {-0.12400032330870876`, -0.484379933336772, 
          0.7071067811865475}, {-0.12400032330870876`, 
          0.48437993333677204`, -0.7071067811865475}, {-0.12400032330870876`, 
          0.48437993333677204`, 0.7071067811865475}, {
          0.48437993333677204`, -0.7071067811865475, 0.12400032330870876`}, {
          0.48437993333677204`, -0.7071067811865475, -0.12400032330870876`}, {
          0.48437993333677204`, 0.7071067811865475, 0.12400032330870876`}, {
          0.48437993333677204`, 0.7071067811865475, -0.12400032330870876`}}], 
        Polygon3DBox[{{16, 35, 52, 42}, {16, 42, 38, 53}, {16, 53, 47, 35}, {
         35, 47, 1, 52}, {1, 47, 53, 38}, {52, 1, 38, 42}, {30, 79, 64, 69}, {
         30, 69, 62, 77}, {30, 77, 60, 79}, {79, 60, 27, 64}, {27, 60, 77, 
         62}, {64, 27, 62, 69}, {32, 68, 74, 58}, {32, 58, 73, 67}, {32, 67, 
         71, 68}, {68, 71, 25, 74}, {25, 71, 67, 73}, {74, 25, 73, 58}, {31, 
         57, 76, 66}, {31, 66, 72, 65}, {31, 65, 75, 57}, {57, 75, 26, 76}, {
         26, 75, 65, 72}, {76, 26, 72, 66}, {15, 54, 37, 41}, {15, 41, 51, 
         36}, {15, 36, 48, 54}, {54, 48, 2, 37}, {2, 48, 36, 51}, {37, 2, 51, 
         41}, {29, 80, 59, 78}, {29, 78, 61, 70}, {29, 70, 63, 80}, {80, 63, 
         28, 59}, {28, 63, 70, 61}, {59, 28, 61, 78}, {7, 21, 12, 17}, {7, 17,
          20, 9}, {7, 9, 24, 21}, {21, 24, 6, 12}, {6, 24, 9, 20}, {12, 6, 20,
          17}, {3, 40, 55, 45}, {3, 45, 33, 50}, {3, 50, 44, 40}, {40, 44, 14,
          55}, {14, 44, 50, 33}, {55, 14, 33, 45}, {8, 10, 19, 18}, {8, 18, 
         11, 22}, {8, 22, 23, 10}, {10, 23, 5, 19}, {5, 23, 22, 11}, {19, 5, 
         11, 18}, {4, 39, 43, 49}, {4, 49, 34, 46}, {4, 46, 56, 39}, {39, 56, 
         13, 43}, {13, 56, 46, 34}, {43, 13, 34, 49}}]]], {975., -701.4375}, 
      ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{Rational[-1, 2], 0, -2^Rational[-1, 2]}, {
          Rational[-1, 2], 0, 2^Rational[-1, 2]}, {
          Rational[-1, 2], -2^Rational[-1, 2], 0}, {
          Rational[-1, 2], 2^Rational[-1, 2], 0}, {
          0, Rational[-1, 2], -2^Rational[-1, 2]}, {
          0, Rational[-1, 2], 2^Rational[-1, 2]}, {
          0, Rational[1, 2], -2^Rational[-1, 2]}, {
          0, Rational[1, 2], 2^Rational[-1, 2]}, {
          0, -2^Rational[-1, 2], Rational[-1, 2]}, {
          0, -2^Rational[-1, 2], Rational[1, 2]}, {
          0, 2^Rational[-1, 2], Rational[-1, 2]}, {
          0, 2^Rational[-1, 2], Rational[1, 2]}, {
          Rational[1, 2], 0, -2^Rational[-1, 2]}, {
          Rational[1, 2], 0, 2^Rational[-1, 2]}, {
          Rational[1, 2], -2^Rational[-1, 2], 0}, {
          Rational[1, 2], 2^Rational[-1, 2], 0}, {-2^Rational[-1, 2], 
           Rational[-1, 2], 0}, {-2^Rational[-1, 2], 0, 
           Rational[-1, 2]}, {-2^Rational[-1, 2], 0, Rational[
           1, 2]}, {-2^Rational[-1, 2], Rational[1, 2], 0}, {
          2^Rational[-1, 2], Rational[-1, 2], 0}, {
          2^Rational[-1, 2], 0, Rational[-1, 2]}, {
          2^Rational[-1, 2], 0, Rational[1, 2]}, {
          2^Rational[-1, 2], Rational[1, 2], 0}}, {{-0.5, 
           0, -0.7071067811865475}, {-0.5, 0, 
           0.7071067811865475}, {-0.5, -0.7071067811865475, 0}, {-0.5, 
           0.7071067811865475, 0}, {0, -0.5, -0.7071067811865475}, {
          0, -0.5, 0.7071067811865475}, {0, 0.5, -0.7071067811865475}, {
          0, 0.5, 0.7071067811865475}, {0, -0.7071067811865475, -0.5}, {
          0, -0.7071067811865475, 0.5}, {0, 0.7071067811865475, -0.5}, {
          0, 0.7071067811865475, 0.5}, {0.5, 0, -0.7071067811865475}, {
          0.5, 0, 0.7071067811865475}, {0.5, -0.7071067811865475, 0}, {
          0.5, 0.7071067811865475, 0}, {-0.7071067811865475, -0.5, 
           0}, {-0.7071067811865475, 0, -0.5}, {-0.7071067811865475, 0, 
           0.5}, {-0.7071067811865475, 0.5, 0}, {
          0.7071067811865475, -0.5, 0}, {0.7071067811865475, 0, -0.5}, {
          0.7071067811865475, 0, 0.5}, {0.7071067811865475, 0.5, 0}}], 
        Polygon3DBox[{{16, 4, 2, 14}, {16, 14, 15, 13}, {16, 13, 1, 4}, {4, 1,
          3, 2}, {3, 1, 13, 15}, {2, 3, 15, 14}, {8, 20, 17, 6}, {8, 6, 21, 
         24}, {8, 24, 7, 20}, {20, 7, 5, 17}, {5, 7, 24, 21}, {17, 5, 21, 
         6}, {23, 12, 19, 10}, {23, 10, 9, 22}, {23, 22, 11, 12}, {12, 11, 18,
          19}, {18, 11, 22, 9}, {19, 18, 9, 10}}]]], {1365., -701.4375}, 
      ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{-2^Rational[-1, 2], -6^Rational[-1, 2], Rational[-1, 2] 
           3^Rational[-1, 2]}, {-2^Rational[-1, 2], -6^Rational[-1, 2], 
           Rational[1, 2] 3^Rational[-1, 2]}, {-2^Rational[-1, 2], 6^
           Rational[-1, 2], Rational[-1, 2] 
           3^Rational[-1, 2]}, {-2^Rational[-1, 2], 6^Rational[-1, 2], 
           Rational[1, 2] 3^Rational[-1, 2]}, {
          0, -Rational[2, 3]^Rational[1, 2], Rational[-1, 2] 
           3^Rational[-1, 2]}, {
          0, -Rational[2, 3]^Rational[1, 2], Rational[1, 2] 
           3^Rational[-1, 2]}, {0, 0, Rational[-1, 2] 3^Rational[1, 2]}, {
          0, 0, Rational[1, 2] 3^Rational[1, 2]}, {
          0, Rational[2, 3]^Rational[1, 2], Rational[-1, 2] 
           3^Rational[-1, 2]}, {
          0, Rational[2, 3]^Rational[1, 2], Rational[1, 2] 
           3^Rational[-1, 2]}, {
          2^Rational[-1, 2], -6^Rational[-1, 2], Rational[-1, 2] 
           3^Rational[-1, 2]}, {
          2^Rational[-1, 2], -6^Rational[-1, 2], Rational[1, 2] 
           3^Rational[-1, 2]}, {
          2^Rational[-1, 2], 6^Rational[-1, 2], Rational[-1, 2] 
           3^Rational[-1, 2]}, {
          2^Rational[-1, 2], 6^Rational[-1, 2], Rational[1, 2] 
           3^Rational[-1, 
              2]}}, {{-0.7071067811865475, -0.4082482904638631, \
-0.2886751345948129}, {-0.7071067811865475, -0.4082482904638631, 
          0.2886751345948129}, {-0.7071067811865475, 
          0.4082482904638631, -0.2886751345948129}, {-0.7071067811865475, 
          0.4082482904638631, 0.2886751345948129}, {
          0, -0.816496580927726, -0.2886751345948129}, {
          0, -0.816496580927726, 0.2886751345948129}, {
          0, 0, -0.8660254037844386}, {0, 0, 0.8660254037844386}, {
          0, 0.816496580927726, -0.2886751345948129}, {
          0, 0.816496580927726, 0.2886751345948129}, {
          0.7071067811865475, -0.4082482904638631, -0.2886751345948129}, {
          0.7071067811865475, -0.4082482904638631, 0.2886751345948129}, {
          0.7071067811865475, 0.4082482904638631, -0.2886751345948129}, {
          0.7071067811865475, 0.4082482904638631, 0.2886751345948129}}], 
        Polygon3DBox[{{8, 12, 13, 10}, {2, 5, 12, 8}, {10, 3, 2, 8}, {5, 2, 3,
          7}, {7, 3, 10, 13}, {7, 13, 12, 5}, {8, 6, 11, 14}, {4, 1, 6, 8}, {
         14, 9, 4, 8}, {1, 4, 9, 7}, {7, 9, 14, 11}, {7, 11, 6, 1}}]]], {1755., -701.4375},
       ImageScaled[{0.5, 0.5}], {360, 430},
      ContentSelectable->True]}, {InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{Rational[-1, 2], Rational[-1, 2], Rational[-1, 2]}, {
          Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}, {
          Rational[-1, 2], Rational[1, 2], Rational[-1, 2]}, {
          Rational[-1, 2], Rational[1, 2], Rational[1, 2]}, {
          Rational[1, 2], Rational[-1, 2], Rational[-1, 2]}, {
          Rational[1, 2], Rational[-1, 2], Rational[1, 2]}, {
          Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {
          Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
          0, -2^Rational[-1, 2], Rational[-1, 2]}, {
          0, -2^Rational[-1, 2], Rational[1, 2]}, {-2^Rational[-1, 2], 0, 
           Rational[-1, 2]}, {-2^Rational[-1, 2], 0, Rational[1, 2]}, {
          2^Rational[-1, 2], 0, Rational[-1, 2]}, {
          2^Rational[-1, 2], 0, Rational[1, 2]}, {
          0, 2^Rational[-1, 2], Rational[-1, 2]}, {
          0, 2^Rational[-1, 2], Rational[
           1, 2]}}, {{-0.5, -0.5, -0.5}, {-0.5, -0.5, 0.5}, {-0.5, 
          0.5, -0.5}, {-0.5, 0.5, 0.5}, {0.5, -0.5, -0.5}, {0.5, -0.5, 0.5}, {
          0.5, 0.5, -0.5}, {0.5, 0.5, 0.5}, {0, -0.7071067811865475, -0.5}, {
          0, -0.7071067811865475, 0.5}, {-0.7071067811865475, 
           0, -0.5}, {-0.7071067811865475, 0, 0.5}, {
          0.7071067811865475, 0, -0.5}, {0.7071067811865475, 0, 0.5}, {
          0, 0.7071067811865475, -0.5}, {0, 0.7071067811865475, 0.5}}], 
        Polygon3DBox[{{1, 3, 7, 5}, {1, 5, 6, 2}, {1, 2, 4, 3}, {2, 6, 8, 
         4}, {5, 7, 8, 6}, {3, 4, 8, 7}, {9, 11, 15, 13}, {9, 13, 14, 10}, {9,
          10, 12, 11}, {10, 14, 16, 12}, {13, 15, 16, 14}, {11, 12, 16, 
         15}}]]], {195., -1169.0625}, ImageScaled[{0.5, 0.5}], {360, 344},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[-1, 4] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4], -(1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 4], -(1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4], (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 4], (1 + 2 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           0, (1 + 2 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 32] + 
            Rational[-1, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-3, 8] (1 + 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 32] + 
            Rational[-1, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[3, 8] (1 + 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-2 - 5^Rational[1, 2]), (
            Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
          Rational[1, 4] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (2 + 5^Rational[1, 2]), (
            Rational[1, 10] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {(Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {
          Rational[1, 4] (5 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-2 - 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (5 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (2 + 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[5, 32] + 
            Rational[11, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-3, 8] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[5, 32] + 
            Rational[11, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[3, 8] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], (Rational[5, 8] + 
            Rational[11, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[13, 32] + 
            Rational[19, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (-5 - 5^Rational[1, 2]), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[13, 32] + Rational[19, 32] 5^Rational[-1, 2])^
           Rational[1, 2], Rational[1, 8] (5 + 5^Rational[1, 2]), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[13, 32] + Rational[29, 32] 5^Rational[-1, 2])^
           Rational[1, 2], Rational[1, 8] (-3 - 5^Rational[1, 2]), Root[
           1 - 5 #^2 + 5 #^4& , 1, 0]}, {(Rational[13, 32] + 
            Rational[29, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (3 + 5^Rational[1, 2]), Root[
           1 - 5 #^2 + 5 #^4& , 1, 0]}, {(Rational[17, 32] + 
            Rational[31, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (-5 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {(Rational[17, 32] + 
            Rational[31, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (5 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {(Rational[25, 32] + 
            Rational[41, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (-3 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {(Rational[25, 32] + 
            Rational[41, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (3 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {(Rational[5, 8] + 
            Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
           Rational[1, 2], 0, (Rational[1, 10] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]}, {(Rational[5, 8] + 
            Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], Rational[1, 2],
            Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
           Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[5, 8] + 
            Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (13 + 22 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (13 + 22 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 4], (Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[29, 32] + 
            Rational[61, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (1 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[29, 32] + 
            Rational[61, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (-1 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {-(1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           0, (Rational[1, 8] + Rational[-1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
          Rational[-1, 4] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-2 - 5^Rational[1, 2]), Root[
           1 - 5 #^2 + 5 #^4& , 1, 0]}, {
          Rational[-1, 4] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (2 + 5^Rational[1, 2]), Root[
           1 - 5 #^2 + 5 #^4& , 1, 0]}, {(1 + 2 5^Rational[-1, 2])^
           Rational[1, 2], 0, Root[1 - 20 #^2 + 80 #^4& , 2, 0]}, {
          Rational[-1, 4] (5 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-2 - 5^Rational[1, 2]), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (5 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (2 + 5^Rational[1, 2]), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (Rational[25, 2] + 
             Rational[41, 2] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (-3 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (Rational[25, 2] + 
             Rational[41, 2] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (3 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (13 + 22 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (13 + 22 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (Rational[29, 2] + 
             Rational[61, 2] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (1 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {
          Rational[-1, 4] (Rational[29, 2] + 
             Rational[61, 2] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (-1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {
          Rational[-1, 4] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 8] (1 - 5^Rational[1, 2]), (1 + 2 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[-1, 4] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 8] (-1 + 5^Rational[1, 2]), (1 + 2 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[1, 4] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 8] (1 - 5^Rational[1, 2]), -(1 + 2 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[1, 4] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 8] (-1 + 5^Rational[1, 2]), -(1 + 2 5^Rational[-1, 2])^
            Rational[1, 2]}, {(Rational[1, 10] (5 + 5^Rational[1, 2]))^
           Rational[1, 2], 0, Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
          Rational[-1, 4] (Rational[1, 10] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 8] (-5 - 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (Rational[1, 10] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 8] (5 + 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (Rational[1, 10] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 8] (-5 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (Rational[1, 10] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 8] (5 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 5 #^2 + 5 #^4& , 1, 0], 
           0, (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
           Rational[-1, 2], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 100 #^2 + 80 #^4& , 1, 0], 0, Root[
           1 - 5 #^2 + 5 #^4& , 1, 0]}, {
          Root[1 - 100 #^2 + 80 #^4& , 1, 0], Rational[
           1, 2], (Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {
          Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           0, -(1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
            Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
            Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {
          Root[1 - 1040 #^2 + 1280 #^4& , 1, 0], 
           Rational[1, 8] (-3 - 5^Rational[1, 2]), (
            Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
          Root[1 - 1040 #^2 + 1280 #^4& , 1, 0], 
           Rational[1, 8] (3 + 5^Rational[1, 2]), (
            Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
          Root[1 - 400 #^2 + 1280 #^4& , 1, 0], 
           Rational[-3, 8] (1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {
          Root[1 - 400 #^2 + 1280 #^4& , 1, 0], 
           Rational[3, 8] (1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {
          Root[1 - 80 #^2 + 1280 #^4& , 2, 0], 
           Rational[-3, 8] (1 + 5^Rational[1, 2]), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 80 #^2 + 1280 #^4& , 2, 0], 
           Rational[3, 8] (1 + 5^Rational[1, 2]), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
            Rational[
             1, 2]}}, {{-0.08122992405822659, -0.25, -1.3763819204711736`}, \
{-0.08122992405822659, 0.25, -1.3763819204711736`}, {
          0.08122992405822659, -0.25, 1.3763819204711736`}, {
          0.08122992405822659, 0.25, 1.3763819204711736`}, {
          0.2628655560595668, 0, 1.3763819204711736`}, {
          0.2628655560595668, -1.3090169943749475`, 0.42532540417601994`}, {
          0.2628655560595668, -0.8090169943749475, -1.1135163644116068`}, {
          0.2628655560595668, 0.8090169943749475, -1.1135163644116068`}, {
          0.2628655560595668, 1.3090169943749475`, 0.42532540417601994`}, {
          0.1314327780297834, -1.2135254915624212`, 0.6881909602355868}, {
          0.1314327780297834, 1.2135254915624212`, 0.6881909602355868}, {
          0.3440954801177934, -1.0590169943749475`, 0.85065080835204}, {
          0.3440954801177934, 1.0590169943749475`, 0.85065080835204}, {
          0.42532540417601994`, -1.3090169943749475`, -0.2628655560595668}, {
          0.42532540417601994`, 1.3090169943749475`, -0.2628655560595668}, {
          0.6069610361773602, -1.0590169943749475`, 0.6881909602355868}, {
          0.6069610361773602, 1.0590169943749475`, 0.6881909602355868}, {
          0.5567581822058033, -1.2135254915624212`, 0.42532540417601994`}, {
          0.5567581822058033, 1.2135254915624212`, 0.42532540417601994`}, {
          0.6881909602355868, -0.5, 1.1135163644116066`}, {0.6881909602355868,
           0.5, 1.1135163644116066`}, {
          0.8196237382653702, -0.9045084971874737, -0.6881909602355868}, {
          0.8196237382653702, 0.9045084971874737, -0.6881909602355868}, {
          0.9008536623235968, -0.6545084971874737, -0.8506508083520399}, {
          0.9008536623235968, 0.6545084971874737, -0.8506508083520399}, {
          0.9820835863818234, -0.9045084971874737, -0.42532540417601994`}, {
          0.9820835863818234, 0.9045084971874737, -0.42532540417601994`}, {
          1.1637192183831635`, -0.6545084971874737, -0.42532540417601994`}, {
          1.1637192183831635`, 0.6545084971874737, -0.42532540417601994`}, {
          1.1135163644116066`, -0.5, -0.6881909602355868}, {
          1.1135163644116066`, 0, 0.85065080835204}, {1.1135163644116066`, 
          0.5, -0.6881909602355868}, {
          1.1135163644116066`, -0.8090169943749475, 0.2628655560595668}, {
          1.1135163644116066`, 0.8090169943749475, 0.2628655560595668}, {
          1.1947462884698332`, -0.25, 0.6881909602355868}, {
          1.1947462884698332`, 0.25, 0.6881909602355868}, {
          1.3261790664996167`, -0.15450849718747373`, 0.42532540417601994`}, {
          1.3261790664996167`, 0.15450849718747373`, 
          0.42532540417601994`}, {-1.3763819204711736`, 0, 
           0.2628655560595668}, {-0.6881909602355868, -0.5, \
-1.1135163644116068`}, {-0.6881909602355868, 
          0.5, -1.1135163644116068`}, {-0.3440954801177934, \
-1.0590169943749475`, -0.8506508083520399}, {-0.3440954801177934, 
          1.0590169943749475`, -0.8506508083520399}, {
          1.3763819204711736`, 
           0, -0.2628655560595668}, {-0.6069610361773602, \
-1.0590169943749475`, -0.6881909602355868}, {-0.6069610361773602, 
          1.0590169943749475`, -0.6881909602355868}, {-1.1637192183831635`, \
-0.6545084971874737, 0.42532540417601994`}, {-1.1637192183831635`, 
          0.6545084971874737, 
          0.42532540417601994`}, {-1.1947462884698332`, -0.25, \
-0.6881909602355868}, {-1.1947462884698332`, 
          0.25, -0.6881909602355868}, {-1.3261790664996167`, \
-0.15450849718747373`, -0.42532540417601994`}, {-1.3261790664996167`, 
          0.15450849718747373`, -0.42532540417601994`}, {-0.21266270208801, \
-0.15450849718747373`, 1.3763819204711736`}, {-0.21266270208801, 
          0.15450849718747373`, 1.3763819204711736`}, {
          0.21266270208801, -0.15450849718747373`, -1.3763819204711736`}, {
          0.21266270208801, 0.15450849718747373`, -1.3763819204711736`}, {
          0.85065080835204, 
           0, -1.1135163644116068`}, {-0.8196237382653702, \
-0.9045084971874737, 0.6881909602355868}, {-0.8196237382653702, 
          0.9045084971874737, 
          0.6881909602355868}, {-0.9820835863818235, -0.9045084971874737, 
          0.42532540417601994`}, {-0.9820835863818235, 0.9045084971874737, 
          0.42532540417601994`}, {-0.8506508083520399, 0, 
           1.1135163644116066`}, {-1.1135163644116068`, -0.5, 
          0.6881909602355868}, {-1.1135163644116068`, 
           0, -0.8506508083520399}, {-1.1135163644116068`, 0.5, 
          0.6881909602355868}, {-1.1135163644116068`, -0.8090169943749475, \
-0.2628655560595668}, {-1.1135163644116068`, 
          0.8090169943749475, -0.2628655560595668}, {-0.42532540417601994`, \
-1.3090169943749475`, 0.2628655560595668}, {-0.42532540417601994`, 
          1.3090169943749475`, 
          0.2628655560595668}, {-0.2628655560595668, 
           0, -1.3763819204711736`}, {-0.2628655560595668, \
-1.3090169943749475`, -0.42532540417601994`}, {-0.2628655560595668, \
-0.8090169943749475, 1.1135163644116066`}, {-0.2628655560595668, 
          0.8090169943749475, 1.1135163644116066`}, {-0.2628655560595668, 
          1.3090169943749475`, -0.42532540417601994`}, {-0.9008536623235968, \
-0.6545084971874737, 0.85065080835204}, {-0.9008536623235968, 
          0.6545084971874737, 
          0.85065080835204}, {-0.5567581822058033, -1.2135254915624212`, \
-0.42532540417601994`}, {-0.5567581822058033, 
          1.2135254915624212`, -0.42532540417601994`}, {-0.1314327780297834, \
-1.2135254915624212`, -0.6881909602355868}, {-0.1314327780297834, 
          1.2135254915624212`, -0.6881909602355868}}], 
        Polygon3DBox[{{73, 65, 63, 72, 5}, {70, 8, 32, 30, 7}, {7, 30, 33, 6, 
         71}, {30, 32, 34, 31, 33}, {32, 8, 74, 9, 34}, {8, 70, 64, 67, 74}, {
         70, 7, 71, 66, 64}, {9, 74, 67, 65, 73}, {67, 64, 66, 63, 65}, {66, 
         71, 6, 72, 63}, {6, 33, 31, 5, 72}, {31, 34, 9, 73, 5}, {62, 58, 10, 
         20, 4}, {1, 41, 80, 23, 57}, {57, 23, 34, 37, 28}, {23, 80, 69, 13, 
         34}, {80, 41, 52, 48, 69}, {41, 1, 42, 66, 52}, {1, 57, 28, 14, 
         42}, {48, 52, 66, 58, 62}, {66, 42, 14, 10, 58}, {14, 28, 37, 20, 
         10}, {37, 34, 13, 4, 20}, {13, 69, 48, 62, 4}, {72, 16, 35, 21, 
         54}, {55, 40, 50, 46, 8}, {8, 46, 69, 19, 27}, {46, 50, 39, 76, 
         69}, {50, 40, 77, 60, 39}, {40, 55, 24, 14, 77}, {55, 8, 27, 44, 
         24}, {60, 77, 14, 16, 72}, {14, 24, 44, 35, 16}, {44, 27, 19, 21, 
         35}, {19, 69, 76, 54, 21}, {76, 39, 60, 72, 54}, {20, 36, 17, 73, 
         53}, {56, 7, 45, 49, 41}, {41, 49, 39, 61, 78}, {49, 45, 68, 75, 
         39}, {45, 7, 26, 18, 68}, {7, 56, 25, 44, 26}, {56, 41, 78, 15, 
         25}, {18, 26, 44, 36, 20}, {44, 25, 15, 17, 36}, {15, 78, 61, 73, 
         17}, {61, 39, 75, 53, 73}, {75, 68, 18, 20, 53}, {21, 11, 59, 62, 
         3}, {2, 57, 22, 79, 40}, {40, 79, 68, 47, 51}, {79, 22, 33, 12, 
         68}, {22, 57, 29, 38, 33}, {57, 2, 43, 15, 29}, {2, 40, 51, 67, 
         43}, {38, 29, 15, 11, 21}, {15, 43, 67, 59, 11}, {67, 51, 47, 62, 
         59}, {47, 68, 12, 3, 62}, {12, 33, 38, 21, 3}}]]], {585., -1169.0625},
       ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          0, 0, Rational[-1, 2] (Rational[3, 2] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          0, 0, (Rational[9, 8] + Rational[3, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[-1, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[-1, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
            Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 4] (-1 - 5^
            Rational[1, 2]), -(Rational[3, 4] + 
             Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
            Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 4] (1 + 
            5^Rational[1, 2]), -(Rational[3, 4] + 
             Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2]}, {(
            Rational[1, 8] + Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2],
            Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[3, 4] + 
            Rational[1, 3] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[3, 4] + 
            Rational[1, 3] 5^Rational[1, 2])^
           Rational[
            1, 2]}, {-(Rational[7, 24] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2], Rational[1, 4] (-3 - 5^Rational[1, 2]), 
           Rational[1, 2] 
           3^Rational[-1, 2]}, {-(Rational[7, 24] + 
             Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), Rational[1, 2] 
           3^Rational[-1, 2]}, {(Rational[7, 24] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), Rational[-1, 2] 
           3^Rational[-1, 2]}, {(Rational[7, 24] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), Rational[-1, 2] 
           3^Rational[-1, 2]}, {-(Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 0, 
           Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {-(Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           0, (Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[1, 6] (3 + 5^Rational[1, 2]))^
           Rational[1, 2], 
           0, (Rational[5, 8] + Rational[5, 24] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[1, 6] (3 + 5^Rational[1, 2]))^
           Rational[1, 2], 
           0, -(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
            Rational[1, 2]}, {
          Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[5, 8] + 
            Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[5, 8] + 
            Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^
           Rational[
            1, 2]}, {-(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
            Rational[1, 2], 
           Rational[-1, 2], (Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^
           Rational[
            1, 2]}, {-(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
            Rational[1, 2], Rational[
           1, 2], (Rational[1, 8] + Rational[1, 24] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[3, 4] + 
            Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2], Rational[-1, 2], 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[3, 4] + 
            Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2], Rational[1, 2], 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Root[1 - 21 #^2 + 9 #^4& , 1, 0], 0, Rational[-1, 2] 
           3^Rational[-1, 2]}, {(Rational[1, 6] (7 + 3 5^Rational[1, 2]))^
           Rational[1, 2], 0, Rational[1, 2] 3^Rational[-1, 2]}, {
          Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}}, {{0, 0, -1.4012585384440737`}, {
          0, 0, 1.4012585384440737`}, {
          0.17841104488654497`, -1.3090169943749475`, 0.46708617948135783`}, {
          0.17841104488654497`, 1.3090169943749475`, 
          0.46708617948135783`}, {-0.46708617948135783`, -0.8090169943749475, 
          1.0444364486709836`}, {-0.46708617948135783`, -0.8090169943749475, \
-1.2228474935575286`}, {-0.46708617948135783`, 0.8090169943749475, 
          1.0444364486709836`}, {-0.46708617948135783`, 
          0.8090169943749475, -1.2228474935575286`}, {
          0.46708617948135783`, -0.8090169943749475, -1.0444364486709836`}, {
          0.46708617948135783`, -0.8090169943749475, 1.2228474935575286`}, {
          0.46708617948135783`, 0.8090169943749475, -1.0444364486709836`}, {
          0.46708617948135783`, 0.8090169943749475, 
          1.2228474935575286`}, {-0.7557613140761708, -1.3090169943749475`, 
          0.2886751345948129}, {-0.7557613140761708, 1.3090169943749475`, 
          0.2886751345948129}, {
          0.7557613140761708, -1.3090169943749475`, -0.2886751345948129}, {
          0.7557613140761708, 
          1.3090169943749475`, -0.2886751345948129}, {-0.9341723589627157, 
           0, -1.0444364486709836`}, {-0.9341723589627157, 0, 
           1.2228474935575286`}, {
          0.9341723589627157, 0, 1.0444364486709836`}, {
          0.9341723589627157, 
           0, -1.2228474935575286`}, {-1.0444364486709836`, \
-0.8090169943749475, -0.46708617948135783`}, {-1.0444364486709836`, 
          0.8090169943749475, -0.46708617948135783`}, {
          1.0444364486709836`, -0.8090169943749475, 0.46708617948135783`}, {
          1.0444364486709836`, 0.8090169943749475, 
          0.46708617948135783`}, {-1.2228474935575286`, -0.5, 
          0.46708617948135783`}, {-1.2228474935575286`, 0.5, 
          0.46708617948135783`}, {
          1.2228474935575286`, -0.5, -0.46708617948135783`}, {
          1.2228474935575286`, 
          0.5, -0.46708617948135783`}, {-1.5115226281523415`, 
           0, -0.2886751345948129}, {
          1.5115226281523415`, 0, 
           0.2886751345948129}, {-0.17841104488654497`, -1.3090169943749475`, \
-0.46708617948135783`}, {-0.17841104488654497`, 
          1.3090169943749475`, -0.46708617948135783`}}], 
        Polygon3DBox[{{7, 26, 25, 5, 2}, {1, 11, 28, 27, 9}, {9, 27, 23, 3, 
          31}, {27, 28, 24, 19, 23}, {28, 11, 32, 4, 24}, {11, 1, 17, 22, 
          32}, {1, 9, 31, 21, 17}, {4, 32, 22, 26, 7}, {22, 17, 21, 25, 26}, {
          21, 31, 3, 5, 25}, {3, 23, 19, 2, 5}, {19, 24, 4, 7, 2}, {18, 10, 
          12}, {6, 8, 20}, {10, 13, 15}, {16, 14, 12}, {20, 15, 6}, {8, 16, 
          20}, {15, 30, 10}, {30, 16, 12}, {18, 29, 13}, {18, 14, 29}, {30, 
          15, 20}, {16, 30, 20}, {8, 6, 29}, {18, 13, 10}, {12, 14, 18}, {12, 
          10, 30}, {13, 29, 6}, {29, 14, 8}, {13, 6, 15}, {16, 8, 14}}]]], {975., -1169.0625},
       ImageScaled[{0.5, 0.5}], {360, 380},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[1, 10] Root[5 - 25 #^2 + #^4& , 2, 0], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 10] Root[5 - 25 #^2 + #^4& , 2, 0], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[-11, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-3 - 5^
            Rational[1, 2]), -(Rational[1, 8] + 
             Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[1, 8] + Rational[-11, 40] 5^Rational[-1, 2])^
           Rational[1, 2], 
           Rational[1, 4] (3 + 
            5^Rational[1, 2]), -(Rational[1, 8] + 
             Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
            Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
            Rational[11, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 100 #^2 + 80 #^4& , 1, 0]}, {
          Rational[-1, 10] (5 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] - 2 
           5^Rational[-1, 2], (Rational[1, 40] + 
            Rational[-1, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] (5 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] + 
           2 5^Rational[-1, 2], (Rational[1, 40] + 
            Rational[-1, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 10] (5 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] - 2 5^Rational[-1, 2], Rational[-1, 10] 
           Root[5 - 5 #^2 + #^4& , 3, 0]}, {
          Rational[1, 10] (5 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] + 2 5^Rational[-1, 2], Rational[-1, 10] 
           Root[5 - 5 #^2 + #^4& , 3, 0]}, {
          Root[1 - 25 #^2 + 125 #^4& , 2, 0], 
           Rational[1, 10] (-5 - 3 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Root[1 - 25 #^2 + 125 #^4& , 2, 0], 
           Rational[1, 10] (5 + 3 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[1, 10] + 
            Rational[-1, 10] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 10] (-5 - 3 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[19, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 10] + 
            Rational[-1, 10] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 10] (5 + 3 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[19, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] Root[5 - 5 #^2 + #^4& , 3, 0], 
           Rational[1, 20] (-5 - 5^
            Rational[1, 2]), -(Rational[41, 40] + 
             Rational[71, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] Root[5 - 5 #^2 + #^4& , 3, 0], 
           Rational[-3, 20] (5 + 5^Rational[1, 2]), (Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] Root[5 - 5 #^2 + #^4& , 3, 0], 
           Rational[1, 20] (5 + 
            5^Rational[1, 2]), -(Rational[41, 40] + 
             Rational[71, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] Root[5 - 5 #^2 + #^4& , 3, 0], 
           Rational[3, 20] (5 + 5^Rational[1, 2]), (Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 40] + 
            Rational[-1, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (-5 - 5^Rational[1, 2]), (Rational[41, 40] + 
            Rational[71, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 40] + 
            Rational[-1, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-3, 20] (5 + 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[1, 40] + 
            Rational[-1, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (5 + 5^Rational[1, 2]), (Rational[41, 40] + 
            Rational[71, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 40] + 
            Rational[-1, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[3, 20] (5 + 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[-1, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 20] (-5 - 3 5^Rational[1, 2]), (Rational[37, 40] + 
            Rational[59, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 20] (5 + 3 5^Rational[1, 2]), (Rational[37, 40] + 
            Rational[59, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 20] (-5 - 3 
            5^Rational[1, 2]), -(Rational[37, 40] + 
             Rational[59, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 20] (5 + 
            3 5^Rational[1, 2]), -(Rational[37, 40] + 
             Rational[59, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] 
           5^Rational[-1, 2], (Rational[41, 40] + 
            Rational[71, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] 
           5^Rational[-1, 2], (Rational[41, 40] + 
            Rational[71, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 10] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] 
           5^Rational[-1, 2], -(Rational[41, 40] + 
             Rational[71, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 10] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] 
           5^Rational[-1, 2], -(Rational[41, 40] + 
             Rational[71, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 5] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           0, -(Rational[41, 40] + Rational[71, 40] 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[1, 5] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           0, (Rational[41, 40] + Rational[71, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[-1, 10] (25 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] - 5^
           Rational[-1, 2], (Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] (25 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] + 
           5^Rational[-1, 2], (Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 10] (25 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] - 5^Rational[-1, 2], 
           Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[1, 10] (25 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] + 5^Rational[-1, 2], 
           Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {(Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 
            0]}, {-(Rational[1, 8] + Rational[11, 40] 5^Rational[-1, 2])^
            Rational[1, 2], 
           Rational[1, 20] (-5 - 5^
            Rational[1, 2]), -(Rational[37, 40] + 
             Rational[59, 40] 5^Rational[-1, 2])^
            Rational[1, 2]}, {-(Rational[1, 8] + 
             Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-3, 20] (5 + 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2]}, {-(Rational[1, 8] + 
             Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (5 + 
            5^Rational[1, 2]), -(Rational[37, 40] + 
             Rational[59, 40] 5^Rational[-1, 2])^
            Rational[1, 2]}, {-(Rational[1, 8] + 
             Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[3, 20] (5 + 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (-5 - 5^Rational[1, 2]), (Rational[37, 40] + 
            Rational[59, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-3, 20] (5 + 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[19, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (5 + 5^Rational[1, 2]), (Rational[37, 40] + 
            Rational[59, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[3, 20] (5 + 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[19, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           0, (Rational[37, 40] + Rational[59, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[1, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           0, -(Rational[37, 40] + Rational[59, 40] 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[-1, 5] (2 (5 + 5^Rational[1, 2]))^Rational[1, 2], 
           Rational[1, 10] (-5 - 3 5^Rational[1, 2]), (Rational[1, 40] + 
            Rational[-1, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 5] (2 (5 + 5^Rational[1, 2]))^Rational[1, 2], 
           Rational[1, 10] (5 + 3 5^Rational[1, 2]), (Rational[1, 40] + 
            Rational[-1, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 5] (2 (5 + 5^Rational[1, 2]))^Rational[1, 2], 
           Rational[1, 10] (-5 - 3 5^Rational[1, 2]), Rational[-1, 10] 
           Root[5 - 5 #^2 + #^4& , 3, 0]}, {
          Rational[1, 5] (2 (5 + 5^Rational[1, 2]))^Rational[1, 2], 
           Rational[1, 10] (5 + 3 5^Rational[1, 2]), Rational[-1, 10] 
           Root[5 - 5 #^2 + #^4& , 3, 0]}, {
          Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[-3, 20] (5 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[3, 20] (5 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[13, 40] + 
            Rational[19, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-3, 20] (5 + 
            5^Rational[1, 2]), -(Rational[1, 8] + 
             Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[13, 40] + Rational[19, 40] 5^Rational[-1, 2])^
           Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[13, 40] + 
            Rational[19, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[13, 40] + 
            Rational[19, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[3, 20] (5 + 
            5^Rational[1, 2]), -(Rational[1, 8] + 
             Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], Root[
           1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], (Rational[5, 8] + 
            Rational[11, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Root[1 - 5 #^2 + 5 #^4& , 1, 0], 
           0, (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 10] (5 + 5^Rational[1, 2]))^
           Rational[1, 2], 0, Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
          Rational[-1, 10] Root[5 - 65 #^2 + #^4& , 4, 0], 
           Rational[1, 20] (-5 - 7 
            5^Rational[1, 2]), -(Rational[1, 8] + 
             Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] Root[5 - 65 #^2 + #^4& , 4, 0], 
           Rational[1, 20] (5 + 
            7 5^Rational[1, 2]), -(Rational[1, 8] + 
             Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[13, 40] + Rational[29, 40] 5^Rational[-1, 2])^
           Rational[1, 2], 
           Rational[1, 20] (-5 - 7 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[13, 40] + 
            Rational[29, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (5 + 7 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2], Rational[-3, 20] (5 + 5^Rational[1, 2]), 
           Rational[-1, 10] Root[5 - 5 #^2 + #^4& , 3, 0]}, {
          Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[19, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[19, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2], Rational[3, 20] (5 + 5^Rational[1, 2]), 
           Rational[-1, 10] 
           Root[5 - 5 #^2 + #^4& , 3, 0]}, {(Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-3, 20] (5 + 5^Rational[1, 2]), (Rational[1, 40] + 
            Rational[-1, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[3, 20] (5 + 5^Rational[1, 2]), (Rational[1, 40] + 
            Rational[-1, 40] 5^Rational[-1, 2])^
           Rational[
            1, 2]}, {-(Rational[5, 8] + Rational[41, 40] 5^Rational[-1, 2])^
            Rational[1, 2], 
           Rational[1, 20] (-5 - 3 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[19, 40] 5^Rational[-1, 2])^
           Rational[
            1, 2]}, {-(Rational[5, 8] + Rational[41, 40] 5^Rational[-1, 2])^
            Rational[1, 2], 
           Rational[1, 20] (5 + 3 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[19, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[5, 8] + 
            Rational[41, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (-5 - 3 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[5, 8] + 
            Rational[41, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (5 + 3 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[1, 5] Root[5 - 25 #^2 + #^4& , 1, 0], -5^Rational[-1, 2], 
           Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[1, 5] Root[5 - 25 #^2 + #^4& , 1, 0], 5^Rational[-1, 2], 
           Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[1, 2] + 
            Rational[11, 10] 5^Rational[-1, 2])^
           Rational[1, 2], -5^Rational[-1, 2], (Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 2] + 
            Rational[11, 10] 5^Rational[-1, 2])^Rational[1, 2], 5^
           Rational[-1, 2], (Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] (65 + 22 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] 
           5^Rational[-1, 2], (Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] (65 + 22 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] 
           5^Rational[-1, 2], (Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 10] (65 + 22 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] 5^Rational[-1, 2], 
           Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[1, 10] (65 + 22 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] 5^Rational[-1, 2], 
           Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {
          Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {(Rational[5, 8] + 
            Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[5, 8] + 
            Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^
           Rational[
            1, 2]}, {-(Rational[37, 40] + Rational[59, 40] 5^Rational[-1, 2])^
            Rational[1, 2], 
           Rational[1, 20] (-5 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^
           Rational[
            1, 2]}, {-(Rational[37, 40] + Rational[59, 40] 5^Rational[-1, 2])^
            Rational[1, 2], 
           Rational[1, 20] (5 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[37, 40] + 
            Rational[59, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (-5 - 5^
            Rational[1, 2]), -(Rational[1, 8] + 
             Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[37, 40] + Rational[59, 40] 5^Rational[-1, 2])^
           Rational[1, 2], 
           Rational[1, 20] (5 + 
            5^Rational[1, 2]), -(Rational[1, 8] + 
             Rational[11, 40] 5^Rational[-1, 2])^
            Rational[1, 2]}, {-(Rational[29, 40] + 
             Rational[61, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (5 - 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2]}, {-(Rational[29, 40] + 
             Rational[61, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (-5 + 5^Rational[1, 2]), 
           Rational[-1, 10] (Rational[1, 2] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[29, 40] + 
            Rational[61, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (5 - 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[19, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[29, 40] + 
            Rational[61, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (-5 + 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[19, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-2, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], -5^
            Rational[-1, 2], -(Rational[1, 8] + 
             Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-2, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 5^
           Rational[-1, 2], -(Rational[1, 8] + 
             Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[2, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], -5^
            Rational[-1, 2], (Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[2, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 5^
           Rational[-1, 2], (Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^
           Rational[
            1, 2]}, {-(Rational[41, 40] + Rational[71, 40] 5^Rational[-1, 2])^
            Rational[1, 2], 
           Rational[1, 20] (-5 - 5^Rational[1, 2]), (Rational[1, 40] + 
            Rational[-1, 40] 5^Rational[-1, 2])^
           Rational[
            1, 2]}, {-(Rational[41, 40] + Rational[71, 40] 5^Rational[-1, 2])^
            Rational[1, 2], 
           Rational[1, 20] (5 + 5^Rational[1, 2]), (Rational[1, 40] + 
            Rational[-1, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[41, 40] + 
            Rational[71, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (-5 - 5^Rational[1, 2]), Rational[-1, 10] 
           Root[5 - 5 #^2 + #^4& , 3, 0]}, {(Rational[41, 40] + 
            Rational[71, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (5 + 5^Rational[1, 2]), Rational[-1, 10] 
           Root[5 - 5 #^2 + #^4& , 3, 0]}, {
          Rational[-1, 10] (85 + 38 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2], Rational[-1, 10] Root[5 - 5 #^2 + #^4& , 3, 0]}, {
          Rational[-1, 10] (85 + 38 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2], Rational[-1, 10] Root[5 - 5 #^2 + #^4& , 3, 0]}, {
          Rational[1, 10] (85 + 38 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2], (Rational[1, 40] + 
            Rational[-1, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 10] (85 + 38 5^Rational[1, 2])^Rational[1, 2], Rational[
           1, 2], (Rational[1, 40] + Rational[-1, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {-(1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           0, (Rational[1, 8] + Rational[-1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(1 + 2 5^Rational[-1, 2])^Rational[1, 2], 0, 
           Root[1 - 20 #^2 + 80 #^4& , 2, 
            0]}}, {{-0.04490279765795854, -1.3090169943749475`, 
          0.49797965697655605`}, {-0.04490279765795854, 1.3090169943749475`, 
          0.49797965697655605`}, {
          0.04490279765795843, -1.3090169943749475`, -0.49797965697655605`}, {
          0.04490279765795843, 
          1.3090169943749475`, -0.49797965697655605`}, {-0.2628655560595668, \
-0.8090169943749475, 1.1135163644116066`}, {-0.2628655560595668, 
          0.8090169943749475, 1.1135163644116066`}, {
          0.2628655560595668, -0.8090169943749475, -1.1135163644116068`}, {
          0.2628655560595668, 
          0.8090169943749475, -1.1135163644116068`}, {-0.07265425280053608, \
-1.3944271909999157`, 0.11755705045849463`}, {-0.07265425280053608, 
          1.3944271909999157`, 0.11755705045849463`}, {
          0.07265425280053608, -1.3944271909999157`, -0.11755705045849466`}, {
          0.07265425280053608, 
          1.3944271909999157`, -0.11755705045849466`}, \
{-0.23511410091698923`, -1.170820393249937, -0.7330937578935454}, \
{-0.23511410091698923`, 1.170820393249937, -0.7330937578935454}, {
          0.23511410091698925`, -1.170820393249937, 0.7330937578935453}, {
          0.23511410091698925`, 1.170820393249937, 
          0.7330937578935453}, {-0.11755705045849466`, -0.3618033988749895, \
-1.3486304653285959`}, {-0.11755705045849466`, -1.0854101966249685`, 
          0.8784022634946175}, {-0.11755705045849466`, 
          0.3618033988749895, -1.3486304653285959`}, {-0.11755705045849466`, 
          1.0854101966249685`, 0.8784022634946175}, {
          0.11755705045849463`, -0.3618033988749895, 1.3486304653285959`}, {
          0.11755705045849463`, -1.0854101966249685`, -0.8784022634946176}, {
          0.11755705045849463`, 0.3618033988749895, 1.3486304653285959`}, {
          0.11755705045849463`, 
          1.0854101966249685`, -0.8784022634946176}, {-0.1902113032590307, \
-0.5854101966249685, 1.258824870012679}, {-0.1902113032590307, 
          0.5854101966249685, 1.258824870012679}, {
          0.1902113032590307, -0.5854101966249685, -1.258824870012679}, {
          0.1902113032590307, 
          0.5854101966249685, -1.258824870012679}, {-0.30776835371752537`, \
-0.22360679774997896`, 1.3486304653285959`}, {-0.30776835371752537`, 
          0.22360679774997896`, 1.3486304653285959`}, {
          0.30776835371752537`, -0.22360679774997896`, -1.3486304653285959`}, \
{0.30776835371752537`, 
          0.22360679774997896`, -1.3486304653285959`}, {-0.3804226065180614, 
           0, -1.3486304653285959`}, {
          0.3804226065180614, 0, 
           1.3486304653285959`}, {-0.5428824546345146, -0.9472135954999579, 
          0.8784022634946175}, {-0.5428824546345146, 0.9472135954999579, 
          0.8784022634946175}, {
          0.5428824546345146, -0.9472135954999579, -0.8784022634946176}, {
          0.5428824546345146, 
          0.9472135954999579, -0.8784022634946176}, {-0.42532540417601994`, \
-1.3090169943749475`, 0.2628655560595668}, {-0.42532540417601994`, 
          1.3090169943749475`, 0.2628655560595668}, {
          0.42532540417601994`, -1.3090169943749475`, -0.2628655560595668}, {
          0.42532540417601994`, 
          1.3090169943749475`, -0.2628655560595668}, {-0.49797965697655605`, \
-0.3618033988749895, -1.258824870012679}, {-0.49797965697655605`, \
-1.0854101966249685`, -0.7330937578935454}, {-0.49797965697655605`, 
          0.3618033988749895, -1.258824870012679}, {-0.49797965697655605`, 
          1.0854101966249685`, -0.7330937578935454}, {
          0.49797965697655605`, -0.3618033988749895, 1.258824870012679}, {
          0.49797965697655605`, -1.0854101966249685`, 0.7330937578935453}, {
          0.49797965697655605`, 0.3618033988749895, 1.258824870012679}, {
          0.49797965697655605`, 1.0854101966249685`, 
          0.7330937578935453}, {-0.6155367074350507, 0, 1.258824870012679}, {
          0.6155367074350507, 
           0, -1.258824870012679}, {-0.7608452130361228, -1.170820393249937, 
          0.11755705045849463`}, {-0.7608452130361228, 1.170820393249937, 
          0.11755705045849463`}, {
          0.7608452130361228, -1.170820393249937, -0.11755705045849466`}, {
          0.7608452130361228, 
          1.170820393249937, -0.11755705045849466`}, {-0.7330937578935454, \
-1.0854101966249685`, 
          0.49797965697655605`}, {-0.7330937578935454, -0.8090169943749475, \
-0.8784022634946176}, {-0.7330937578935454, 
          0.8090169943749475, -0.8784022634946176}, {-0.7330937578935454, 
          1.0854101966249685`, 0.49797965697655605`}, {
          0.7330937578935453, -1.0854101966249685`, -0.49797965697655605`}, {
          0.7330937578935453, -0.8090169943749475, 0.8784022634946175}, {
          0.7330937578935453, 0.8090169943749475, 0.8784022634946175}, {
          0.7330937578935453, 
          1.0854101966249685`, -0.49797965697655605`}, {-0.6881909602355868, \
-0.5, -1.1135163644116068`}, {-0.6881909602355868, 
          0.5, -1.1135163644116068`}, {0.6881909602355868, -0.5, 
          1.1135163644116066`}, {0.6881909602355868, 0.5, 
          1.1135163644116066`}, {-0.8506508083520399, 0, 
           1.1135163644116066`}, {
          0.85065080835204, 
           0, -1.1135163644116068`}, {-0.8057480106940814, \
-1.0326237921249264`, -0.49797965697655605`}, {-0.8057480106940814, 
          1.0326237921249264`, -0.49797965697655605`}, {
          0.8057480106940814, -1.0326237921249264`, 0.49797965697655605`}, {
          0.8057480106940814, 1.0326237921249264`, 
          0.49797965697655605`}, {-0.8784022634946176, -1.0854101966249685`, \
-0.11755705045849466`}, {-0.8784022634946176, -0.8090169943749475, 
          0.7330937578935453}, {-0.8784022634946176, 0.8090169943749475, 
          0.7330937578935453}, {-0.8784022634946176, 
          1.0854101966249685`, -0.11755705045849466`}, {
          0.8784022634946175, -1.0854101966249685`, 0.11755705045849463`}, {
          0.8784022634946175, -0.8090169943749475, -0.7330937578935454}, {
          0.8784022634946175, 0.8090169943749475, -0.7330937578935454}, {
          0.8784022634946175, 1.0854101966249685`, 
          0.11755705045849463`}, {-1.0408621116110706`, -0.5854101966249685, 
          0.7330937578935453}, {-1.0408621116110706`, 0.5854101966249685, 
          0.7330937578935453}, {
          1.0408621116110706`, -0.5854101966249685, -0.7330937578935454}, {
          1.0408621116110706`, 
          0.5854101966249685, -0.7330937578935454}, {-0.9959593139531121, \
-0.4472135954999579, -0.8784022634946176}, {-0.9959593139531121, 
          0.4472135954999579, -0.8784022634946176}, {
          0.9959593139531121, -0.4472135954999579, 0.8784022634946175}, {
          0.9959593139531121, 0.4472135954999579, 
          0.8784022634946175}, {-1.0686135667536483`, -0.22360679774997896`, 
          0.8784022634946175}, {-1.0686135667536483`, 0.22360679774997896`, 
          0.8784022634946175}, {
          1.0686135667536483`, -0.22360679774997896`, -0.8784022634946176}, {
          1.0686135667536483`, 
          0.22360679774997896`, -0.8784022634946176}, {-1.1135163644116068`, \
-0.8090169943749475, -0.2628655560595668}, {-1.1135163644116068`, 
          0.8090169943749475, -0.2628655560595668}, {
          1.1135163644116066`, -0.8090169943749475, 0.2628655560595668}, {
          1.1135163644116066`, 0.8090169943749475, 
          0.2628655560595668}, {-1.258824870012679, -0.3618033988749895, 
          0.49797965697655605`}, {-1.258824870012679, 0.3618033988749895, 
          0.49797965697655605`}, {
          1.258824870012679, -0.3618033988749895, -0.49797965697655605`}, {
          1.258824870012679, 
          0.3618033988749895, -0.49797965697655605`}, {-1.1861706172121427`, 
          0.1381966011250105, -0.7330937578935454}, {-1.1861706172121427`, \
-0.1381966011250105, -0.7330937578935454}, {1.1861706172121427`, 
          0.1381966011250105, 0.7330937578935453}, {
          1.1861706172121427`, -0.1381966011250105, 
          0.7330937578935453}, {-1.2310734148701015`, -0.4472135954999579, \
-0.49797965697655605`}, {-1.2310734148701015`, 
          0.4472135954999579, -0.49797965697655605`}, {
          1.2310734148701015`, -0.4472135954999579, 0.49797965697655605`}, {
          1.2310734148701015`, 0.4472135954999579, 
          0.49797965697655605`}, {-1.3486304653285959`, -0.3618033988749895, 
          0.11755705045849463`}, {-1.3486304653285959`, 0.3618033988749895, 
          0.11755705045849463`}, {
          1.3486304653285959`, -0.3618033988749895, -0.11755705045849466`}, {
          1.3486304653285959`, 
          0.3618033988749895, -0.11755705045849466`}, {-1.3037276676706375`, \
-0.5, -0.11755705045849466`}, {-1.3037276676706375`, 
          0.5, -0.11755705045849466`}, {1.3037276676706375`, -0.5, 
          0.11755705045849463`}, {1.3037276676706375`, 0.5, 
          0.11755705045849463`}, {-1.3763819204711736`, 0, 
           0.2628655560595668}, {
          1.3763819204711736`, 0, -0.2628655560595668}}], 
        Polygon3DBox[CompressedData["
1:eJwNw4O2wgAAANBats1l23bLtexa5nJ9/nv3nAsiKIwAGAwG+k/4n80R84QM
uUBKm43zNGlpJhV+vwLZgixMFnJmkUnPvyZiDrEsvnmi6Ts3EvLLLMFoXv6Q
XPbqkQqGpwFPZpN1GxSbjGfYdnmDOt1wWnXqg5ONol1JPfR6RyDtrLQCLaUx
vA4b3e11a6B7kkDNq4mAviau+U5gcU1f6/P2gVF8K/J8RcEIDlt91gB89OWt
vZ5VbxWb0CQ1ifcn+WnhAZFu3ZZw5L2NfnNx0fSbHjy69OQOKszpnx1yjp5W
6a91VMe5vT73K+0KzSURSVyXkWgEU3VO5TjMsjNTM9XsHhSqZqny4Z5iBvhl
+/4WYNpVwuJ+rOQHbuHxbV8MF4VBlpMVvB+chzJfeXQruKUdJFZb1dM4w6oW
hx5TMRRjh3boJAbtrAw/qnCzYxOuYoL6uX5GvHQsxaeP4yPEdv8BefdXCg==

         "]]]], {1365., -1169.0625}, ImageScaled[{0.5, 0.5}], {360, 388},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[-1, 2] (5 + 11 5^Rational[-1, 2])^Rational[1, 2], 0, 
           Rational[1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[5, 4] + Rational[11, 4] 5^Rational[-1, 2])^
           Rational[1, 2], 0, 
           Rational[-1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^Rational[1, 2],
            Rational[-1, 8] (3 + 5^Rational[1, 2])^Rational[3, 2], 
           Rational[1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^Rational[1, 2],
            Rational[1, 8] (3 + 5^Rational[1, 2])^Rational[3, 2], 
           Rational[1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] 2^Rational[-1, 2] (3 + 5^Rational[1, 2]), 
           Rational[1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (7 + 3 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] 2^Rational[-1, 2] (3 + 5^Rational[1, 2]), 
           Rational[1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (7 + 3 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (5 + 11 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (5 + 11 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (5 + 11 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (5 + 11 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[1, 2] + 5^Rational[-1, 2])^Rational[1, 2], 0, 
           Rational[-1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] (7 + 3 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (7 + 3 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 4] (1 + 5^Rational[-1, 2])^
            Rational[1, 2]}, {-(Rational[1, 2] + 5^Rational[-1, 2])^
            Rational[1, 2], 0, 
           Rational[1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] (7 + 3 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (7 + 3 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 4] (13 + 29 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[1, 8] + Rational[1, 4] 5^Rational[-1, 2])^Rational[1, 2],
            Rational[-1, 8] (3 + 5^Rational[1, 2])^Rational[3, 2], 
           Rational[-1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[1, 8] + Rational[1, 4] 5^Rational[-1, 2])^Rational[1, 2],
            Rational[1, 8] (3 + 5^Rational[1, 2])^Rational[3, 2], 
           Rational[-1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          0, 0, Rational[-1, 4] (5 (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
          0, 0, Rational[1, 4] (5 (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
          Rational[1, 4] (5 - 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 4] (5 (3 + 5^Rational[1, 2]))^Rational[1, 2], 
           Rational[1, 4] (5 + 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (5 - 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (5 (3 + 5^Rational[1, 2]))^Rational[1, 2], 
           Rational[1, 4] (5 + 5^Rational[1, 2])^Rational[1, 2]}, {(
            Rational[5, 8] + Rational[1, 4] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] Rational[5, 2]^Rational[1, 2], 
           Rational[-1, 4] (5 + 5^Rational[1, 2])^Rational[1, 2]}, {(
            Rational[5, 8] + Rational[1, 4] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] Rational[5, 2]^Rational[1, 2], 
           Rational[-1, 4] (5 + 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (Rational[5, 2] + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] Rational[5, 2]^Rational[1, 2], 
           Rational[1, 4] (5 + 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (Rational[5, 2] + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] Rational[5, 2]^Rational[1, 2], 
           Rational[1, 4] (5 + 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[1, 2] (5 + 5^Rational[1, 2])^Rational[1, 2], 0, 
           Rational[1, 4] (5 + 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (5 + 5^Rational[1, 2])^Rational[1, 2], 0, 
           Rational[-1, 4] (5 + 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (5 - 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 4] (5 (3 + 5^Rational[1, 2]))^Rational[1, 2], 
           Rational[-1, 4] (5 + 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (5 - 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (5 (3 + 5^Rational[1, 2]))^Rational[1, 2], 
           Rational[-1, 4] (5 + 5^Rational[1, 2])^
            Rational[1, 2]}}, {{-1.5747499444752757`, 0, 
           0.3007504775037728}, {
          1.5747499444752757`, 
           0, -0.3007504775037728}, {-0.48662449473386504`, \
-1.4976761962286422`, 0.3007504775037728}, {-0.48662449473386504`, 
          1.4976761962286422`, 0.3007504775037728}, {
          1.273999466971503, -0.925614793410958, 0.3007504775037728}, {
          1.273999466971503, 0.9256147934109581, 
          0.3007504775037728}, {-0.3007504775037728, -0.925614793410958, 
          1.273999466971503}, {-0.3007504775037728, 0.9256147934109581, 
          1.273999466971503}, {-0.7873749722376379, -0.5720614028176843, \
-1.273999466971503}, {-0.7873749722376379, 
          0.5720614028176843, -1.273999466971503}, {
          0.7873749722376379, -0.5720614028176843, 1.273999466971503}, {
          0.7873749722376379, 0.5720614028176843, 1.273999466971503}, {
          0.9732489894677301, 
           0, -1.273999466971503}, {-1.273999466971503, -0.9256147934109581, \
-0.3007504775037728}, {-1.273999466971503, 
          0.9256147934109581, -0.3007504775037728}, {-0.9732489894677301, 0, 
           1.273999466971503}, {
          0.3007504775037728, -0.9256147934109581, -1.273999466971503}, {
          0.3007504775037728, 0.9256147934109581, -1.273999466971503}, {
          0.48662449473386504`, -1.4976761962286422`, -0.3007504775037728}, {
          0.48662449473386504`, 1.4976761962286422`, -0.3007504775037728}, {
          0, 0, -1.503752387518864}, {0, 0, 1.503752387518864}, {
          0.4156269377774534, -1.279168184004232, 0.6724985119639574}, {
          0.4156269377774534, 1.279168184004232, 0.6724985119639574}, {
          1.0881254497414108`, -0.7905694150420949, -0.6724985119639574}, {
          1.0881254497414108`, 
          0.7905694150420949, -0.6724985119639574}, {-1.0881254497414108`, \
-0.7905694150420949, 0.6724985119639574}, {-1.0881254497414108`, 
          0.7905694150420949, 0.6724985119639574}, {
          1.3449970239279148`, 0, 0.6724985119639574}, {-1.3449970239279148`, 
           0, -0.6724985119639574}, {-0.4156269377774534, -1.279168184004232, \
-0.6724985119639574}, {-0.4156269377774534, 
          1.279168184004232, -0.6724985119639574}}], 
        Polygon3DBox[{{1, 27, 28}, {1, 28, 30}, {1, 30, 27}, {2, 25, 26}, {2, 
          26, 29}, {2, 29, 25}, {3, 23, 27}, {3, 27, 31}, {3, 31, 23}, {4, 24,
           32}, {4, 28, 24}, {4, 32, 28}, {5, 23, 25}, {5, 25, 29}, {5, 29, 
          23}, {6, 24, 29}, {6, 26, 24}, {6, 29, 26}, {7, 22, 27}, {7, 23, 
          22}, {7, 27, 23}, {8, 22, 24}, {8, 24, 28}, {8, 28, 22}, {9, 21, 
          31}, {9, 30, 21}, {9, 31, 30}, {10, 21, 30}, {10, 30, 32}, {10, 32, 
          21}, {11, 22, 23}, {11, 23, 29}, {11, 29, 22}, {12, 22, 29}, {12, 
          24, 22}, {12, 29, 24}, {13, 21, 26}, {13, 25, 21}, {13, 26, 25}, {
          14, 27, 30}, {14, 30, 31}, {14, 31, 27}, {15, 28, 32}, {15, 30, 
          28}, {15, 32, 30}, {16, 22, 28}, {16, 27, 22}, {16, 28, 27}, {17, 
          21, 25}, {17, 25, 31}, {17, 31, 21}, {18, 21, 32}, {18, 26, 21}, {
          18, 32, 26}, {19, 23, 31}, {19, 25, 23}, {19, 31, 25}, {20, 24, 
          26}, {20, 26, 32}, {20, 32, 24}, {1, 14, 3, 7, 16}, {1, 15, 10, 9, 
          14}, {1, 16, 8, 4, 15}, {2, 5, 19, 17, 13}, {2, 6, 12, 11, 5}, {2, 
          13, 18, 20, 6}, {3, 14, 9, 17, 19}, {3, 19, 5, 11, 7}, {4, 8, 12, 6,
           20}, {4, 20, 18, 10, 15}, {7, 11, 12, 8, 16}, {9, 10, 18, 13, 
          17}}]]], {1755., -1169.0625}, ImageScaled[{0.5, 0.5}], {360, 384},
      ContentSelectable->True]}, {InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          0, 0, (Rational[9, 8] + Rational[3, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
          0, 0, Rational[-1, 2] (Rational[3, 2] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[-1, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[-1, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2], (Rational[3, 4] + 
            Rational[1, 3] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], Rational[
           1, 2], (Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), Root[
           1 - 36 #^2 + 144 #^4& , 2, 0]}, {(Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), Root[
           1 - 36 #^2 + 144 #^4& , 2, 0]}, {(Rational[5, 8] + 
            Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2], 
           0, -(Rational[1, 6] (3 + 5^Rational[1, 2]))^Rational[1, 2]}, {(
            Rational[5, 8] + Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2],
            Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[5, 8] + 
            Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^
           Rational[
            1, 2]}, {-(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
            Rational[1, 2], 
           Rational[-1, 2], (Rational[1, 8] + 
            Rational[1, 24] 5^Rational[1, 2])^
           Rational[
            1, 2]}, {-(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
            Rational[1, 2], Rational[
           1, 2], (Rational[1, 8] + Rational[1, 24] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[3, 4] + 
            Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2], Rational[-1, 2], 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[3, 4] + 
            Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2], Rational[1, 2], 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[9, 8] + 
            Rational[3, 8] 5^Rational[1, 2])^Rational[1, 2], 0, 
           0}, {-(Rational[1, 6] (3 + 5^Rational[1, 2]))^Rational[1, 2], 0, 
           Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[-1, 
            2], -(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
            Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[
           1, 2], -(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
            Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
            Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
            Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 24] 5^Rational[1, 2])^
           Rational[1, 2]}, {(Rational[1, 6] (3 + 5^Rational[1, 2]))^
           Rational[1, 2], 
           0, (Rational[5, 8] + Rational[5, 24] 5^Rational[1, 2])^
           Rational[1, 2]}, {
          Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 0, (Rational[1, 6] (3 + 5^Rational[1, 2]))^
           Rational[1, 2]}, {
          Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[-1, 2] (Rational[3, 2] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 0, 0}, {
          Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
           Rational[1, 4] (-3 - 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
           Rational[1, 4] (3 + 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}}, {{0, 0, 1.4012585384440737`}, {
          0, 0, -1.4012585384440737`}, {
          0.17841104488654497`, -1.3090169943749475`, 0.46708617948135783`}, {
          0.17841104488654497`, 1.3090169943749475`, 0.46708617948135783`}, {
          0.46708617948135783`, -0.5, 1.2228474935575286`}, {
          0.46708617948135783`, 0.5, 1.2228474935575286`}, {
          0.46708617948135783`, -1.3090169943749475`, -0.17841104488654497`}, \
{0.46708617948135783`, -0.8090169943749475, -1.0444364486709836`}, {
          0.46708617948135783`, 0.8090169943749475, -1.0444364486709836`}, {
          0.46708617948135783`, 1.3090169943749475`, -0.17841104488654497`}, {
          1.0444364486709836`, 0, -0.9341723589627157}, {
          1.0444364486709836`, -0.8090169943749475, 0.46708617948135783`}, {
          1.0444364486709836`, 0.8090169943749475, 
          0.46708617948135783`}, {-1.2228474935575286`, -0.5, 
          0.46708617948135783`}, {-1.2228474935575286`, 0.5, 
          0.46708617948135783`}, {
          1.2228474935575286`, -0.5, -0.46708617948135783`}, {
          1.2228474935575286`, 0.5, -0.46708617948135783`}, {
          1.4012585384440737`, 0, 0}, {-0.9341723589627157, 
           0, -1.0444364486709836`}, {-0.46708617948135783`, -0.5, \
-1.2228474935575286`}, {-0.46708617948135783`, 
          0.5, -1.2228474935575286`}, {-0.46708617948135783`, \
-1.3090169943749475`, 
          0.17841104488654497`}, {-0.46708617948135783`, -0.8090169943749475, 
          1.0444364486709836`}, {-0.46708617948135783`, 0.8090169943749475, 
          1.0444364486709836`}, {-0.46708617948135783`, 1.3090169943749475`, 
          0.17841104488654497`}, {
          0.9341723589627157, 0, 1.0444364486709836`}, {-1.0444364486709836`, 
           0, 0.9341723589627157}, {-1.0444364486709836`, \
-0.8090169943749475, -0.46708617948135783`}, {-1.0444364486709836`, 
          0.8090169943749475, -0.46708617948135783`}, {-1.4012585384440737`, 
           0, 0}, {-0.17841104488654497`, -1.3090169943749475`, \
-0.46708617948135783`}, {-0.17841104488654497`, 
          1.3090169943749475`, -0.46708617948135783`}}], 
        Polygon3DBox[{{24, 15, 14, 23, 1}, {2, 9, 17, 16, 8}, {8, 16, 12, 3, 
         31}, {16, 17, 13, 26, 12}, {17, 9, 32, 4, 13}, {9, 2, 19, 29, 32}, {
         2, 8, 31, 28, 19}, {4, 32, 29, 15, 24}, {29, 19, 28, 14, 15}, {28, 
         31, 3, 23, 14}, {3, 12, 26, 1, 23}, {26, 13, 4, 24, 1}, {29, 21, 20, 
         28, 30}, {18, 13, 6, 5, 12}, {12, 5, 23, 22, 7}, {5, 6, 24, 27, 
         23}, {6, 13, 10, 25, 24}, {13, 18, 11, 9, 10}, {18, 12, 7, 8, 11}, {
         25, 10, 9, 21, 29}, {9, 11, 8, 20, 21}, {8, 7, 22, 28, 20}, {22, 23, 
         27, 30, 28}, {27, 24, 25, 29, 30}}]]], {195., -1636.6875}, 
      ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{0, 0, -3^Rational[-1, 2]}, {0, 0, 3^Rational[-1, 2]}, {
          0, -Rational[2, 3]^Rational[1, 2], 0}, {
          0, Rational[2, 3]^Rational[1, 2], 0}, {-
           Rational[2, 3]^Rational[1, 2], 0, 
           0}, {-6^Rational[-1, 2], -6^Rational[-1, 2], 
           0}, {-6^Rational[-1, 2], -6^Rational[-1, 2], -3^
            Rational[-1, 2]}, {-6^Rational[-1, 2], -6^Rational[-1, 2], 3^
           Rational[-1, 2]}, {-6^Rational[-1, 2], 6^Rational[-1, 2], 
           0}, {-6^Rational[-1, 2], 6^
           Rational[-1, 2], -3^Rational[-1, 2]}, {-6^Rational[-1, 2], 6^
           Rational[-1, 2], 3^Rational[-1, 2]}, {
          6^Rational[-1, 2], -6^Rational[-1, 2], 0}, {
          6^Rational[-1, 2], -6^Rational[-1, 2], -3^Rational[-1, 2]}, {
          6^Rational[-1, 2], -6^Rational[-1, 2], 3^Rational[-1, 2]}, {
          6^Rational[-1, 2], 6^Rational[-1, 2], 0}, {
          6^Rational[-1, 2], 6^Rational[-1, 2], -3^Rational[-1, 2]}, {
          6^Rational[-1, 2], 6^Rational[-1, 2], 3^Rational[-1, 2]}, {
          Rational[2, 3]^Rational[1, 2], 0, 0}}, {{
          0, 0, -0.5773502691896258}, {0, 0, 0.5773502691896258}, {
          0, -0.816496580927726, 0}, {
          0, 0.816496580927726, 0}, {-0.816496580927726, 0, 
           0}, {-0.4082482904638631, -0.4082482904638631, 
           0}, {-0.4082482904638631, -0.4082482904638631, \
-0.5773502691896258}, {-0.4082482904638631, -0.4082482904638631, 
          0.5773502691896258}, {-0.4082482904638631, 0.4082482904638631, 
           0}, {-0.4082482904638631, 
          0.4082482904638631, -0.5773502691896258}, {-0.4082482904638631, 
          0.4082482904638631, 0.5773502691896258}, {
          0.4082482904638631, -0.4082482904638631, 0}, {
          0.4082482904638631, -0.4082482904638631, -0.5773502691896258}, {
          0.4082482904638631, -0.4082482904638631, 0.5773502691896258}, {
          0.4082482904638631, 0.4082482904638631, 0}, {0.4082482904638631, 
          0.4082482904638631, -0.5773502691896258}, {0.4082482904638631, 
          0.4082482904638631, 0.5773502691896258}, {
          0.816496580927726, 0, 0}}], 
        Polygon3DBox[{{10, 6, 11}, {15, 10, 11}, {13, 10, 15}, {14, 13, 15}, {
         13, 14, 6}, {6, 14, 11}, {11, 14, 15}, {10, 13, 6}, {17, 12, 16}, {
         12, 17, 8}, {8, 7, 12}, {7, 16, 12}, {9, 8, 17}, {8, 9, 7}, {7, 9, 
         16}, {9, 17, 16}, {3, 2, 5}, {3, 5, 1}, {1, 5, 4}, {1, 4, 18}, {5, 2,
          4}, {2, 18, 4}, {2, 3, 18}, {18, 3, 1}}]]], {585., -1636.6875}, 
      ImageScaled[{0.5, 0.5}], {360, 344},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 0, 0}, {
          Root[1 - 1040 #^2 + 1280 #^4& , 1, 0], 
           Rational[1, 8] (1 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 3, 0]}, {
          Root[1 - 1040 #^2 + 1280 #^4& , 1, 0], 
           Rational[1, 8] (-1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 3, 0]}, {
          Rational[-1, 4] (Rational[1, 10] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 8] (-1 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {
          Rational[-1, 4] (Rational[1, 10] (65 + 19 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 8] (1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {
          Rational[-1, 4] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 4] 5^Rational[1, 2], 0}, {
          Rational[-1, 4] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] 5^Rational[1, 2], 0}, {
          Rational[-3, 4] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], (-6 + 2 5^Rational[1, 2])^(-1), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {
          Rational[-3, 4] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 8] (1 - 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-3, 4] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 
           Rational[1, 8] (-1 + 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-3, 4] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 8] (3 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {
          Rational[-1, 4] (5 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (5 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 4], Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 3, 0]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], Rational[-1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
           0, (Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], Rational[1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 3, 0]}, {
          Rational[-1, 4] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] 
           5^Rational[1, 2], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4], Root[1 - 5 #^2 + 5 #^4& , 1, 0]}, {
          Rational[-1, 4] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 4], Root[1 - 5 #^2 + 5 #^4& , 1, 0]}, {
          Rational[-1, 4] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] 
           5^Rational[1, 2], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[5 - 80 #^2 + 256 #^4& , 2, 0], 
           Rational[1, 8] (-5 - 5^Rational[1, 2]), 0}, {
          Root[5 - 80 #^2 + 256 #^4& , 2, 0], 
           Rational[1, 8] (5 + 5^Rational[1, 2]), 0}, {
          Root[1 - 80 #^2 + 1280 #^4& , 2, 0], 
           Rational[1, 8] (-5 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 3, 0]}, {
          Root[1 - 80 #^2 + 1280 #^4& , 2, 0], 
           Rational[1, 8] (-1 - 5^Rational[1, 2]), (
            Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
          Root[1 - 80 #^2 + 1280 #^4& , 2, 0], 
           Rational[1, 8] (1 + 5^Rational[1, 2]), (
            Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
          Root[1 - 80 #^2 + 1280 #^4& , 2, 0], 
           Rational[1, 8] (5 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 3, 0]}, {
          Root[1 - 400 #^2 + 1280 #^4& , 2, 0], (-6 + 
            2 5^Rational[1, 2])^(-1), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 400 #^2 + 1280 #^4& , 2, 0], 
           Rational[1, 8] (3 + 5^Rational[1, 2]), (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 400 #^2 + 1280 #^4& , 3, 0], (-6 + 
            2 5^Rational[1, 2])^(-1), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 400 #^2 + 1280 #^4& , 3, 0], 
           Rational[1, 8] (3 + 5^Rational[1, 2]), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 80 #^2 + 1280 #^4& , 3, 0], 
           Rational[1, 8] (-5 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {
          Root[1 - 80 #^2 + 1280 #^4& , 3, 0], 
           Rational[1, 8] (-1 - 5^Rational[1, 2]), Root[
           1 - 5 #^2 + 5 #^4& , 1, 0]}, {
          Root[1 - 80 #^2 + 1280 #^4& , 3, 0], 
           Rational[1, 8] (1 + 5^Rational[1, 2]), Root[
           1 - 5 #^2 + 5 #^4& , 1, 0]}, {
          Root[1 - 80 #^2 + 1280 #^4& , 3, 0], 
           Rational[1, 8] (5 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {
          Root[5 - 80 #^2 + 256 #^4& , 3, 0], 
           Rational[1, 8] (-5 - 5^Rational[1, 2]), 0}, {
          Root[5 - 80 #^2 + 256 #^4& , 3, 0], 
           Rational[1, 8] (5 + 5^Rational[1, 2]), 0}, {
          Rational[1, 4] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] 5^Rational[1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4], (Rational[1, 10] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]}, {
          Rational[1, 4] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 4], (Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
          Rational[1, 4] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] 5^Rational[1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
            Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2],
            Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {(Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 0, Root[
           1 - 5 #^2 + 5 #^4& , 1, 0]}, {(Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], (Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {
          Rational[1, 4] (5 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (5 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 4], (Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[3, 4] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], (-6 + 2 5^Rational[1, 2])^(-1), Root[
           1 - 20 #^2 + 80 #^4& , 3, 0]}, {
          Rational[3, 4] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 8] (1 - 5^Rational[1, 2]), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[3, 4] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 8] (-1 + 5^Rational[1, 2]), 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[3, 4] (Rational[1, 10] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 8] (3 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 3, 0]}, {
          Rational[1, 4] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 4] 5^Rational[1, 2], 0}, {
          Rational[1, 4] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] 5^Rational[1, 2], 
           0}, {(Rational[13, 32] + Rational[19, 32] 5^Rational[-1, 2])^
           Rational[1, 2], Rational[1, 8] (-1 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 3, 0]}, {(Rational[13, 32] + 
            Rational[19, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 3, 0]}, {(Rational[13, 32] + 
            Rational[29, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (1 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {(Rational[13, 32] + 
            Rational[29, 32] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 8] (-1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0]}, {(Rational[5, 8] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 0, 
           0}}, {{-0.9510565162951535, 0, 
           0}, {-0.9008536623235968, -0.15450849718747373`, 
          0.2628655560595668}, {-0.9008536623235968, 0.15450849718747373`, 
          0.2628655560595668}, {-0.8196237382653702, -0.4045084971874737, \
-0.2628655560595668}, {-0.8196237382653702, 
          0.4045084971874737, -0.2628655560595668}, {-0.7694208842938134, \
-0.5590169943749475, 0}, {-0.7694208842938134, 0.5590169943749475, 
           0}, {-0.63798810626403, -0.6545084971874738, -0.2628655560595668}, \
{-0.63798810626403, -0.15450849718747373`, 
          0.6881909602355868}, {-0.63798810626403, 0.15450849718747373`, 
          0.6881909602355868}, {-0.63798810626403, 
          
          0.6545084971874737, -0.2628655560595668}, {-0.6069610361773602, \
-0.25, -0.6881909602355868}, {-0.6069610361773602, 
          0.25, -0.6881909602355868}, {-0.42532540417601994`, \
-0.8090169943749475, 
          0.2628655560595668}, {-0.42532540417601994`, -0.5, \
-0.6881909602355868}, {-0.42532540417601994`, 0, 
           0.85065080835204}, {-0.42532540417601994`, 
          0.5, -0.6881909602355868}, {-0.42532540417601994`, 
          0.8090169943749475, 
          0.2628655560595668}, {-0.3440954801177934, -0.5590169943749475, 
          0.6881909602355868}, {-0.3440954801177934, -0.25, \
-0.8506508083520399}, {-0.3440954801177934, 
          0.25, -0.8506508083520399}, {-0.3440954801177934, 
          0.5590169943749475, 
          0.6881909602355868}, {-0.29389262614623657`, -0.9045084971874737, 
           0}, {-0.29389262614623657`, 0.9045084971874737, 
           0}, {-0.1314327780297834, -0.9045084971874737, 
          0.2628655560595668}, {-0.1314327780297834, -0.4045084971874737, 
          0.85065080835204}, {-0.1314327780297834, 0.4045084971874737, 
          0.85065080835204}, {-0.1314327780297834, 0.9045084971874737, 
          0.2628655560595668}, {-0.05020285397155683, -0.6545084971874738, 
          0.6881909602355868}, {-0.05020285397155683, 0.6545084971874737, 
          0.6881909602355868}, {
          0.05020285397155682, -0.6545084971874738, -0.6881909602355868}, {
          0.05020285397155682, 0.6545084971874737, -0.6881909602355868}, {
          0.1314327780297834, -0.9045084971874737, -0.2628655560595668}, {
          0.1314327780297834, -0.4045084971874737, -0.8506508083520399}, {
          0.1314327780297834, 0.4045084971874737, -0.8506508083520399}, {
          0.1314327780297834, 0.9045084971874737, -0.2628655560595668}, {
          0.2938926261462366, -0.9045084971874737, 0}, {
          0.2938926261462366, 0.9045084971874737, 0}, {
          0.3440954801177934, -0.5590169943749475, -0.6881909602355868}, {
          0.3440954801177934, -0.25, 0.85065080835204}, {0.3440954801177934, 
          0.25, 0.85065080835204}, {0.3440954801177934, 
          0.5590169943749475, -0.6881909602355868}, {
          0.42532540417601994`, -0.8090169943749475, -0.2628655560595668}, {
          0.42532540417601994`, -0.5, 0.6881909602355868}, {
          0.42532540417601994`, 0, -0.8506508083520399}, {
          0.42532540417601994`, 0.5, 0.6881909602355868}, {
          0.42532540417601994`, 0.8090169943749475, -0.2628655560595668}, {
          0.6069610361773602, -0.25, 0.6881909602355868}, {0.6069610361773602,
           0.25, 0.6881909602355868}, {0.63798810626403, -0.6545084971874738, 
          0.2628655560595668}, {
          0.63798810626403, -0.15450849718747373`, -0.6881909602355868}, {
          0.63798810626403, 0.15450849718747373`, -0.6881909602355868}, {
          0.63798810626403, 0.6545084971874737, 0.2628655560595668}, {
          0.7694208842938134, -0.5590169943749475, 0}, {
          0.7694208842938134, 0.5590169943749475, 0}, {
          0.8196237382653702, -0.4045084971874737, 0.2628655560595668}, {
          0.8196237382653702, 0.4045084971874737, 0.2628655560595668}, {
          0.9008536623235968, -0.15450849718747373`, -0.2628655560595668}, {
          0.9008536623235968, 0.15450849718747373`, -0.2628655560595668}, {
          0.9510565162951535, 0, 0}}], 
        Polygon3DBox[{{16, 44, 46}, {44, 14, 43}, {45, 43, 15}, {17, 47, 
         45}, {47, 18, 46}, {60, 43, 45}, {46, 44, 60}, {47, 60, 45}, {43, 60,
          44}, {60, 47, 46}, {16, 1, 14}, {17, 15, 1}, {16, 18, 1}, {14, 1, 
         15}, {1, 18, 17}, {15, 17, 45}, {14, 15, 43}, {16, 14, 44}, {46, 18, 
         16}, {47, 17, 18}, {39, 12, 35}, {26, 49, 22}, {26, 23, 50}, {22, 49,
          38}, {50, 23, 39}, {26, 50, 49}, {38, 59, 35}, {50, 39, 59}, {59, 
         38, 49}, {49, 50, 59}, {12, 11, 35}, {12, 39, 23}, {11, 2, 22}, {11, 
         12, 2}, {35, 59, 39}, {26, 2, 23}, {22, 2, 26}, {23, 2, 12}, {38, 11,
          22}, {11, 38, 35}, {21, 36, 52}, {54, 25, 31}, {40, 25, 54}, {30, 
         57, 36}, {40, 57, 30}, {31, 52, 54}, {57, 52, 36}, {40, 54, 57}, {7, 
         4, 9}, {31, 4, 21}, {57, 54, 52}, {7, 36, 21}, {4, 7, 21}, {40, 30, 
         9}, {52, 31, 21}, {4, 25, 9}, {36, 7, 30}, {9, 25, 40}, {9, 30, 7}, {
         4, 31, 25}, {51, 33, 20}, {28, 55, 32}, {41, 55, 28}, {33, 56, 29}, {
         29, 56, 41}, {51, 32, 55}, {33, 51, 56}, {41, 56, 55}, {5, 6, 10}, {
         20, 5, 32}, {55, 56, 51}, {33, 6, 20}, {6, 5, 20}, {41, 10, 29}, {32,
          51, 20}, {10, 28, 5}, {6, 33, 29}, {41, 28, 10}, {29, 10, 6}, {28, 
         32, 5}, {13, 42, 34}, {27, 19, 48}, {27, 53, 24}, {48, 19, 37}, {24, 
         53, 42}, {48, 53, 27}, {58, 37, 34}, {58, 42, 53}, {37, 58, 48}, {58,
          53, 48}, {34, 8, 13}, {42, 13, 24}, {19, 3, 8}, {3, 13, 8}, {42, 58,
          34}, {27, 24, 3}, {27, 3, 19}, {3, 24, 13}, {8, 37, 19}, {37, 8, 
         34}}]]], {975., -1636.6875}, ImageScaled[{0.5, 0.5}], {360, 374},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[-3, 10] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] 5^Rational[-1, 2], Root[
           1 - 500 #^2 + 2000 #^4& , 2, 0]}, {
          Rational[-3, 10] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] 5^Rational[-1, 2], Root[
           1 - 500 #^2 + 2000 #^4& , 2, 0]}, {
          Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 20] (-5 - 5^Rational[1, 2]), Root[
           1 - 500 #^2 + 2000 #^4& , 3, 0]}, {
          Rational[-1, 10] (Rational[1, 2] (85 + 31 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 20] (5 + 5^Rational[1, 2]), Root[
           1 - 500 #^2 + 2000 #^4& , 3, 0]}, {
          Root[1 - 5 #^2 + 5 #^4& , 1, 0], 0, Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {
          Root[1 - 5 #^2 + 5 #^4& , 1, 0], 
           0, (Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[-1, 5] (2 (5 + 5^Rational[1, 2]))^Rational[1, 2], 0, 
           Rational[-3, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], Root[1 - 20 #^2 + 80 #^4& , 1, 0]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], Root[1 - 20 #^2 + 80 #^4& , 1, 0]}, {
          Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], (Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[-1, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 10] (-5 - 5^Rational[1, 2]), Root[
           1 - 500 #^2 + 2000 #^4& , 3, 0]}, {
          Rational[-1, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], -5^
            Rational[-1, 2], 
           Rational[3, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[-1, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 5^
           Rational[-1, 2], 
           Rational[3, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[-1, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 10] (5 + 5^Rational[1, 2]), Root[
           1 - 500 #^2 + 2000 #^4& , 3, 
            0]}, {-(Rational[1, 8] + Rational[11, 40] 5^Rational[-1, 2])^
            Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 500 #^2 + 2000 #^4& , 2, 
            0]}, {-(Rational[1, 8] + Rational[11, 40] 5^Rational[-1, 2])^
            Rational[1, 2], 
           Rational[1, 20] (5 - 3 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[29, 40] 5^Rational[-1, 2])^
           Rational[
            1, 2]}, {-(Rational[1, 8] + Rational[11, 40] 5^Rational[-1, 2])^
            Rational[1, 2], 
           Rational[1, 20] (-5 + 3 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[29, 40] 5^Rational[-1, 2])^
           Rational[
            1, 2]}, {-(Rational[1, 8] + Rational[11, 40] 5^Rational[-1, 2])^
            Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 500 #^2 + 2000 #^4& , 2, 0]}, {
          Rational[-1, 10] (25 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] 5^Rational[-1, 2], Root[
           1 - 1300 #^2 + 2000 #^4& , 1, 0]}, {
          Rational[-1, 10] (25 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] 5^Rational[-1, 2], Root[
           1 - 1300 #^2 + 2000 #^4& , 1, 0]}, {
          Rational[-3, 10] Root[5 - 5 #^2 + #^4& , 3, 0], 
           Rational[1, 20] (-5 - 5^Rational[1, 2]), Root[
           1 - 1300 #^2 + 2000 #^4& , 1, 0]}, {
          Rational[-3, 10] Root[5 - 5 #^2 + #^4& , 3, 0], 
           Rational[1, 20] (5 + 5^Rational[1, 2]), Root[
           1 - 1300 #^2 + 2000 #^4& , 1, 0]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {
          Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 25 #^2 + 125 #^4& , 2, 0], 
           Rational[1, 10] (-5 - 5^Rational[1, 2]), 
           Rational[-3, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Root[1 - 25 #^2 + 125 #^4& , 2, 0], -5^Rational[-1, 2], (
            Rational[13, 40] + Rational[29, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Root[1 - 25 #^2 + 125 #^4& , 2, 0], 5^
           Rational[-1, 2], (Rational[13, 40] + 
            Rational[29, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 25 #^2 + 125 #^4& , 2, 0], 
           Rational[1, 10] (5 + 5^Rational[1, 2]), 
           Rational[-3, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[-1, 10] (5 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] - 5^Rational[-1, 2], Root[
           1 - 500 #^2 + 2000 #^4& , 2, 0]}, {
          Rational[-1, 10] (5 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2], (Rational[13, 40] + 
            Rational[29, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 10] (5 - 2 5^Rational[1, 2])^Rational[1, 2], Rational[
           1, 2], (Rational[13, 40] + Rational[29, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[-1, 10] (5 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] + 5^Rational[-1, 2], Root[
           1 - 500 #^2 + 2000 #^4& , 2, 0]}, {
          0, 0, Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          0, 0, (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
          Rational[1, 10] (5 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] - 5^Rational[-1, 2], Root[
           1 - 500 #^2 + 2000 #^4& , 3, 0]}, {
          Rational[1, 10] (5 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2], Root[1 - 1300 #^2 + 2000 #^4& , 1, 0]}, {
          Rational[1, 10] (5 - 2 5^Rational[1, 2])^Rational[1, 2], Rational[
           1, 2], Root[1 - 1300 #^2 + 2000 #^4& , 1, 0]}, {
          Rational[1, 10] (5 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] + 5^Rational[-1, 2], Root[
           1 - 500 #^2 + 2000 #^4& , 3, 0]}, {
          Root[1 - 25 #^2 + 125 #^4& , 3, 0], 
           Rational[1, 10] (-5 - 5^Rational[1, 2]), 
           Rational[3, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Root[1 - 25 #^2 + 125 #^4& , 3, 0], -5^Rational[-1, 2], Root[
           1 - 1300 #^2 + 2000 #^4& , 1, 0]}, {
          Root[1 - 25 #^2 + 125 #^4& , 3, 0], 5^Rational[-1, 2], Root[
           1 - 1300 #^2 + 2000 #^4& , 1, 0]}, {
          Root[1 - 25 #^2 + 125 #^4& , 3, 0], 
           Rational[1, 10] (5 + 5^Rational[1, 2]), 
           Rational[3, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {
          Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {
          Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[3, 10] Root[5 - 5 #^2 + #^4& , 3, 0], 
           Rational[1, 20] (-5 - 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[29, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[3, 10] Root[5 - 5 #^2 + #^4& , 3, 0], 
           Rational[1, 20] (5 + 5^Rational[1, 2]), (Rational[13, 40] + 
            Rational[29, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 10] (25 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] 
           5^Rational[-1, 2], (Rational[13, 40] + 
            Rational[29, 40] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 10] (25 - 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] 
           5^Rational[-1, 2], (Rational[13, 40] + 
            Rational[29, 40] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 500 #^2 + 2000 #^4& , 3, 0]}, {(Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (5 - 3 5^Rational[1, 2]), Root[
           1 - 1300 #^2 + 2000 #^4& , 1, 0]}, {(Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (-5 + 3 5^Rational[1, 2]), Root[
           1 - 1300 #^2 + 2000 #^4& , 1, 0]}, {(Rational[1, 8] + 
            Rational[11, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 500 #^2 + 2000 #^4& , 3, 0]}, {
          Rational[1, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 10] (-5 - 5^Rational[1, 2]), Root[
           1 - 500 #^2 + 2000 #^4& , 2, 0]}, {
          Rational[1, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], -5^
            Rational[-1, 2], 
           Rational[-3, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[1, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 5^
           Rational[-1, 2], 
           Rational[-3, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[1, 5] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 10] (5 + 5^Rational[1, 2]), Root[
           1 - 500 #^2 + 2000 #^4& , 2, 0]}, {(Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[-1, 2],
            Root[1 - 20 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2], (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[1, 2], 
           Root[1 - 20 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2], (Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[1, 5] (2 (5 + 5^Rational[1, 2]))^Rational[1, 2], 0, 
           Rational[3, 10] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {(Rational[1, 10] (5 + 5^Rational[1, 2]))^
           Rational[1, 2], 0, Root[
           1 - 20 #^2 + 80 #^4& , 1, 0]}, {(
            Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2], 
           0, (Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^
           Rational[1, 2]}, {(Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (-5 - 5^Rational[1, 2]), Root[
           1 - 500 #^2 + 2000 #^4& , 2, 0]}, {(Rational[17, 40] + 
            Rational[31, 40] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 20] (5 + 5^Rational[1, 2]), Root[
           1 - 500 #^2 + 2000 #^4& , 2, 0]}, {
          Rational[3, 10] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] 5^Rational[-1, 2], Root[
           1 - 500 #^2 + 2000 #^4& , 3, 0]}, {
          Rational[3, 10] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] 5^Rational[-1, 2], Root[
           1 - 500 #^2 + 2000 #^4& , 3, 
            0]}}, {{-0.923305061152576, -0.22360679774997896`, \
-0.044902797657958536`}, {-0.923305061152576, 
          0.22360679774997896`, -0.044902797657958536`}, \
{-0.8784022634946176, -0.3618033988749895, 
          0.044902797657958536`}, {-0.8784022634946176, 0.3618033988749895, 
          0.044902797657958536`}, {-0.8506508083520399, 
           0, -0.42532540417601994`}, {-0.8506508083520399, 0, 
           0.42532540417601994`}, {-0.7608452130361228, 
           0, -0.570633909777092}, {-0.6881909602355868, -0.5, \
-0.42532540417601994`}, {-0.6881909602355868, -0.5, 
          0.42532540417601994`}, {-0.6881909602355868, 
          0.5, -0.42532540417601994`}, {-0.6881909602355868, 0.5, 
          0.42532540417601994`}, {-0.6155367074350507, -0.723606797749979, 
          0.044902797657958536`}, {-0.6155367074350507, -0.4472135954999579, 
          0.570633909777092}, {-0.6155367074350507, 0.4472135954999579, 
          0.570633909777092}, {-0.6155367074350507, 0.723606797749979, 
          0.044902797657958536`}, {-0.49797965697655605`, \
-0.8090169943749475, -0.044902797657958536`}, {-0.49797965697655605`, \
-0.08541019662496847, 0.8057480106940814}, {-0.49797965697655605`, 
          0.08541019662496847, 0.8057480106940814}, {-0.49797965697655605`, 
          0.8090169943749475, -0.044902797657958536`}, \
{-0.45307685931859754`, -0.22360679774997896`, -0.8057480106940814}, \
{-0.45307685931859754`, 
          
          0.22360679774997896`, -0.8057480106940814}, {-0.35267115137548394`, \
-0.3618033988749895, -0.8057480106940814}, {-0.35267115137548394`, 
          0.3618033988749895, -0.8057480106940814}, {-0.2628655560595668, \
-0.8090169943749475, -0.42532540417601994`}, {-0.2628655560595668, \
-0.8090169943749475, 0.42532540417601994`}, {-0.2628655560595668, 
          0.8090169943749475, -0.42532540417601994`}, {-0.2628655560595668, 
          0.8090169943749475, 
          0.42532540417601994`}, {-0.23511410091698923`, -0.723606797749979, \
-0.570633909777092}, {-0.23511410091698923`, -0.4472135954999579, 
          0.8057480106940814}, {-0.23511410091698923`, 0.4472135954999579, 
          0.8057480106940814}, {-0.23511410091698923`, 
          0.723606797749979, -0.570633909777092}, {-0.07265425280053608, \
-0.9472135954999579, -0.044902797657958536`}, {-0.07265425280053608, -0.5, 
          0.8057480106940814}, {-0.07265425280053608, 0.5, 
          0.8057480106940814}, {-0.07265425280053608, 
          0.9472135954999579, -0.044902797657958536`}, {
          0, 0, -0.9510565162951535}, {0, 0, 0.9510565162951535}, {
          0.07265425280053608, -0.9472135954999579, 0.044902797657958536`}, {
          0.07265425280053608, -0.5, -0.8057480106940814}, {
          0.07265425280053608, 0.5, -0.8057480106940814}, {
          0.07265425280053608, 0.9472135954999579, 0.044902797657958536`}, {
          0.23511410091698925`, -0.723606797749979, 0.570633909777092}, {
          0.23511410091698925`, -0.4472135954999579, -0.8057480106940814}, {
          0.23511410091698925`, 0.4472135954999579, -0.8057480106940814}, {
          0.23511410091698925`, 0.723606797749979, 0.570633909777092}, {
          0.2628655560595668, -0.8090169943749475, -0.42532540417601994`}, {
          0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
          0.2628655560595668, 0.8090169943749475, -0.42532540417601994`}, {
          0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}, {
          0.35267115137548394`, -0.3618033988749895, 0.8057480106940814}, {
          0.35267115137548394`, 0.3618033988749895, 0.8057480106940814}, {
          0.45307685931859754`, -0.22360679774997896`, 0.8057480106940814}, {
          0.45307685931859754`, 0.22360679774997896`, 0.8057480106940814}, {
          0.49797965697655605`, -0.8090169943749475, 0.044902797657958536`}, {
          0.49797965697655605`, -0.08541019662496847, -0.8057480106940814}, {
          0.49797965697655605`, 0.08541019662496847, -0.8057480106940814}, {
          0.49797965697655605`, 0.8090169943749475, 0.044902797657958536`}, {
          0.6155367074350507, -0.723606797749979, -0.044902797657958536`}, {
          0.6155367074350507, -0.4472135954999579, -0.570633909777092}, {
          0.6155367074350507, 0.4472135954999579, -0.570633909777092}, {
          0.6155367074350507, 0.723606797749979, -0.044902797657958536`}, {
          0.6881909602355868, -0.5, -0.42532540417601994`}, {
          0.6881909602355868, -0.5, 0.42532540417601994`}, {
          0.6881909602355868, 0.5, -0.42532540417601994`}, {
          0.6881909602355868, 0.5, 0.42532540417601994`}, {
          0.7608452130361228, 0, 0.570633909777092}, {
          0.85065080835204, 0, -0.42532540417601994`}, {
          0.85065080835204, 0, 0.42532540417601994`}, {
          0.8784022634946175, -0.3618033988749895, -0.044902797657958536`}, {
          0.8784022634946175, 0.3618033988749895, -0.044902797657958536`}, {
          0.923305061152576, -0.22360679774997896`, 0.044902797657958536`}, {
          0.923305061152576, 0.22360679774997896`, 0.044902797657958536`}}], 
        Polygon3DBox[CompressedData["
1:eJwNw0eSogAAAEAFRQFJkkGiihIlK0kkCJz3CfOBve7zd7qqjZ+/f36A1Wr1
7zf4+wo/rhH6Fi7S5/KABTSShPfjI0UXYbuVLtfHOEbXKwp/3hd4K0hbdHy8
P9EIo9v3Z3QOgSY32ovJKCeTqVfAONThpTVMcGjkTAPk2QkoGQheM6AxmTMD
B6qZXweAyebGIPOCNm85eaeL3f1mGr0JGffhRu5u9x3dG7nZFwZEmjQ05Lfh
XuxICKJ3+dAX/RASvngqT+zzmPpHMWXDp08cn+UpZIlULMX1aQn941oMlyd7
WvvpciTWS/lcE2y5pIjtKXpr44nOVQmueBXHIZ7SJjaCt3qlgLo9eTrITXai
4OBUeQgHJu0E4kg1tdbePatdjFnnmo9VrHZ53t13amxh+/rcnTfq13I3Zz62
vpi6cevvfsPH326zx7pv/R8sJTV4
         "]]]], {1365., -1636.6875}, ImageScaled[{0.5, 0.5}], {360, 396},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[1, 2] 3^Rational[-1, 2] (-1 - 5^Rational[1, 2]), 0, Root[
           1 - 36 #^2 + 144 #^4& , 2, 
            0]}, {-(Rational[7, 24] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2], 0, -3^Rational[-1, 2]}, {
          Rational[1, 4] 3^Rational[-1, 2] (-3 - 5^Rational[1, 2]), 
           Rational[-1, 2], Rational[1, 2] 3^Rational[-1, 2]}, {
          Rational[1, 4] 3^Rational[-1, 2] (-3 - 5^Rational[1, 2]), Rational[
           1, 2], Rational[1, 2] 3^Rational[-1, 2]}, {-3^Rational[-1, 2], 
           0, (Rational[7, 24] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[1, 4] 3^Rational[-1, 2] (-1 + 5^Rational[1, 2])}, {
          Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[1, 4] 3^Rational[-1, 2] (-1 + 5^Rational[1, 2])}, {
          Rational[-1, 2] 3^Rational[-1, 2], 
           Rational[-1, 
            2], -(Rational[7, 24] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]}, {
          Rational[-1, 2] 3^Rational[-1, 2], Rational[
           1, 2], -(Rational[7, 24] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]}, {
          Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
           0, (Rational[1, 6] (3 + 5^Rational[1, 2]))^Rational[1, 2]}, {
          Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
           Rational[1, 4] (1 + 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2]}, {
          Rational[1, 4] 3^Rational[-1, 2] (-1 + 5^Rational[1, 2]), 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), Rational[1, 4] 
           3^Rational[-1, 2] (1 + 5^Rational[1, 2])}, {
          Rational[1, 4] 3^Rational[-1, 2] (-1 + 5^Rational[1, 2]), 
           Rational[1, 4] (1 + 5^Rational[1, 2]), Rational[1, 4] 
           3^Rational[-1, 2] (1 + 5^Rational[1, 2])}, {
          Rational[1, 4] 3^Rational[-1, 2] (-1 + 5^Rational[1, 2]), 0, 
           Rational[1, 2] 3^Rational[-1, 2] (-1 - 5^Rational[1, 2])}, {
          Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2], Rational[1, 4] 
           3^Rational[-1, 2] (3 + 5^Rational[1, 2])}, {
          Rational[1, 2] 3^Rational[-1, 2], Rational[1, 2], Rational[1, 4] 
           3^Rational[-1, 2] (3 + 5^Rational[1, 2])}, {
          Rational[1, 4] 3^Rational[-1, 2] (1 + 5^Rational[1, 2]), 
           Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 36 #^2 + 144 #^4& , 2, 0]}, {
          Rational[1, 4] 3^Rational[-1, 2] (1 + 5^Rational[1, 2]), 
           Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 36 #^2 + 144 #^4& , 2, 0]}, {
          3^Rational[-1, 2], 
           0, -(Rational[7, 24] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]}, {(Rational[7, 24] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], Rational[-1, 2], 
           Rational[-1, 2] 
           3^Rational[-1, 2]}, {(Rational[7, 24] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], Rational[1, 2], 
           Rational[-1, 2] 
           3^Rational[-1, 2]}, {(Rational[7, 24] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 0, 3^
           Rational[-1, 2]}, {(Rational[1, 6] (3 + 5^Rational[1, 2]))^
           Rational[1, 2], 0, Rational[1, 4] 
           3^Rational[-1, 2] (-1 + 5^Rational[1, 2])}}, {{-0.9341723589627159,
            0, -0.17841104488654497`}, {-0.7557613140761708, 
           0, -0.5773502691896258}, {-0.7557613140761709, -0.5, 
          0.2886751345948129}, {-0.7557613140761709, 0.5, 
          0.2886751345948129}, {-0.5773502691896258, 0, 
           0.7557613140761708}, {-0.46708617948135783`, -0.8090169943749475, 
          0.178411044886545}, {-0.46708617948135783`, 0.8090169943749475, 
          0.178411044886545}, {-0.2886751345948129, -0.5, \
-0.7557613140761708}, {-0.2886751345948129, 
          0.5, -0.7557613140761708}, {-0.17841104488654497`, 0, 
           0.9341723589627157}, {-0.17841104488654497`, -0.8090169943749475, \
-0.46708617948135783`}, {-0.17841104488654497`, 
          0.8090169943749475, -0.46708617948135783`}, {
          0.178411044886545, -0.8090169943749475, 0.46708617948135794`}, {
          0.178411044886545, 0.8090169943749475, 0.46708617948135794`}, {
          0.178411044886545, 0, -0.9341723589627159}, {
          0.2886751345948129, -0.5, 0.7557613140761709}, {0.2886751345948129, 
          0.5, 0.7557613140761709}, {
          0.46708617948135794`, -0.8090169943749475, -0.17841104488654497`}, {
          0.46708617948135794`, 0.8090169943749475, -0.17841104488654497`}, {
          0.5773502691896258, 0, -0.7557613140761708}, {
          0.7557613140761708, -0.5, -0.2886751345948129}, {0.7557613140761708,
           0.5, -0.2886751345948129}, {
          0.7557613140761708, 0, 0.5773502691896258}, {
          0.9341723589627157, 0, 0.178411044886545}}], 
        Polygon3DBox[{{5, 16, 17}, {8, 9, 20}, {16, 6, 18}, {19, 7, 17}, {20, 
         18, 8}, {9, 19, 20}, {18, 24, 16}, {24, 19, 17}, {5, 1, 6}, {5, 7, 
         1}, {24, 18, 20}, {19, 24, 20}, {9, 8, 1}, {5, 6, 16}, {17, 7, 5}, {
         17, 16, 24}, {6, 1, 8}, {1, 7, 9}, {6, 8, 18}, {19, 9, 7}, {10, 13, 
         23}, {14, 10, 23}, {11, 21, 13}, {11, 15, 21}, {15, 12, 22}, {14, 22,
          12}, {22, 21, 15}, {23, 13, 21}, {22, 14, 23}, {21, 22, 23}, {2, 15,
          11}, {2, 12, 15}, {3, 11, 13}, {13, 10, 3}, {10, 14, 4}, {14, 12, 
         4}, {4, 3, 10}, {2, 11, 3}, {4, 12, 2}, {2, 3, 4}}]]], {1755., -1636.6875},
       ImageScaled[{0.5, 0.5}], {360, 392},
      ContentSelectable->True]}, {InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{0, -2^Rational[-1, 2], 0}, {0, 2^Rational[-1, 2], 0}, {
          Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] 2^Rational[-1, 2], 
           Rational[-1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 2] 2^Rational[-1, 2], 
           Rational[-1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], 
           Rational[1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], 
           Rational[1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] 2^Rational[-1, 2], 
           Rational[-1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 2] 2^Rational[-1, 2], 
           Rational[-1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2], 0, 
           Rational[-1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], 
           Rational[-1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], 
           Rational[-1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2], 0, 
           Rational[1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (5 - 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 0}, {
          Rational[1, 4] (5 - 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 0}, {
          Rational[1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2], 0, 
           Rational[-1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (5 - 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 0}, {
          Rational[-1, 4] (5 - 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 0}, {
          Rational[-1, 4] (5 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], 0}, {
          Rational[-1, 4] (5 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], 0}, {
          Rational[1, 4] (5 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], 0}, {
          Rational[1, 4] (5 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], 0}, {
          Rational[-1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2], 0, 
           Rational[1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^Rational[1, 2],
            Rational[-1, 2] 2^Rational[-1, 2], 
           Rational[1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^Rational[1, 2],
            Rational[1, 2] 2^Rational[-1, 2], 
           Rational[1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[-1, 4] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 80 #^2 + 320 #^4& , 2, 0], Rational[-1, 2] 
           2^Rational[-1, 2], 
           Rational[1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2]}, {
          Root[1 - 80 #^2 + 320 #^4& , 2, 0], Rational[1, 2] 
           2^Rational[-1, 2], 
           Rational[1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2]}}, {{
          0, -0.7071067811865475, 0}, {0, 0.7071067811865475, 0}, {
          0.1148764602736806, -0.35355339059327373`, -0.6015009550075456}, {
          0.1148764602736806, 0.35355339059327373`, -0.6015009550075456}, {
          0.18587401723009225`, -0.5720614028176843, 0.3717480344601845}, {
          0.18587401723009225`, 0.5720614028176843, 0.3717480344601845}, {
          0.3007504775037728, -0.21850801222441055`, 0.6015009550075456}, {
          0.3007504775037728, 0.21850801222441055`, 0.6015009550075456}, {
          0.48662449473386504`, -0.35355339059327373`, -0.3717480344601845}, {
          0.48662449473386504`, 
          0.35355339059327373`, -0.3717480344601845}, {-0.6015009550075456, 
           0, -0.3717480344601845}, {-0.3007504775037728, \
-0.21850801222441055`, -0.6015009550075456}, {-0.3007504775037728, 
          0.21850801222441055`, -0.6015009550075456}, {
          0.6015009550075456, 0, 0.3717480344601845}, {
          0.4156269377774534, -0.5720614028176843, 0}, {
          0.4156269377774534, 0.5720614028176843, 0}, {
          0.3717480344601845, 
           0, -0.6015009550075456}, {-0.4156269377774534, -0.5720614028176843,
            0}, {-0.4156269377774534, 0.5720614028176843, 
           0}, {-0.6724985119639574, -0.21850801222441055`, 
           0}, {-0.6724985119639574, 0.21850801222441055`, 0}, {
          0.6724985119639574, -0.21850801222441055`, 0}, {
          0.6724985119639574, 0.21850801222441055`, 0}, {-0.3717480344601845, 
           0, 0.6015009550075456}, {-0.48662449473386504`, \
-0.35355339059327373`, 0.3717480344601845}, {-0.48662449473386504`, 
          0.35355339059327373`, 
          0.3717480344601845}, {-0.18587401723009225`, -0.5720614028176843, \
-0.3717480344601845}, {-0.18587401723009225`, 
          0.5720614028176843, -0.3717480344601845}, {-0.11487646027368059`, \
-0.35355339059327373`, 0.6015009550075456}, {-0.11487646027368059`, 
          0.35355339059327373`, 0.6015009550075456}}], 
        Polygon3DBox[{{1, 11, 17}, {24, 11, 1}, {17, 14, 1}, {1, 14, 24}, {17,
          11, 2}, {2, 11, 24}, {2, 14, 17}, {24, 14, 2}, {3, 5, 20}, {23, 5, 
         3}, {3, 20, 28}, {28, 23, 3}, {21, 6, 4}, {4, 6, 22}, {27, 21, 4}, {
         4, 22, 27}, {30, 20, 5}, {5, 23, 30}, {6, 21, 29}, {29, 22, 6}, {7, 
         9, 16}, {18, 9, 7}, {7, 16, 26}, {26, 18, 7}, {15, 10, 8}, {8, 10, 
         19}, {25, 15, 8}, {8, 19, 25}, {9, 13, 16}, {18, 13, 9}, {15, 12, 
         10}, {10, 12, 19}, {12, 15, 25}, {25, 19, 12}, {26, 16, 13}, {13, 18,
          26}, {30, 28, 20}, {21, 27, 29}, {29, 27, 22}, {23, 28, 30}}]]], {195., -2104.3125},
       ImageScaled[{0.5, 0.5}], {360, 376},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[-1, 3] 2^Rational[-1, 2], Rational[-1, 3] 2^Rational[1, 2],
            Rational[-1, 3] 2^Rational[1, 2]}, {
          Rational[-1, 3] 2^Rational[-1, 2], Rational[-1, 3] 2^Rational[1, 2],
            Rational[1, 3] 2^Rational[1, 2]}, {
          Rational[-1, 3] 2^Rational[-1, 2], Rational[1, 3] 2^Rational[1, 2], 
           Rational[-1, 3] 2^Rational[1, 2]}, {
          Rational[-1, 3] 2^Rational[-1, 2], Rational[1, 3] 2^Rational[1, 2], 
           Rational[1, 3] 2^Rational[1, 2]}, {
          Rational[1, 3] 2^Rational[-1, 2], Rational[-1, 3] 2^Rational[1, 2], 
           Rational[-1, 3] 2^Rational[1, 2]}, {
          Rational[1, 3] 2^Rational[-1, 2], Rational[-1, 3] 2^Rational[1, 2], 
           Rational[1, 3] 2^Rational[1, 2]}, {
          Rational[1, 3] 2^Rational[-1, 2], Rational[1, 3] 2^Rational[1, 2], 
           Rational[-1, 3] 2^Rational[1, 2]}, {
          Rational[1, 3] 2^Rational[-1, 2], Rational[1, 3] 2^Rational[1, 2], 
           Rational[1, 3] 2^Rational[1, 2]}, {
          Rational[-1, 3] 2^Rational[1, 2], Rational[-1, 3] 2^Rational[-1, 2],
            Rational[-1, 3] 2^Rational[1, 2]}, {
          Rational[-1, 3] 2^Rational[1, 2], Rational[-1, 3] 2^Rational[-1, 2],
            Rational[1, 3] 2^Rational[1, 2]}, {
          Rational[-1, 3] 2^Rational[1, 2], Rational[1, 3] 2^Rational[-1, 2], 
           Rational[-1, 3] 2^Rational[1, 2]}, {
          Rational[-1, 3] 2^Rational[1, 2], Rational[1, 3] 2^Rational[-1, 2], 
           Rational[1, 3] 2^Rational[1, 2]}, {
          Rational[-1, 3] 2^Rational[1, 2], Rational[-1, 3] 2^Rational[1, 2], 
           Rational[-1, 3] 2^Rational[-1, 2]}, {
          Rational[-1, 3] 2^Rational[1, 2], Rational[-1, 3] 2^Rational[1, 2], 
           Rational[1, 3] 2^Rational[-1, 2]}, {
          Rational[-1, 3] 2^Rational[1, 2], Rational[1, 3] 2^Rational[1, 2], 
           Rational[-1, 3] 2^Rational[-1, 2]}, {
          Rational[-1, 3] 2^Rational[1, 2], Rational[1, 3] 2^Rational[1, 2], 
           Rational[1, 3] 2^Rational[-1, 2]}, {
          Rational[1, 3] 2^Rational[1, 2], Rational[-1, 3] 2^Rational[-1, 2], 
           Rational[-1, 3] 2^Rational[1, 2]}, {
          Rational[1, 3] 2^Rational[1, 2], Rational[-1, 3] 2^Rational[-1, 2], 
           Rational[1, 3] 2^Rational[1, 2]}, {
          Rational[1, 3] 2^Rational[1, 2], Rational[1, 3] 2^Rational[-1, 2], 
           Rational[-1, 3] 2^Rational[1, 2]}, {
          Rational[1, 3] 2^Rational[1, 2], Rational[1, 3] 2^Rational[-1, 2], 
           Rational[1, 3] 2^Rational[1, 2]}, {
          Rational[1, 3] 2^Rational[1, 2], Rational[-1, 3] 2^Rational[1, 2], 
           Rational[-1, 3] 2^Rational[-1, 2]}, {
          Rational[1, 3] 2^Rational[1, 2], Rational[-1, 3] 2^Rational[1, 2], 
           Rational[1, 3] 2^Rational[-1, 2]}, {
          Rational[1, 3] 2^Rational[1, 2], Rational[1, 3] 2^Rational[1, 2], 
           Rational[-1, 3] 2^Rational[-1, 2]}, {
          Rational[1, 3] 2^Rational[1, 2], Rational[1, 3] 2^Rational[1, 2], 
           Rational[1, 3] 2^Rational[-1, 2]}}, CompressedData["
1:eJxTTMoPSmViYGCQAGJmIE799e9urfa5/Wlg+h6cxiFujyZuj0O9PZp6exzm
o4ujq0c3H10cl/24/IHLPFzuwiWPyx5c/sEVjujhRGx44wpXXOFHKJ5whi8h
+wGAnXo+
         "]], 
        Polygon3DBox[{{4, 11, 14}, {11, 5, 14}, {14, 18, 4}, {4, 23, 11}, {14,
          5, 18}, {5, 11, 23}, {4, 18, 23}, {5, 23, 18}, {16, 9, 2}, {7, 9, 
         16}, {9, 21, 2}, {16, 2, 20}, {9, 7, 21}, {20, 7, 16}, {20, 2, 21}, {
         20, 21, 7}, {10, 15, 1}, {10, 8, 15}, {10, 1, 22}, {19, 1, 15}, {22, 
         8, 10}, {19, 15, 8}, {1, 19, 22}, {22, 19, 8}, {3, 13, 12}, {6, 12, 
         13}, {3, 17, 13}, {24, 3, 12}, {6, 13, 17}, {24, 12, 6}, {17, 3, 
         24}, {6, 17, 24}}]]], {585., -2104.3125}, ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{-2^Rational[-1, 2], 0, 0}, {
          Rational[-1, 2], Rational[-1, 2], 0}, {
          Rational[-1, 2], 0, Rational[-1, 2]}, {
          Rational[-1, 2], 0, Rational[1, 2]}, {
          Rational[-1, 2], Rational[1, 2], 0}, {0, -2^Rational[-1, 2], 0}, {
          0, Rational[-1, 2], Rational[-1, 2]}, {
          0, Rational[-1, 2], Rational[1, 2]}, {0, 0, -2^Rational[-1, 2]}, {
          0, 0, 2^Rational[-1, 2]}, {0, Rational[1, 2], Rational[-1, 2]}, {
          0, Rational[1, 2], Rational[1, 2]}, {0, 2^Rational[-1, 2], 0}, {
          Rational[1, 2], Rational[-1, 2], 0}, {
          Rational[1, 2], 0, Rational[-1, 2]}, {
          Rational[1, 2], 0, Rational[1, 2]}, {
          Rational[1, 2], Rational[1, 2], 0}, {
          2^Rational[-1, 2], 0, 0}}, {{-0.7071067811865475, 0, 
           0}, {-0.5, -0.5, 0}, {-0.5, 0, -0.5}, {-0.5, 0, 0.5}, {-0.5, 0.5, 
           0}, {0, -0.7071067811865475, 0}, {0, -0.5, -0.5}, {0, -0.5, 0.5}, {
          0, 0, -0.7071067811865475}, {0, 0, 0.7071067811865475}, {
          0, 0.5, -0.5}, {0, 0.5, 0.5}, {0, 0.7071067811865475, 0}, {
          0.5, -0.5, 0}, {0.5, 0, -0.5}, {0.5, 0, 0.5}, {0.5, 0.5, 0}, {
          0.7071067811865475, 0, 0}}], 
        Polygon3DBox[{{2, 5, 9}, {2, 9, 14}, {2, 10, 5}, {2, 14, 10}, {5, 10, 
         17}, {5, 17, 9}, {9, 17, 14}, {10, 14, 17}, {3, 4, 13}, {3, 6, 4}, {
         3, 13, 15}, {3, 15, 6}, {4, 6, 16}, {4, 16, 13}, {6, 15, 16}, {13, 
         16, 15}, {1, 7, 8}, {1, 8, 12}, {1, 11, 7}, {1, 12, 11}, {7, 11, 
         18}, {7, 18, 8}, {8, 18, 12}, {11, 12, 18}, {1, 6, 10}, {1, 9, 6}, {
         1, 10, 13}, {1, 13, 9}, {6, 9, 18}, {6, 18, 10}, {9, 13, 18}, {10, 
         18, 13}}]]], {975., -2104.3125}, ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[1, 12] (-2 + 2^Rational[1, 2] - 
            5^Rational[1, 2] (2 + 2^Rational[1, 2])), 0, 
           Rational[1, 6] (-1 + 5^Rational[1, 2] - (3 + 5^Rational[1, 2])^
            Rational[1, 2])}, {
          Rational[1, 12] (-2 + 2^Rational[1, 2] - 
            5^Rational[1, 2] (2 + 2^Rational[1, 2])), 0, 
           Rational[1, 6] (1 - 5^
            Rational[1, 2] + (3 + 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 6] 2^Rational[-1, 2] (-2 - 10^Rational[1, 2]), 
           Rational[1, 12] (-3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 12] (-3 - 2 2^Rational[1, 2] + 5^Rational[1, 2])}, {
          Rational[1, 6] 2^Rational[-1, 2] (-2 - 10^Rational[1, 2]), 
           Rational[1, 12] (-3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 12] (3 + 2 2^Rational[1, 2] - 5^Rational[1, 2])}, {
          Rational[1, 6] 2^Rational[-1, 2] (-2 - 10^Rational[1, 2]), 
           Rational[1, 12] (3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (-3 - 2 2^Rational[1, 2] + 5^Rational[1, 2])}, {
          Rational[1, 6] 2^Rational[-1, 2] (-2 - 10^Rational[1, 2]), 
           Rational[1, 12] (3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (3 + 2 2^Rational[1, 2] - 5^Rational[1, 2])}, {
          Rational[-1, 2], 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          Rational[-1, 2], 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2])}, {
          Rational[-1, 2], 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          Rational[-1, 2], 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2])}, {
          Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), Rational[-1, 2]}, {
          Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), Rational[1, 2]}, {
          Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), Rational[-1, 2]}, {
          Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), Rational[1, 2]}, {
          Rational[1, 12] (-3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 6] 2^Rational[-1, 2] (-2 - 10^Rational[1, 2]), 
           Rational[1, 12] (-3 + 2 2^Rational[1, 2] - 5^Rational[1, 2])}, {
          Rational[1, 12] (-3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 6] 2^Rational[-1, 2] (-2 - 10^Rational[1, 2]), 
           Rational[1, 12] (3 - 2 2^Rational[1, 2] + 5^Rational[1, 2])}, {
          Rational[1, 12] (-3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 6] (2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (-3 + 2 2^Rational[1, 2] - 5^Rational[1, 2])}, {
          Rational[1, 12] (-3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 6] (2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (3 - 2 2^Rational[1, 2] + 5^Rational[1, 2])}, {
          Rational[1, 12] (-3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 12] (-3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 6] 2^Rational[-1, 2] (-2 - 10^Rational[1, 2])}, {
          Rational[1, 12] (-3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 12] (-3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 6] (2^Rational[1, 2] + 5^Rational[1, 2])}, {
          Rational[1, 12] (-3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 12] (3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 6] 2^Rational[-1, 2] (-2 - 10^Rational[1, 2])}, {
          Rational[1, 12] (-3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 12] (3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 6] (2^Rational[1, 2] + 5^Rational[1, 2])}, {
          Rational[1, 6] (-1 + 5^Rational[1, 2] - (3 + 5^Rational[1, 2])^
            Rational[1, 2]), 
           Rational[1, 12] (-2 + 2^Rational[1, 2] - 
            5^Rational[1, 2] (2 + 2^Rational[1, 2])), 0}, {
          Rational[1, 6] (-1 + 5^Rational[1, 2] - (3 + 5^Rational[1, 2])^
            Rational[1, 2]), 
           Rational[1, 6] (1 + 
            5^Rational[1, 2] + (3 - 5^Rational[1, 2])^Rational[1, 2]), 0}, {
          Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), Rational[-1, 2], 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2]))}, {
          Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), Rational[-1, 2], 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), Rational[1, 2], 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2]))}, {
          Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), Rational[1, 2], 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          0, Rational[1, 6] (-1 + 5^Rational[1, 2] - (3 + 5^Rational[1, 2])^
            Rational[1, 2]), 
           Rational[1, 12] (-2 + 2^Rational[1, 2] - 
            5^Rational[1, 2] (2 + 2^Rational[1, 2]))}, {
          0, Rational[1, 6] (-1 + 5^Rational[1, 2] - (3 + 5^Rational[1, 2])^
            Rational[1, 2]), 
           Rational[1, 6] (1 + 
            5^Rational[1, 2] + (3 - 5^Rational[1, 2])^Rational[1, 2])}, {
          0, Rational[1, 6] (1 - 5^
            Rational[1, 2] + (3 + 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 12] (-2 + 2^Rational[1, 2] - 
            5^Rational[1, 2] (2 + 2^Rational[1, 2]))}, {
          0, Rational[1, 6] (1 - 5^
            Rational[1, 2] + (3 + 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (1 + 
            5^Rational[1, 2] + (3 - 5^Rational[1, 2])^Rational[1, 2])}, {
          Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), Rational[-1, 2], 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2]))}, {
          Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), Rational[-1, 2], 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), Rational[1, 2], 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2]))}, {
          Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), Rational[1, 2], 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          Rational[1, 6] (1 - 5^
            Rational[1, 2] + (3 + 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 12] (-2 + 2^Rational[1, 2] - 
            5^Rational[1, 2] (2 + 2^Rational[1, 2])), 0}, {
          Rational[1, 6] (1 - 5^
            Rational[1, 2] + (3 + 5^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] (1 + 
            5^Rational[1, 2] + (3 - 5^Rational[1, 2])^Rational[1, 2]), 0}, {
          Rational[1, 12] (3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (-3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 6] 2^Rational[-1, 2] (-2 - 10^Rational[1, 2])}, {
          Rational[1, 12] (3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (-3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 6] (2^Rational[1, 2] + 5^Rational[1, 2])}, {
          Rational[1, 12] (3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 6] 2^Rational[-1, 2] (-2 - 10^Rational[1, 2])}, {
          Rational[1, 12] (3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 6] (2^Rational[1, 2] + 5^Rational[1, 2])}, {
          Rational[1, 12] (3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 6] 2^Rational[-1, 2] (-2 - 10^Rational[1, 2]), 
           Rational[1, 12] (-3 + 2 2^Rational[1, 2] - 5^Rational[1, 2])}, {
          Rational[1, 12] (3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 6] 2^Rational[-1, 2] (-2 - 10^Rational[1, 2]), 
           Rational[1, 12] (3 - 2 2^Rational[1, 2] + 5^Rational[1, 2])}, {
          Rational[1, 12] (3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 6] (2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (-3 + 2 2^Rational[1, 2] - 5^Rational[1, 2])}, {
          Rational[1, 12] (3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 6] (2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (3 - 2 2^Rational[1, 2] + 5^Rational[1, 2])}, {
          Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), Rational[-1, 2]}, {
          Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2]), Rational[1, 2]}, {
          Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), Rational[-1, 2]}, {
          Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2]), Rational[1, 2]}, {
          Rational[1, 2], 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          Rational[1, 2], 
           Rational[1, 12] (1 - 2^Rational[1, 2] - 
            5^Rational[1, 2] (1 + 2^Rational[1, 2])), 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2])}, {
          Rational[1, 2], 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (-1 - 2^Rational[1, 2] - 5^Rational[1, 2] + 
            10^Rational[1, 2])}, {
          Rational[1, 2], 
           Rational[1, 12] (-1 + 2^Rational[1, 2] + 5^Rational[1, 2] + 
            10^Rational[1, 2]), 
           Rational[1, 12] (1 + 2^Rational[1, 2] + 5^Rational[1, 2] - 10^
            Rational[1, 2])}, {
          Rational[1, 6] (2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (-3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 12] (-3 - 2 2^Rational[1, 2] + 5^Rational[1, 2])}, {
          Rational[1, 6] (2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (-3 + 2 2^Rational[1, 2] - 5^Rational[1, 2]), 
           Rational[1, 12] (3 + 2 2^Rational[1, 2] - 5^Rational[1, 2])}, {
          Rational[1, 6] (2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (-3 - 2 2^Rational[1, 2] + 5^Rational[1, 2])}, {
          Rational[1, 6] (2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (3 - 2 2^Rational[1, 2] + 5^Rational[1, 2]), 
           Rational[1, 12] (3 + 2 2^Rational[1, 2] - 5^Rational[1, 2])}, {
          Rational[1, 6] (1 + 
            5^Rational[1, 2] + (3 - 5^Rational[1, 2])^Rational[1, 2]), 0, 
           Rational[1, 6] (-1 + 5^Rational[1, 2] - (3 + 5^Rational[1, 2])^
            Rational[1, 2])}, {
          Rational[1, 6] (1 + 
            5^Rational[1, 2] + (3 - 5^Rational[1, 2])^Rational[1, 2]), 0, 
           Rational[1, 6] (1 - 5^
            Rational[1, 2] + (3 + 5^Rational[1, 2])^
             Rational[1, 2])}}, {{-0.6850166710662386, 
           0, -0.17536293896182453`}, {-0.6850166710662386, 0, 
           0.17536293896182453`}, {-0.6083802566454808, -0.2006367377294666, \
-0.29936326227053334`}, {-0.6083802566454808, -0.2006367377294666, 
          0.29936326227053334`}, {-0.6083802566454808, 
          0.2006367377294666, -0.29936326227053334`}, {-0.6083802566454808, 
          0.2006367377294666, 
          
          0.29936326227053334`}, {-0.5, -0.484379933336772, \
-0.12400032330870876`}, {-0.5, -0.484379933336772, 
          0.12400032330870876`}, {-0.5, 
          0.48437993333677204`, -0.12400032330870876`}, {-0.5, 
          0.48437993333677204`, 
          0.12400032330870876`}, {-0.484379933336772, -0.12400032330870876`, \
-0.5}, {-0.484379933336772, -0.12400032330870876`, 0.5}, {-0.484379933336772, 
          0.12400032330870876`, -0.5}, {-0.484379933336772, 
          0.12400032330870876`, 
          0.5}, {-0.29936326227053334`, -0.6083802566454808, \
-0.2006367377294666}, {-0.29936326227053334`, -0.6083802566454808, 
          0.2006367377294666}, {-0.29936326227053334`, 
          0.6083802566454808, -0.2006367377294666}, {-0.29936326227053334`, 
          0.6083802566454808, 
          0.2006367377294666}, {-0.2006367377294666, -0.29936326227053334`, \
-0.6083802566454808}, {-0.2006367377294666, -0.29936326227053334`, 
          0.6083802566454808}, {-0.2006367377294666, 
          0.29936326227053334`, -0.6083802566454808}, {-0.2006367377294666, 
          0.29936326227053334`, 
          0.6083802566454808}, {-0.17536293896182453`, -0.6850166710662386, 
           0}, {-0.17536293896182453`, 0.6850166710662386, 
           0}, {-0.12400032330870876`, -0.5, -0.484379933336772}, \
{-0.12400032330870876`, -0.5, 0.48437993333677204`}, {-0.12400032330870876`, 
          0.5, -0.484379933336772}, {-0.12400032330870876`, 0.5, 
          0.48437993333677204`}, {
          0, -0.17536293896182453`, -0.6850166710662386}, {
          0, -0.17536293896182453`, 0.6850166710662386}, {
          0, 0.17536293896182453`, -0.6850166710662386}, {
          0, 0.17536293896182453`, 0.6850166710662386}, {
          0.12400032330870876`, -0.5, -0.484379933336772}, {
          0.12400032330870876`, -0.5, 0.48437993333677204`}, {
          0.12400032330870876`, 0.5, -0.484379933336772}, {
          0.12400032330870876`, 0.5, 0.48437993333677204`}, {
          0.17536293896182453`, -0.6850166710662386, 0}, {
          0.17536293896182453`, 0.6850166710662386, 0}, {
          0.2006367377294666, -0.29936326227053334`, -0.6083802566454808}, {
          0.2006367377294666, -0.29936326227053334`, 0.6083802566454808}, {
          0.2006367377294666, 0.29936326227053334`, -0.6083802566454808}, {
          0.2006367377294666, 0.29936326227053334`, 0.6083802566454808}, {
          0.29936326227053334`, -0.6083802566454808, -0.2006367377294666}, {
          0.29936326227053334`, -0.6083802566454808, 0.2006367377294666}, {
          0.29936326227053334`, 0.6083802566454808, -0.2006367377294666}, {
          0.29936326227053334`, 0.6083802566454808, 0.2006367377294666}, {
          0.48437993333677204`, -0.12400032330870876`, -0.5}, {
          0.48437993333677204`, -0.12400032330870876`, 0.5}, {
          0.48437993333677204`, 0.12400032330870876`, -0.5}, {
          0.48437993333677204`, 0.12400032330870876`, 0.5}, {
          0.5, -0.484379933336772, -0.12400032330870876`}, {
          0.5, -0.484379933336772, 0.12400032330870876`}, {0.5, 
          0.48437993333677204`, -0.12400032330870876`}, {0.5, 
          0.48437993333677204`, 0.12400032330870876`}, {
          0.6083802566454808, -0.2006367377294666, -0.29936326227053334`}, {
          0.6083802566454808, -0.2006367377294666, 0.29936326227053334`}, {
          0.6083802566454808, 0.2006367377294666, -0.29936326227053334`}, {
          0.6083802566454808, 0.2006367377294666, 0.29936326227053334`}, {
          0.6850166710662386, 0, -0.17536293896182453`}, {
          0.6850166710662386, 0, 0.17536293896182453`}}], 
        Polygon3DBox[{{5, 39, 16}, {22, 56, 45}, {22, 45, 5}, {16, 39, 56}, {
         16, 56, 22}, {39, 5, 45}, {22, 5, 16}, {39, 45, 56}, {35, 33, 1}, {
         28, 26, 60}, {33, 35, 60}, {1, 33, 26}, {28, 35, 1}, {1, 26, 28}, {
         33, 60, 26}, {28, 60, 35}, {14, 13, 23}, {48, 47, 38}, {23, 47, 
         48}, {13, 38, 47}, {48, 38, 14}, {13, 14, 38}, {23, 13, 47}, {48, 14,
          23}, {24, 11, 12}, {50, 37, 49}, {50, 49, 24}, {11, 49, 37}, {12, 
         37, 50}, {12, 11, 37}, {11, 24, 49}, {50, 24, 12}, {40, 6, 15}, {55, 
         21, 46}, {6, 46, 21}, {55, 40, 15}, {15, 21, 55}, {6, 40, 46}, {15, 
         6, 21}, {55, 46, 40}, {36, 2, 34}, {59, 25, 27}, {59, 36, 34}, {34, 
         2, 25}, {2, 36, 27}, {2, 27, 25}, {34, 25, 59}, {59, 27, 36}, {51, 
         30, 7}, {31, 10, 54}, {30, 54, 10}, {31, 51, 7}, {7, 10, 31}, {7, 30,
          10}, {31, 54, 51}, {30, 51, 54}, {41, 3, 18}, {58, 20, 43}, {43, 20,
          3}, {41, 18, 58}, {20, 58, 18}, {43, 3, 41}, {20, 18, 3}, {41, 58, 
         43}, {29, 52, 8}, {9, 32, 53}, {9, 53, 29}, {8, 52, 32}, {8, 32, 
         9}, {9, 29, 8}, {52, 53, 32}, {52, 29, 53}, {17, 4, 42}, {57, 44, 
         19}, {19, 44, 4}, {17, 42, 57}, {17, 57, 19}, {44, 42, 4}, {19, 4, 
         17}, {44, 57, 42}}]]], {1365., -2104.3125}, 
      ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{Rational[-1, 2], Rational[-1, 2], 0}, {
          Rational[-1, 2], 0, Rational[-1, 2]}, {
          Rational[-1, 2], 0, Rational[1, 2]}, {
          Rational[-1, 2], Rational[1, 2], 0}, {
          0, Rational[-1, 2], Rational[-1, 2]}, {
          0, Rational[-1, 2], Rational[1, 2]}, {0, 0, -2^Rational[-1, 2]}, {
          0, 0, 2^Rational[-1, 2]}, {0, Rational[1, 2], Rational[-1, 2]}, {
          0, Rational[1, 2], Rational[1, 2]}, {0, -2^Rational[-1, 2], 0}, {
          0, 2^Rational[-1, 2], 0}, {Rational[1, 2], Rational[-1, 2], 0}, {
          Rational[1, 2], 0, Rational[-1, 2]}, {
          Rational[1, 2], 0, Rational[1, 2]}, {
          Rational[1, 2], Rational[1, 2], 0}, {-2^Rational[-1, 2], 0, 0}, {
          2^Rational[-1, 2], 0, 0}}, {{-0.5, -0.5, 0}, {-0.5, 0, -0.5}, {-0.5,
            0, 0.5}, {-0.5, 0.5, 0}, {0, -0.5, -0.5}, {0, -0.5, 0.5}, {
          0, 0, -0.7071067811865475}, {0, 0, 0.7071067811865475}, {
          0, 0.5, -0.5}, {0, 0.5, 0.5}, {0, -0.7071067811865475, 0}, {
          0, 0.7071067811865475, 0}, {0.5, -0.5, 0}, {0.5, 0, -0.5}, {
          0.5, 0, 0.5}, {0.5, 0.5, 0}, {-0.7071067811865475, 0, 0}, {
          0.7071067811865475, 0, 0}}], 
        Polygon3DBox[{{5, 17, 9}, {10, 17, 6}, {17, 5, 6}, {10, 9, 17}, {5, 9,
          18}, {6, 18, 10}, {6, 5, 18}, {10, 18, 9}, {2, 14, 11}, {11, 15, 
         3}, {14, 2, 12}, {3, 15, 12}, {3, 2, 11}, {3, 12, 2}, {11, 14, 15}, {
         14, 12, 15}, {1, 7, 13}, {1, 13, 8}, {7, 4, 16}, {8, 16, 4}, {4, 7, 
         1}, {8, 4, 1}, {7, 16, 13}, {8, 13, 16}}]]], {1755., -2104.3125}, 
      ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True]}, {InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[-1, 2] - 5^Rational[-1, 2], 
           Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] 5^Rational[-1, 2]}, {
          Rational[-1, 2] - 5^
           Rational[-1, 2], (Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] 5^Rational[-1, 2]}, {
          Rational[-3, 4] + Rational[-1, 4] 5^Rational[-1, 2], Root[
           1 - 20 #^2 + 80 #^4& , 1, 0], Rational[1, 2] 5^Rational[-1, 2]}, {
          Rational[-3, 4] + 
           Rational[-1, 4] 5^Rational[-1, 2], (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], Rational[1, 2] 
           5^Rational[-1, 2]}, {
          Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0], Rational[-1, 2]}, {
          Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0], Rational[1, 2]}, {
          Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2]}, {
          Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2]}, {
          Rational[1, 10] (-5 - 5^Rational[1, 2]), 0, Rational[-3, 2] 
           5^Rational[-1, 2]}, {
          Rational[-3, 2] 5^Rational[-1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 2] 5^Rational[-1, 2]}, {
          Rational[-3, 2] 
           5^Rational[-1, 2], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[1, 2] 
           5^Rational[-1, 2]}, {
          Rational[1, 20] (-5 - 3 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0], Rational[3, 2] 5^Rational[-1, 2]}, {
          Rational[1, 20] (-5 - 3 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], Rational[3, 2] 
           5^Rational[-1, 2]}, {
          Rational[-1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2]}, {
          Rational[-1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2]}, {
          Rational[-1, 2], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2]}, {
          Rational[-1, 2], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[1, 2]},
           {-5^Rational[-1, 2], Root[1 - 5 #^2 + 5 #^4& , 1, 0], 
           Rational[-1, 2] 
           5^Rational[-1, 2]}, {-5^Rational[-1, 2], (
            Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2], 
           Rational[-1, 2] 5^Rational[-1, 2]}, {
          Rational[1, 10] (-5 + 5^Rational[1, 2]), 0, Rational[-1, 2] - 5^
           Rational[-1, 2]}, {
          Rational[-1, 2] 5^Rational[-1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-3, 2] 5^Rational[-1, 2]}, {
          Rational[-1, 2] 5^Rational[-1, 2], 
           Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 2] + 5^Rational[-1, 2]}, {
          Rational[-1, 2] 
           5^Rational[-1, 2], (Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[1, 2] + 
           5^Rational[-1, 2]}, {
          Rational[-1, 2] 
           5^Rational[-1, 2], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[-3, 2] 
           5^Rational[-1, 2]}, {
          Rational[1, 20] (-5 + 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[-1, 2] 5^Rational[-1, 2]}, {
          Rational[1, 20] (-5 + 5^Rational[1, 2]), (Rational[5, 8] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], Rational[-1, 2] 
           5^Rational[-1, 2]}, {
          Rational[1, 20] (5 - 3 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0], Rational[-1, 2] - 5^
           Rational[-1, 2]}, {
          Rational[1, 20] (5 - 3 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] - 5^Rational[-1, 2]}, {
          0, Root[1 - 5 #^2 + 5 #^4& , 1, 0], Rational[-1, 2]}, {
          0, Root[1 - 5 #^2 + 5 #^4& , 1, 0], Rational[1, 2]}, {
          0, (Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2], 
           Rational[-1, 2]}, {
          0, (Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2], 
           Rational[1, 2]}, {
          Rational[1, 20] (-5 + 3 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0], Rational[1, 2] + 
           5^Rational[-1, 2]}, {
          Rational[1, 20] (-5 + 3 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], Rational[1, 2] + 
           5^Rational[-1, 2]}, {
          Rational[1, 20] (5 - 5^Rational[1, 2]), 
           Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2], Rational[1, 2] 5^Rational[-1, 2]}, {
          Rational[1, 20] (5 - 5^Rational[1, 2]), (Rational[5, 8] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], Rational[1, 2] 
           5^Rational[-1, 2]}, {
          Rational[1, 2] 5^Rational[-1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[3, 2] 5^Rational[-1, 2]}, {
          Rational[1, 2] 5^Rational[-1, 2], 
           Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] - 5^Rational[-1, 2]}, {
          Rational[1, 2] 
           5^Rational[-1, 2], (Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] - 5^Rational[-1, 2]}, {
          Rational[1, 2] 
           5^Rational[-1, 2], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[3, 2] 
           5^Rational[-1, 2]}, {
          Rational[1, 10] (5 - 5^Rational[1, 2]), 0, Rational[1, 2] + 
           5^Rational[-1, 2]}, {
          5^Rational[-1, 2], Root[1 - 5 #^2 + 5 #^4& , 1, 0], Rational[1, 2] 
           5^Rational[-1, 2]}, {
          5^Rational[-1, 2], (Rational[1, 10] (5 + 5^Rational[1, 2]))^
           Rational[1, 2], Rational[1, 2] 5^Rational[-1, 2]}, {
          Rational[1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2]}, {
          Rational[1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2]}, {
          Rational[1, 2], (Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2], Rational[-1, 2]}, {
          Rational[1, 2], (Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
           Rational[1, 2], Rational[1, 2]}, {
          Rational[1, 20] (5 + 3 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0], Rational[-3, 2] 5^Rational[-1, 2]}, {
          Rational[1, 20] (5 + 3 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], Rational[-3, 2] 
           5^Rational[-1, 2]}, {
          Rational[3, 2] 5^Rational[-1, 2], 
           Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] 5^Rational[-1, 2]}, {
          Rational[3, 2] 
           5^Rational[-1, 2], (Rational[1, 4] + 
            Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[-1, 2] 
           5^Rational[-1, 2]}, {
          Rational[1, 10] (5 + 5^Rational[1, 2]), 0, Rational[3, 2] 
           5^Rational[-1, 2]}, {
          Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0], Rational[-1, 2]}, {
          Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 2, 0], Rational[1, 2]}, {
          Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2]}, {
          Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[-1, 8] 5^Rational[-1, 2])^Rational[1, 2], Rational[
           1, 2]}, {
          Rational[1, 20] (15 + 5^Rational[1, 2]), Root[
           1 - 20 #^2 + 80 #^4& , 1, 0], Rational[-1, 2] 5^Rational[-1, 2]}, {
          Rational[1, 20] (15 + 5^Rational[1, 2]), (Rational[1, 8] + 
            Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], Rational[-1, 2] 
           5^Rational[-1, 2]}, {
          Rational[1, 2] + 5^Rational[-1, 2], 
           Rational[-1, 2] (1 - 2 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 2] 5^Rational[-1, 2]}, {
          Rational[1, 2] + 
           5^Rational[-1, 2], (Rational[1, 4] + 
            Rational[-1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[1, 2] 
           5^Rational[-1, 
              2]}}, {{-0.9472135954999579, -0.16245984811645317`, \
-0.22360679774997896`}, {-0.9472135954999579, 
          0.16245984811645317`, -0.22360679774997896`}, {-0.8618033988749895, \
-0.42532540417601994`, 0.22360679774997896`}, {-0.8618033988749895, 
          0.42532540417601994`, 
          0.22360679774997896`}, {-0.8090169943749475, -0.2628655560595668, \
-0.5}, {-0.8090169943749475, -0.2628655560595668, 0.5}, {-0.8090169943749475, 
          0.2628655560595668, -0.5}, {-0.8090169943749475, 0.2628655560595668,
           0.5}, {-0.723606797749979, 
           0, -0.6708203932499369}, {-0.6708203932499369, -0.6881909602355868,
           0.22360679774997896`}, {-0.6708203932499369, 0.6881909602355868, 
          0.22360679774997896`}, {-0.5854101966249685, -0.42532540417601994`, 
          0.6708203932499369}, {-0.5854101966249685, 0.42532540417601994`, 
          0.6708203932499369}, {-0.5, -0.6881909602355868, -0.5}, {-0.5, \
-0.6881909602355868, 0.5}, {-0.5, 0.6881909602355868, -0.5}, {-0.5, 
          0.6881909602355868, 
          0.5}, {-0.4472135954999579, -0.8506508083520399, \
-0.22360679774997896`}, {-0.4472135954999579, 
          0.85065080835204, -0.22360679774997896`}, {-0.276393202250021, 
           0, -0.9472135954999579}, {-0.22360679774997896`, \
-0.6881909602355868, -0.6708203932499369}, {-0.22360679774997896`, \
-0.16245984811645317`, 0.9472135954999579}, {-0.22360679774997896`, 
          0.16245984811645317`, 0.9472135954999579}, {-0.22360679774997896`, 
          0.6881909602355868, -0.6708203932499369}, {-0.1381966011250105, \
-0.9510565162951535, -0.22360679774997896`}, {-0.1381966011250105, 
          0.9510565162951535, -0.22360679774997896`}, {-0.08541019662496847, \
-0.2628655560595668, -0.9472135954999579}, {-0.08541019662496847, 
          0.2628655560595668, -0.9472135954999579}, {
          0, -0.8506508083520399, -0.5}, {0, -0.8506508083520399, 0.5}, {
          0, 0.85065080835204, -0.5}, {0, 0.85065080835204, 0.5}, {
          0.08541019662496847, -0.2628655560595668, 0.9472135954999579}, {
          0.08541019662496847, 0.2628655560595668, 0.9472135954999579}, {
          0.1381966011250105, -0.9510565162951535, 0.22360679774997896`}, {
          0.1381966011250105, 0.9510565162951535, 0.22360679774997896`}, {
          0.22360679774997896`, -0.6881909602355868, 0.6708203932499369}, {
          0.22360679774997896`, -0.16245984811645317`, -0.9472135954999579}, {
          0.22360679774997896`, 0.16245984811645317`, -0.9472135954999579}, {
          0.22360679774997896`, 0.6881909602355868, 0.6708203932499369}, {
          0.276393202250021, 0, 0.9472135954999579}, {
          0.4472135954999579, -0.8506508083520399, 0.22360679774997896`}, {
          0.4472135954999579, 0.85065080835204, 0.22360679774997896`}, {
          0.5, -0.6881909602355868, -0.5}, {0.5, -0.6881909602355868, 0.5}, {
          0.5, 0.6881909602355868, -0.5}, {0.5, 0.6881909602355868, 0.5}, {
          0.5854101966249685, -0.42532540417601994`, -0.6708203932499369}, {
          0.5854101966249685, 0.42532540417601994`, -0.6708203932499369}, {
          0.6708203932499369, -0.6881909602355868, -0.22360679774997896`}, {
          0.6708203932499369, 0.6881909602355868, -0.22360679774997896`}, {
          0.723606797749979, 0, 0.6708203932499369}, {
          0.8090169943749475, -0.2628655560595668, -0.5}, {
          0.8090169943749475, -0.2628655560595668, 0.5}, {0.8090169943749475, 
          0.2628655560595668, -0.5}, {0.8090169943749475, 0.2628655560595668, 
          0.5}, {0.8618033988749896, -0.42532540417601994`, \
-0.22360679774997896`}, {0.8618033988749896, 
          0.42532540417601994`, -0.22360679774997896`}, {
          0.9472135954999579, -0.16245984811645317`, 0.22360679774997896`}, {
          0.9472135954999579, 0.16245984811645317`, 0.22360679774997896`}}], 
        Polygon3DBox[{{44, 14, 7, 31, 55}, {56, 32, 8, 15, 45}, {55, 31, 32, 
          56}, {31, 7, 8, 32}, {7, 14, 15, 8}, {14, 44, 45, 15}, {44, 55, 56, 
          45}, {35, 21, 39, 58, 54}, {34, 36, 16, 1, 12}, {54, 58, 36, 34}, {
          58, 39, 16, 36}, {39, 21, 1, 16}, {21, 35, 12, 1}, {35, 54, 34, 
          12}, {30, 3, 9, 38, 50}, {60, 46, 19, 13, 41}, {50, 38, 46, 60}, {
          38, 9, 19, 46}, {9, 3, 13, 19}, {3, 30, 41, 13}, {30, 50, 60, 41}, {
          18, 6, 11, 24, 27}, {53, 51, 40, 33, 42}, {27, 24, 51, 53}, {24, 11,
           40, 51}, {11, 6, 33, 40}, {6, 18, 42, 33}, {18, 27, 53, 42}, {20, 
          2, 17, 43, 49}, {57, 52, 22, 10, 29}, {49, 43, 52, 57}, {43, 17, 22,
           52}, {17, 2, 10, 22}, {2, 20, 29, 10}, {20, 49, 57, 29}, {48, 28, 
          26, 47, 59}, {37, 23, 4, 5, 25}, {59, 47, 23, 37}, {47, 26, 4, 
          23}, {26, 28, 5, 4}, {28, 48, 25, 5}, {48, 59, 37, 25}}]]], {195., -2571.9375},
       ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          0, 3^Rational[-1, 2], Rational[1, 2] 
           3^Rational[-1, 2]}, {-3^Rational[-1, 2], 0, Rational[-1, 2] 
           3^Rational[-1, 2]}, {
          0, -3^Rational[-1, 2], Rational[1, 2] 3^Rational[-1, 2]}, {
          3^Rational[-1, 2], 0, Rational[-1, 2] 
           3^Rational[-1, 2]}, {-3^Rational[-1, 2], 0, Rational[1, 2] 
           3^Rational[-1, 2]}, {
          0, -3^Rational[-1, 2], Rational[-1, 2] 3^Rational[-1, 2]}, {
          3^Rational[-1, 2], 0, Rational[1, 2] 3^Rational[-1, 2]}, {
          0, 3^Rational[-1, 2], Rational[-1, 2] 3^Rational[-1, 2]}, {
          Rational[1, 2] 3^Rational[-1, 2], 0, 3^Rational[-1, 2]}, {
          Rational[-1, 2] 3^Rational[-1, 2], -3^Rational[-1, 2], 0}, {
          Rational[1, 2] 3^Rational[-1, 2], 0, -3^Rational[-1, 2]}, {
          Rational[-1, 2] 3^Rational[-1, 2], 3^Rational[-1, 2], 0}, {
          Rational[1, 2] 3^Rational[-1, 2], -3^Rational[-1, 2], 0}, {
          Rational[-1, 2] 3^Rational[-1, 2], 0, -3^Rational[-1, 2]}, {
          Rational[1, 2] 3^Rational[-1, 2], 3^Rational[-1, 2], 0}, {
          Rational[-1, 2] 3^Rational[-1, 2], 0, 3^Rational[-1, 2]}, {
          3^Rational[-1, 2], Rational[1, 2] 3^Rational[-1, 2], 0}, {
          0, Rational[-1, 2] 
           3^Rational[-1, 2], -3^Rational[-1, 2]}, {-3^Rational[-1, 2], 
           Rational[1, 2] 3^Rational[-1, 2], 0}, {
          0, Rational[-1, 2] 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
          0, Rational[1, 2] 
           3^Rational[-1, 2], -3^Rational[-1, 2]}, {-3^Rational[-1, 2], 
           Rational[-1, 2] 3^Rational[-1, 2], 0}, {
          0, Rational[1, 2] 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
          3^Rational[-1, 2], Rational[-1, 2] 3^Rational[-1, 2], 0}}, {{
          0, 0.5773502691896258, 0.2886751345948129}, {-0.5773502691896258, 
           0, -0.2886751345948129}, {
          0, -0.5773502691896258, 0.2886751345948129}, {
          0.5773502691896258, 0, -0.2886751345948129}, {-0.5773502691896258, 
           0, 0.2886751345948129}, {
          0, -0.5773502691896258, -0.2886751345948129}, {
          0.5773502691896258, 0, 0.2886751345948129}, {
          0, 0.5773502691896258, -0.2886751345948129}, {
          0.2886751345948129, 0, 
           0.5773502691896258}, {-0.2886751345948129, -0.5773502691896258, 
           0}, {0.2886751345948129, 
           0, -0.5773502691896258}, {-0.2886751345948129, 0.5773502691896258, 
           0}, {0.2886751345948129, -0.5773502691896258, 
           0}, {-0.2886751345948129, 0, -0.5773502691896258}, {
          0.2886751345948129, 0.5773502691896258, 0}, {-0.2886751345948129, 0,
            0.5773502691896258}, {
          0.5773502691896258, 0.2886751345948129, 0}, {
          0, -0.2886751345948129, -0.5773502691896258}, {-0.5773502691896258, 
           0.2886751345948129, 0}, {
          0, -0.2886751345948129, 0.5773502691896258}, {
          0, 0.2886751345948129, -0.5773502691896258}, {-0.5773502691896258, \
-0.2886751345948129, 0}, {0, 0.2886751345948129, 0.5773502691896258}, {
          0.5773502691896258, -0.2886751345948129, 0}}], 
        Polygon3DBox[{{1, 2, 3}, {1, 2, 4}, {1, 3, 4}, {2, 3, 4}, {5, 6, 7}, {
         5, 6, 8}, {5, 7, 8}, {6, 7, 8}, {9, 10, 11}, {9, 10, 12}, {9, 11, 
         12}, {10, 11, 12}, {13, 14, 15}, {13, 14, 16}, {13, 15, 16}, {14, 15,
          16}, {17, 18, 19}, {17, 18, 20}, {17, 19, 20}, {18, 19, 20}, {21, 
         22, 23}, {21, 22, 24}, {21, 23, 24}, {22, 23, 24}}]]], {585., -2571.9375},
       ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[-1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2], 0, Root[
           1 - 80 #^2 + 320 #^4& , 2, 0]}, {
          Rational[1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2], 0, 
           Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[-1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2], 0, 
           Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           0, (Rational[1, 8] + Rational[1, 4] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^Rational[1, 2],
            Rational[-1, 2] 2^Rational[-1, 2], 
           Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^Rational[1, 2],
            Rational[1, 2] 2^Rational[-1, 2], 
           Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^
            Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 4] 5^Rational[-1, 2])^Rational[1, 2], Rational[-1, 2] 
           2^Rational[-1, 2], Root[
           1 - 80 #^2 + 320 #^4& , 2, 0]}, {(Rational[1, 8] + 
            Rational[1, 4] 5^Rational[-1, 2])^Rational[1, 2], Rational[1, 2] 
           2^Rational[-1, 2], Root[1 - 80 #^2 + 320 #^4& , 2, 0]}, {
          Rational[-1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], (
            Rational[1, 8] + Rational[1, 4] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[-1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], (
            Rational[1, 8] + Rational[1, 4] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], 
           Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], 
           Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[-1, 4] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], Root[
           1 - 80 #^2 + 320 #^4& , 2, 0]}, {
          Rational[-1, 4] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], Root[
           1 - 80 #^2 + 320 #^4& , 2, 0]}, {
          Root[1 - 80 #^2 + 320 #^4& , 2, 0], Rational[-1, 2] 
           2^Rational[-1, 2], 
           Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Root[1 - 80 #^2 + 320 #^4& , 2, 0], Rational[1, 2] 
           2^Rational[-1, 2], 
           Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] 
           2^Rational[-1, 2], (Rational[1, 8] + 
            Rational[1, 4] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 2] 
           2^Rational[-1, 2], (Rational[1, 8] + 
            Rational[1, 4] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[1, 4] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^
            Rational[1, 2]}}, {{-0.6015009550075456, 
           0, -0.11487646027368059`}, {
          0.6015009550075456, 0, 0.1148764602736806}, {-0.3717480344601845, 
           0, -0.48662449473386504`}, {
          0.3717480344601845, 0, 
           0.48662449473386504`}, {-0.48662449473386504`, \
-0.35355339059327373`, 0.1148764602736806}, {-0.48662449473386504`, 
          0.35355339059327373`, 0.1148764602736806}, {
          0.48662449473386504`, -0.35355339059327373`, \
-0.11487646027368059`}, {0.48662449473386504`, 
          0.35355339059327373`, -0.11487646027368059`}, {-0.3007504775037728, \
-0.21850801222441055`, 0.48662449473386504`}, {-0.3007504775037728, 
          0.21850801222441055`, 0.48662449473386504`}, {
          0.3007504775037728, -0.21850801222441055`, -0.48662449473386504`}, {
          0.3007504775037728, 
          0.21850801222441055`, -0.48662449473386504`}, \
{-0.18587401723009225`, -0.5720614028176843, -0.11487646027368059`}, \
{-0.18587401723009225`, 
          0.5720614028176843, -0.11487646027368059`}, {-0.11487646027368059`, \
-0.35355339059327373`, -0.48662449473386504`}, {-0.11487646027368059`, 
          0.35355339059327373`, -0.48662449473386504`}, {
          0.1148764602736806, -0.35355339059327373`, 0.48662449473386504`}, {
          0.1148764602736806, 0.35355339059327373`, 0.48662449473386504`}, {
          0.18587401723009225`, -0.5720614028176843, 0.1148764602736806}, {
          0.18587401723009225`, 0.5720614028176843, 0.1148764602736806}}], 
        Polygon3DBox[{{1, 11, 17}, {20, 11, 1}, {1, 17, 20}, {20, 17, 11}, {
         14, 9, 2}, {2, 9, 15}, {15, 14, 2}, {9, 14, 15}, {10, 8, 3}, {3, 8, 
         19}, {19, 10, 3}, {8, 10, 19}, {12, 6, 4}, {4, 6, 13}, {13, 12, 4}, {
         6, 12, 13}, {16, 7, 5}, {5, 7, 18}, {18, 16, 5}, {7, 16, 18}}]]], {975., -2571.9375},
       ImageScaled[{0.5, 0.5}], {360, 361},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[-1, 2], Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
           6^Rational[-1, 2]}, {
          Rational[1, 18] (-9 + 3^Rational[1, 2]), 
           Rational[1, 6] (1 + 3^Rational[1, 2]), Rational[1, 6] 
           6^Rational[-1, 2]}, {
          Rational[1, 18] (-3 - 2 3^Rational[1, 2]), Rational[1, 2] 
           3^Rational[-1, 2], Rational[1, 18] 
           2^Rational[-1, 2] (-12 + 3^Rational[1, 2])}, {
          Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2], Rational[-1, 2] 
           6^Rational[-1, 2]}, {
          Rational[-1, 2] 3^Rational[-1, 2], Rational[1, 2], Rational[-1, 2] 
           6^Rational[-1, 2]}, {
          Rational[1, 18] (-6 + 3^Rational[1, 2]), Rational[-1, 6], 
           Rational[1, 18] 2^Rational[-1, 2] (12 + 3^Rational[1, 2])}, {
          Rational[-1, 3] 3^Rational[-1, 2], -3^Rational[-1, 2], 
           Rational[1, 6] 6^Rational[-1, 2]}, {
          Rational[1, 18] (-3 + 3^Rational[1, 2]), 
           Rational[1, 6] (-1 - 3^Rational[1, 2]), Rational[1, 18] 
           2^Rational[-1, 2] (-12 + 3^Rational[1, 2])}, {
          Rational[1, 18] (3 - 2 3^Rational[1, 2]), Rational[1, 2] 
           3^Rational[-1, 2], Rational[1, 18] 
           2^Rational[-1, 2] (12 + 3^Rational[1, 2])}, {
          0, 0, Rational[1, 2] Rational[3, 2]^Rational[1, 2]}, {
          0, 3^Rational[-1, 2], Rational[-1, 2] 6^Rational[-1, 2]}, {
          Rational[1, 18] (3 + 3^Rational[1, 2]), 
           Rational[1, 6] (1 - 3^Rational[1, 2]), Rational[1, 18] 
           2^Rational[-1, 2] (12 + 3^Rational[1, 2])}, {
          Rational[1, 18] (6 + 3^Rational[1, 2]), Rational[1, 6], 
           Rational[1, 18] 2^Rational[-1, 2] (-12 + 3^Rational[1, 2])}, {
          Rational[1, 2], Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
           6^Rational[-1, 2]}, {
          3^Rational[-1, 2], 0, Rational[-1, 2] 6^Rational[-1, 2]}, {
          Rational[1, 18] (9 + 3^Rational[1, 2]), 
           Rational[1, 6] (-1 + 3^Rational[1, 2]), Rational[1, 6] 
           6^Rational[-1, 
              2]}}, {{-0.5, -0.2886751345948129, -0.20412414523193154`}, \
{-0.4037749551350624, 0.4553418012614795, 
          0.06804138174397717}, {-0.3591167563965419, 
          0.2886751345948129, -0.4033631390470545}, {-0.2886751345948129, \
-0.5, -0.20412414523193154`}, {-0.2886751345948129, 
          0.5, -0.20412414523193154`}, {-0.2371082884683957, \
-0.16666666666666666`, 
          0.5394459025350088}, {-0.19245008972987526`, -0.5773502691896258, 
          0.06804138174397717}, {-0.07044162180172904, -0.4553418012614795, \
-0.4033631390470545}, {-0.025783423063208577`, 0.2886751345948129, 
          0.5394459025350088}, {0, 0, 0.6123724356957945}, {
          0, 0.5773502691896258, -0.20412414523193154`}, {
          0.26289171153160423`, -0.1220084679281462, 0.5394459025350088}, {
          0.4295583781982709, 0.16666666666666666`, -0.4033631390470545}, {
          0.5, -0.2886751345948129, -0.20412414523193154`}, {
          0.5773502691896258, 0, -0.20412414523193154`}, {0.5962250448649375, 
          0.1220084679281462, 0.06804138174397717}}], 
        Polygon3DBox[{{14, 1, 11}, {1, 14, 10}, {11, 10, 14}, {10, 11, 1}, {3,
          9, 15}, {9, 3, 7}, {15, 7, 3}, {7, 15, 9}, {6, 5, 8}, {5, 6, 16}, {
         8, 16, 6}, {16, 8, 5}, {4, 13, 12}, {13, 4, 2}, {12, 2, 4}, {2, 12, 
         13}}]]], {1365., -2571.9375}, ImageScaled[{0.5, 0.5}], {360, 381},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[1, 6] 2^Rational[-1, 2] (-3 - 3^Rational[1, 2]), 
           Rational[1, 6] 2^Rational[-1, 2] (3 - 3^Rational[1, 2]), 
           Rational[-1, 2] 6^Rational[-1, 2]}, {
          Rational[1, 18] ((-3) 2^Rational[1, 2] + 3^Rational[1, 2] - 2 
            6^Rational[1, 2]), Rational[1, 6] (-1 - 2^Rational[1, 2]), 
           Rational[1, 36] (12 - 4 3^Rational[1, 2] + 6^Rational[1, 2])}, {
          Rational[1, 6] 
           3^Rational[-1, 2] (-2 - (2 + 3^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] 2^Rational[-1, 2] (-3 + 3^Rational[1, 2]), 
           Rational[1, 36] (6^Rational[1, 2] - 4 (3 + 3^Rational[1, 2]))}, {
          Rational[1, 18] 
           2^Rational[-1, 2] (-9 - 3^Rational[1, 2] + 6^Rational[1, 2]), 
           Rational[1, 12] (2 - 2^Rational[1, 2] + 6^Rational[1, 2]), 
           Rational[1, 12] 3^Rational[-1, 2] (8 + 2^Rational[1, 2])}, {
          Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2], Rational[-1, 2] 
           6^Rational[-1, 2]}, {
          Rational[-1, 2] 3^Rational[-1, 2], Rational[1, 2], Rational[-1, 2] 
           6^Rational[-1, 2]}, {
          Rational[1, 6] 
           3^Rational[-1, 2] (-2 + (2 - 3^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 6] 2^Rational[-1, 2] (3 + 3^Rational[1, 2]), 
           Rational[1, 36] (12 - 4 3^Rational[1, 2] + 6^Rational[1, 2])}, {
          Rational[1, 6] 
           3^Rational[-1, 2] (-2 + 2^Rational[1, 2]), -6^Rational[-1, 2], 
           Rational[1, 12] 3^Rational[-1, 2] (8 + 2^Rational[1, 2])}, {
          0, 0, Rational[1, 2] Rational[3, 2]^Rational[1, 2]}, {
          Rational[1, 18] (3 2^Rational[1, 2] + 3^Rational[1, 2] - 2 
            6^Rational[1, 2]), Rational[1, 6] (1 + 2^Rational[1, 2]), 
           Rational[1, 36] (6^Rational[1, 2] - 4 (3 + 3^Rational[1, 2]))}, {
          Rational[1, 6] 2^Rational[-1, 2] (3 - 3^Rational[1, 2]), 
           Rational[1, 6] 2^Rational[-1, 2] (-3 - 3^Rational[1, 2]), 
           Rational[-1, 2] 6^Rational[-1, 2]}, {
          Rational[1, 36] ((-3) 2^Rational[1, 2] + 2 3^Rational[1, 2] + 
            5 6^Rational[1, 2]), 
           Rational[1, 12] (-2 + 2^Rational[1, 2] - 6^Rational[1, 2]), 
           Rational[1, 36] (6^Rational[1, 2] - 4 (3 + 3^Rational[1, 2]))}, {
          Rational[1, 18] 
           2^Rational[-1, 2] (9 - 3^Rational[1, 2] + 6^Rational[1, 2]), 
           Rational[1, 12] (-2 + 2^Rational[1, 2] + 6^Rational[1, 2]), 
           Rational[1, 12] 3^Rational[-1, 2] (8 + 2^Rational[1, 2])}, {
          6^Rational[-1, 2], 6^Rational[-1, 2], Rational[-1, 2] 
           6^Rational[-1, 2]}, {
          Rational[1, 6] 
           6^Rational[-1, 2] (5 + 2^Rational[1, 2] + 3^Rational[1, 2]), 
           Rational[1, 6] (1 - (2 + 3^Rational[1, 2])^Rational[1, 2]), 
           Rational[1, 36] (12 - 4 3^Rational[1, 2] + 6^Rational[1, 2])}, {
          3^Rational[-1, 2], 0, Rational[-1, 2] 
           6^Rational[-1, 2]}}, {{-0.5576775358252052, 
          0.14942924536134225`, -0.20412414523193154`}, {-0.4116427425064869, \
-0.40236892706218247`, 
          0.20892462534743525`}, {-0.3783426016716103, -0.14942924536134225`, \
-0.4577420413192313}, {-0.3253697274723133, 0.25293968170084025`, 
          0.45294156120372775`}, {-0.2886751345948129, -0.5, \
-0.20412414523193154`}, {-0.2886751345948129, 
          0.5, -0.20412414523193154`}, {-0.1426403412760945, 
          0.5576775358252052, 
          0.20892462534743525`}, {-0.05636732624192091, -0.4082482904638631, 
          0.45294156120372775`}, {0, 0, 0.6123724356957945}, {
          0.05976177828454481, 0.40236892706218247`, -0.4577420413192313}, {
          0.14942924536134225`, -0.5576775358252052, -0.20412414523193154`}, {
          0.31858082338706556`, -0.25293968170084025`, -0.4577420413192313}, {
          0.38173705371423416`, 0.15530860876302274`, 0.45294156120372775`}, {
          0.4082482904638631, 0.4082482904638631, -0.20412414523193154`}, {
          0.5542830837825814, -0.15530860876302277`, 0.20892462534743525`}, {
          0.5773502691896258, 0, -0.20412414523193154`}}], 
        Polygon3DBox[{{11, 1, 14}, {1, 11, 9}, {14, 9, 11}, {9, 14, 1}, {3, 7,
          16}, {7, 3, 8}, {16, 8, 3}, {8, 16, 7}, {2, 6, 12}, {6, 2, 13}, {12,
          13, 2}, {13, 12, 6}, {5, 10, 15}, {10, 5, 4}, {15, 4, 5}, {4, 15, 
         10}}]]], {1755., -2571.9375}, ImageScaled[{0.5, 0.5}], {360, 382},
      ContentSelectable->True]}, {InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{-3^Rational[-1, 2], 0, Rational[-1, 2] 6^Rational[-1, 2]}, {
          Rational[-2, 3] 3^Rational[-1, 2], Rational[-1, 3], Rational[5, 6] 
           6^Rational[-1, 2]}, {
          Rational[-2, 3] 3^Rational[-1, 2], 0, Rational[-7, 6] 
           6^Rational[-1, 2]}, {
          Rational[-2, 3] 3^Rational[-1, 2], Rational[1, 3], Rational[5, 6] 
           6^Rational[-1, 2]}, {
          Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2], Rational[-1, 2] 
           6^Rational[-1, 2]}, {
          Rational[-1, 2] 3^Rational[-1, 2], Rational[1, 2], Rational[-1, 2] 
           6^Rational[-1, 2]}, {
          Rational[-1, 6] 3^Rational[-1, 2], Rational[-1, 2], Rational[5, 6] 
           6^Rational[-1, 2]}, {
          Rational[-1, 6] 3^Rational[-1, 2], Rational[1, 2], Rational[5, 6] 
           6^Rational[-1, 2]}, {
          0, 0, Rational[1, 2] Rational[3, 2]^Rational[1, 2]}, {
          Rational[1, 3] 3^Rational[-1, 2], Rational[-1, 3], Rational[-7, 6] 
           6^Rational[-1, 2]}, {
          Rational[1, 3] 3^Rational[-1, 2], Rational[1, 3], Rational[-7, 6] 
           6^Rational[-1, 2]}, {
          Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2], Rational[-1, 2] 
           6^Rational[-1, 2]}, {
          Rational[1, 2] 3^Rational[-1, 2], Rational[1, 2], Rational[-1, 2] 
           6^Rational[-1, 2]}, {
          Rational[5, 6] 3^Rational[-1, 2], Rational[-1, 6], Rational[5, 6] 
           6^Rational[-1, 2]}, {
          Rational[5, 6] 3^Rational[-1, 2], Rational[1, 6], Rational[5, 6] 
           6^Rational[-1, 2]}, {
          3^Rational[-1, 2], 0, Rational[-1, 2] 
           6^Rational[-1, 2]}}, {{-0.5773502691896258, 
           0, -0.20412414523193154`}, {-0.3849001794597505, \
-0.3333333333333333, 
          0.3402069087198859}, {-0.3849001794597505, 
           0, -0.4762896722078403}, {-0.3849001794597505, 0.3333333333333333, 
          0.3402069087198859}, {-0.2886751345948129, -0.5, \
-0.20412414523193154`}, {-0.2886751345948129, 
          0.5, -0.20412414523193154`}, {-0.09622504486493763, -0.5, 
          0.3402069087198859}, {-0.09622504486493763, 0.5, 
          0.3402069087198859}, {0, 0, 0.6123724356957945}, {
          0.19245008972987526`, -0.3333333333333333, -0.4762896722078403}, {
          0.19245008972987526`, 0.3333333333333333, -0.4762896722078403}, {
          0.2886751345948129, -0.5, -0.20412414523193154`}, {
          0.2886751345948129, 0.5, -0.20412414523193154`}, {
          0.48112522432468824`, -0.16666666666666666`, 0.3402069087198859}, {
          0.48112522432468824`, 0.16666666666666666`, 0.3402069087198859}, {
          0.5773502691896258, 0, -0.20412414523193154`}}], 
        Polygon3DBox[{{12, 1, 13}, {1, 12, 9}, {13, 9, 12}, {9, 13, 1}, {3, 8,
          16}, {8, 3, 7}, {16, 7, 3}, {7, 16, 8}, {2, 6, 10}, {6, 2, 15}, {10,
          15, 2}, {15, 10, 6}, {5, 11, 14}, {11, 5, 4}, {14, 4, 5}, {4, 14, 
         11}}]]], {195., -3039.5625}, ImageScaled[{0.5, 0.5}], {360, 383},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{Rational[-1, 2], Rational[-1, 2] 2^Rational[-1, 2], 0}, {
          Rational[-1, 2], 0, Rational[-1, 2] 2^Rational[-1, 2]}, {
          Rational[-1, 2], 0, Rational[1, 2] 2^Rational[-1, 2]}, {
          Rational[-1, 2], Rational[1, 2] 2^Rational[-1, 2], 0}, {
          Rational[-1, 2] 2^Rational[-1, 2], Rational[-1, 2], 0}, {
          Rational[-1, 2] 2^Rational[-1, 2], 0, Rational[-1, 2]}, {
          Rational[-1, 2] 2^Rational[-1, 2], 0, Rational[1, 2]}, {
          Rational[-1, 2] 2^Rational[-1, 2], Rational[1, 2], 0}, {
          0, Rational[-1, 2], Rational[-1, 2] 2^Rational[-1, 2]}, {
          0, Rational[-1, 2], Rational[1, 2] 2^Rational[-1, 2]}, {
          0, Rational[-1, 2] 2^Rational[-1, 2], Rational[-1, 2]}, {
          0, Rational[-1, 2] 2^Rational[-1, 2], Rational[1, 2]}, {
          0, Rational[1, 2] 2^Rational[-1, 2], Rational[-1, 2]}, {
          0, Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2]}, {
          0, Rational[1, 2], Rational[-1, 2] 2^Rational[-1, 2]}, {
          0, Rational[1, 2], Rational[1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 2] 2^Rational[-1, 2], Rational[-1, 2], 0}, {
          Rational[1, 2] 2^Rational[-1, 2], 0, Rational[-1, 2]}, {
          Rational[1, 2] 2^Rational[-1, 2], 0, Rational[1, 2]}, {
          Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2], 0}, {
          Rational[1, 2], Rational[-1, 2] 2^Rational[-1, 2], 0}, {
          Rational[1, 2], 0, Rational[-1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 2], 0, Rational[1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 2], Rational[1, 2] 2^Rational[-1, 2], 
           0}}, {{-0.5, -0.35355339059327373`, 0}, {-0.5, 
           0, -0.35355339059327373`}, {-0.5, 0, 0.35355339059327373`}, {-0.5, 
           0.35355339059327373`, 0}, {-0.35355339059327373`, -0.5, 
           0}, {-0.35355339059327373`, 0, -0.5}, {-0.35355339059327373`, 0, 
           0.5}, {-0.35355339059327373`, 0.5, 0}, {
          0, -0.5, -0.35355339059327373`}, {0, -0.5, 0.35355339059327373`}, {
          0, -0.35355339059327373`, -0.5}, {0, -0.35355339059327373`, 0.5}, {
          0, 0.35355339059327373`, -0.5}, {0, 0.35355339059327373`, 0.5}, {
          0, 0.5, -0.35355339059327373`}, {0, 0.5, 0.35355339059327373`}, {
          0.35355339059327373`, -0.5, 0}, {0.35355339059327373`, 0, -0.5}, {
          0.35355339059327373`, 0, 0.5}, {0.35355339059327373`, 0.5, 0}, {
          0.5, -0.35355339059327373`, 0}, {0.5, 0, -0.35355339059327373`}, {
          0.5, 0, 0.35355339059327373`}, {0.5, 0.35355339059327373`, 0}}], 
        Polygon3DBox[{{10, 16, 2}, {2, 16, 22}, {22, 10, 2}, {16, 10, 22}, {3,
          23, 15}, {15, 23, 9}, {9, 3, 15}, {23, 3, 9}, {4, 24, 11}, {11, 24, 
         12}, {12, 4, 11}, {24, 4, 12}, {13, 14, 21}, {21, 14, 1}, {1, 13, 
         21}, {14, 13, 1}, {18, 19, 5}, {5, 19, 8}, {8, 18, 5}, {19, 18, 8}, {
         17, 20, 7}, {7, 20, 6}, {6, 17, 7}, {20, 17, 6}}]]], {585., -3039.5625},
       ImageScaled[{0.5, 0.5}], {360, 391},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[-1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2], 0, Root[
           1 - 80 #^2 + 320 #^4& , 2, 0]}, {
          Rational[1, 2] (1 + 5^Rational[-1, 2])^Rational[1, 2], 0, 
           Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[-1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2], 0, 
           Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[1, 2] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           0, (Rational[1, 8] + Rational[1, 4] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^Rational[1, 2],
            Rational[-1, 2] 2^Rational[-1, 2], 
           Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^Rational[1, 2],
            Rational[1, 2] 2^Rational[-1, 2], 
           Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^
            Rational[1, 2]}, {(Rational[1, 8] + 
            Rational[1, 4] 5^Rational[-1, 2])^Rational[1, 2], Rational[-1, 2] 
           2^Rational[-1, 2], Root[
           1 - 80 #^2 + 320 #^4& , 2, 0]}, {(Rational[1, 8] + 
            Rational[1, 4] 5^Rational[-1, 2])^Rational[1, 2], Rational[1, 2] 
           2^Rational[-1, 2], Root[1 - 80 #^2 + 320 #^4& , 2, 0]}, {
          Rational[-1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], (
            Rational[1, 8] + Rational[1, 4] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[-1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], (
            Rational[1, 8] + Rational[1, 4] 5^Rational[-1, 2])^
           Rational[1, 2]}, {
          Rational[1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], 
           Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[1, 4] (1 + 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 2] (3 + 5^Rational[1, 2])^Rational[-1, 2], 
           Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[-1, 4] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], Root[
           1 - 80 #^2 + 320 #^4& , 2, 0]}, {
          Rational[-1, 4] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], Root[
           1 - 80 #^2 + 320 #^4& , 2, 0]}, {
          Root[1 - 80 #^2 + 320 #^4& , 2, 0], Rational[-1, 2] 
           2^Rational[-1, 2], 
           Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Root[1 - 80 #^2 + 320 #^4& , 2, 0], Rational[1, 2] 
           2^Rational[-1, 2], 
           Rational[-1, 2] (Rational[1, 2] + 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 2] 
           2^Rational[-1, 2], (Rational[1, 8] + 
            Rational[1, 4] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 2] 
           2^Rational[-1, 2], (Rational[1, 8] + 
            Rational[1, 4] 5^Rational[-1, 2])^Rational[1, 2]}, {
          Rational[1, 4] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[-1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^
            Rational[1, 2]}, {
          Rational[1, 4] (1 - 5^Rational[-1, 2])^Rational[1, 2], 
           Rational[1, 4] (3 + 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] (Rational[1, 2] - 5^Rational[-1, 2])^
            Rational[1, 2]}}, {{-0.6015009550075456, 
           0, -0.11487646027368059`}, {
          0.6015009550075456, 0, 0.1148764602736806}, {-0.3717480344601845, 
           0, -0.48662449473386504`}, {
          0.3717480344601845, 0, 
           0.48662449473386504`}, {-0.48662449473386504`, \
-0.35355339059327373`, 0.1148764602736806}, {-0.48662449473386504`, 
          0.35355339059327373`, 0.1148764602736806}, {
          0.48662449473386504`, -0.35355339059327373`, \
-0.11487646027368059`}, {0.48662449473386504`, 
          0.35355339059327373`, -0.11487646027368059`}, {-0.3007504775037728, \
-0.21850801222441055`, 0.48662449473386504`}, {-0.3007504775037728, 
          0.21850801222441055`, 0.48662449473386504`}, {
          0.3007504775037728, -0.21850801222441055`, -0.48662449473386504`}, {
          0.3007504775037728, 
          0.21850801222441055`, -0.48662449473386504`}, \
{-0.18587401723009225`, -0.5720614028176843, -0.11487646027368059`}, \
{-0.18587401723009225`, 
          0.5720614028176843, -0.11487646027368059`}, {-0.11487646027368059`, \
-0.35355339059327373`, -0.48662449473386504`}, {-0.11487646027368059`, 
          0.35355339059327373`, -0.48662449473386504`}, {
          0.1148764602736806, -0.35355339059327373`, 0.48662449473386504`}, {
          0.1148764602736806, 0.35355339059327373`, 0.48662449473386504`}, {
          0.18587401723009225`, -0.5720614028176843, 0.1148764602736806}, {
          0.18587401723009225`, 0.5720614028176843, 0.1148764602736806}}], 
        Polygon3DBox[{{1, 11, 17}, {20, 11, 1}, {1, 17, 20}, {20, 17, 11}, {
         18, 12, 1}, {1, 12, 19}, {19, 18, 1}, {12, 18, 19}, {14, 9, 2}, {2, 
         9, 15}, {15, 14, 2}, {9, 14, 15}, {2, 10, 13}, {16, 10, 2}, {2, 13, 
         16}, {16, 13, 10}, {3, 7, 9}, {20, 7, 3}, {3, 9, 20}, {20, 9, 7}, {
         10, 8, 3}, {3, 8, 19}, {19, 10, 3}, {8, 10, 19}, {4, 5, 11}, {14, 5, 
         4}, {4, 11, 14}, {14, 11, 5}, {12, 6, 4}, {4, 6, 13}, {13, 12, 4}, {
         6, 12, 13}, {16, 7, 5}, {5, 7, 18}, {18, 16, 5}, {7, 16, 18}, {6, 8, 
         15}, {17, 8, 6}, {6, 15, 17}, {17, 15, 8}}]]], {975., -3039.5625}, 
      ImageScaled[{0.5, 0.5}], {360, 361},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{
          Rational[-1, 4] (2 + 3^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 8] (2^Rational[1, 2] - 6^Rational[1, 2]), 
           Rational[1, 2] 2^Rational[-1, 2]}, {
          Rational[-1, 4] (2 + 3^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (2 - 3^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] 2^Rational[-1, 2]}, {
          Rational[-1, 2] 2^Rational[-1, 2], Rational[-1, 2] 
           2^Rational[-1, 2], Rational[-1, 2] 2^Rational[-1, 2]}, {
          Rational[-1, 2] 2^Rational[-1, 2], Rational[1, 2] 2^Rational[-1, 2],
            Rational[1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 8] (2^Rational[1, 2] - 6^Rational[1, 2]), 
           Rational[-1, 4] (2 + 3^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 8] (2^Rational[1, 2] - 6^Rational[1, 2]), 
           Rational[1, 4] (2 + 3^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 4] (2 - 3^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 4] (2 + 3^Rational[1, 2])^Rational[1, 2], 
           Rational[-1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 4] (2 - 3^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (2 + 3^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 2] 2^Rational[-1, 2], Rational[-1, 2] 2^Rational[-1, 2],
            Rational[1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 2^Rational[-1, 2], 
           Rational[-1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 4] (2 + 3^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 8] (2^Rational[1, 2] - 6^Rational[1, 2]), 
           Rational[-1, 2] 2^Rational[-1, 2]}, {
          Rational[1, 4] (2 + 3^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (2 - 3^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 2] 
           2^Rational[-1, 
              2]}}, {{-0.48296291314453416`, -0.12940952255126034`, 
         0.35355339059327373`}, {-0.48296291314453416`, 
         0.1294095225512604, -0.35355339059327373`}, {-0.35355339059327373`, \
-0.35355339059327373`, -0.35355339059327373`}, {-0.35355339059327373`, 
         0.35355339059327373`, 
         0.35355339059327373`}, {-0.12940952255126034`, -0.48296291314453416`,
          0.35355339059327373`}, {-0.12940952255126034`, 
         0.48296291314453416`, -0.35355339059327373`}, {
         0.1294095225512604, -0.48296291314453416`, -0.35355339059327373`}, {
         0.1294095225512604, 0.48296291314453416`, 0.35355339059327373`}, {
         0.35355339059327373`, -0.35355339059327373`, 0.35355339059327373`}, {
         0.35355339059327373`, 0.35355339059327373`, -0.35355339059327373`}, {
         0.48296291314453416`, -0.12940952255126034`, -0.35355339059327373`}, \
{0.48296291314453416`, 0.1294095225512604, 0.35355339059327373`}}], 
        Polygon3DBox[{{9, 4, 3}, {3, 4, 10}, {10, 9, 3}, {4, 9, 10}, {1, 12, 
         6}, {6, 12, 7}, {7, 1, 6}, {12, 1, 7}, {8, 5, 11}, {11, 5, 2}, {2, 8,
          11}, {5, 8, 2}}]]], {1365., -3039.5625}, ImageScaled[{0.5, 0.5}], {360, 348},
      ContentSelectable->True], InsetBox[
      Graphics3DBox[
       GraphicsComplex3DBox[
        NCache[{{0, 0, Rational[-1, 2] Rational[3, 2]^Rational[1, 2]}, {
          0, 0, Rational[1, 2] 
           Rational[3, 2]^Rational[1, 2]}, {-3^Rational[-1, 2], 0, 
           Rational[1, 2] 6^Rational[-1, 2]}, {
          Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2], Rational[-1, 2] 
           6^Rational[-1, 2]}, {
          Rational[-1, 2] 3^Rational[-1, 2], Rational[1, 2], Rational[-1, 2] 
           6^Rational[-1, 2]}, {
          Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2], Rational[1, 2] 
           6^Rational[-1, 2]}, {
          Rational[1, 2] 3^Rational[-1, 2], Rational[1, 2], Rational[1, 2] 
           6^Rational[-1, 2]}, {
          3^Rational[-1, 2], 0, Rational[-1, 2] 6^Rational[-1, 2]}}, {{
          0, 0, -0.6123724356957945}, {
          0, 0, 0.6123724356957945}, {-0.5773502691896258, 0, 
           0.20412414523193154`}, {-0.2886751345948129, -0.5, \
-0.20412414523193154`}, {-0.2886751345948129, 0.5, -0.20412414523193154`}, {
          0.2886751345948129, -0.5, 0.20412414523193154`}, {
          0.2886751345948129, 0.5, 0.20412414523193154`}, {
          0.5773502691896258, 0, -0.20412414523193154`}}], 
        Polygon3DBox[{{4, 5, 8}, {5, 4, 2}, {8, 2, 4}, {2, 8, 5}, {6, 7, 3}, {
         7, 6, 1}, {3, 1, 6}, {1, 3, 7}}]]], {1755., -3039.5625}, 
      ImageScaled[{0.5, 0.5}], {360, 404},
      ContentSelectable->True]}}, {}},
  ImageSize->Automatic,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.844847511679958*^9, 3.84484756418674*^9, 
  3.8448477480834417`*^9},
 CellLabel->"Out[24]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
7cVhoenbz7mbk+/X4/+/b/a9k3KUkU6M3pOEM8F48K4hebruXEGfw/uLPvQ0
mhSn0bwOCc4A0M4DECTbsSbfzn6LO/xSeojot364nL51HbKQQboIyT3i5MtS
9nvxCrmMn0plIFdJp4IvGhRHLqh6KfWSKIzeW5Tp00KEowsh14sXhHPtMjUu
eZWeOJ111BeKiLnpP5kVpecWfRE2oZTwPCe9mIRT3RLY3Xj9VjURqVF8H7Vp
/uLYvpbfpP/xXaE5hpqVtAu2sJsU3xW6FH4ndycJneNl5wqELFeM3suPtL71
N0x/lItUgtc7yf7qqH8k/SrKek7zrSTxG9Ub42uWyceqyT/mwpM18I1K+eO9
2vYpNiuiYmtIkmzbak+vTX+kC61MlXgzSn6cUi3h76oKtxz+Eh/8L50lw1sl
VbtBZuAMH/Tjz8r8uCg/hrAosHb9tzs6AcZCAST6s5pv6Zah0PDBl+Zr1SQt
2zqreh/ljyK7jaIUzujOxrbT37aulJO+xVcr4eUrpAZiSGKjuo00ayfdTe8v
uKJ/Uwo3yjjxBmPiQsp+a7+vNNuQsjajEqNGw1H9OPDGPuKPfTcsp9UwqIqu
xG5wTCh092t3LqjOF6s1jpPe8RSbtXgk6eKApHFu4MQtMuIYDK7KyhttP3Ee
Psua1F+q9pxjuZUyYgo6h6qFTLOhY0l37mfx7oEfmxVw0E2w73hsepsKNRNb
wSpWlM8321h6ag/LOsnTfzd+3Ln/PKDaDTZd+elvcBIXRN3lOz1J1N0HUdac
PLD558XWsopldTgrsWovE1t0KJaH9vlqzXd85OLYDdx1HMKqWpzYEvuxvMvP
VLYndDjVOrsEjGsD/G/jkW8bwNS3vYpe8fnA86+ZJYvv8ks3LX/4R2by4u16
NfbYM0OdQiCOpa59ptmWPCHSBLGcsgrbu9pdspIL7sKxrJZpZSp4pWLpnr6x
eRenV29LdNAuTRKEyNWloPDNMu/WuUmRm2XJ0IXUHLpJtmx+1Lz7yw98s4Ad
257/PZoF9/AVPaMaMtW2oFm5BlKq6i/8b96gGppJmNwmtdXuE9t6OrY5WtYt
CNwI1+N/81LT/nNnyfJ/V555nWl7+rk4fOdvKeKapRQ0S7cv10mz5NAumIaw
9VGa/21bxPZptm04tTlJ+7Coo+IxqwabvIBjQPvE0d7FS7nqXap3PRkh69sE
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
hLoYPUYM766qUpvP/A1tRIY/20XkLVCCpQyfAFHBLLj/p/bR/XsMJP81fKKl
WEz9w4evO4GutWMBs+8n5WfFnBnMEnoSkpbOHEVIghP1gZ1UaLU5M+i+idRs
hfnU9UNsAcAIR1C7ohKukvCBR+aY5x+dbYZ3GEDhWnjgwvvuNc8+s8Hs3zQr
zX8v/qzgL7cOmU3wsWJAgc0Rgh5mN7lG96gjUjpDpT6iVfxH/JwP/fIjcg8F
bAg8BUDJni+2txVrHjKr1j5czwjSdoVqBMUWX1pkEETkdMk/yIx0Y/tLiJpo
OrbcZcOGVWb//mecKbpk/vzxO15levHAvhJhqD5Yg8UG/7ihI0c3t23bVgcA
+J6JVX3XvoPs789qbWsPGTCKLZt2mFnTHcMYaEWwDSvWm34XnEsiHHwZEidg
sFtXa48ZbGL91vaJponTCHbADqM8nwqjMHedKcAhJwP4Ipxs5k90ZRuubfsD
0/G88ymgceiICWbs2Gnk7HbLD0exqOMc3g6+8b752cYtpBkx5hJxI1k4437z
+xd30QYREa8/cuxciUKoqGYH+M7HfMlDiDm7SPUo9gDo7FtH0CkgCswOhUTB
7Hx+j18S+Msnh6TuVlJIuZaLN+BRSxfBmK7c6Hhx0LOAmKU9ZsfJujQAUQ0Z
ux32z7v3QYDJPmXegvsISNq2DJXIinIUarBu09akvpop6ae2iEKKfjm0OduC
hZJpHnWVua1jW/++g3t3Nz+ZNIz2ERVPn8CW6ZJ5d8dTHlC//s1HRQJUo19K
0j52iQsf9kSZn58j6hxeke5KgXUi6TSXXXQxNZN07ms6EsDAj2DRZlCY1Qtm
kp6kAeamjJYEJr2WKr5yi5asoUiEGXMfqEmhNSYDP8QWVOzhU2d2/Nje98ou
5nrb1hs6XWeuuOgS56rnqJeDCwhUj/9kHdeHshoVXOUGDxLlE7eui7QmH+Zu
MU0F0hCBAxFdL+mYOJSUzZAuNxO/6XSeWwOApaDEXgaClr+8utb86cA688nO
9TwSbtVL1eYxY4bcaLpf217KdTQr4qtl6EzSXg7neHIlcEiBcLakR0dzU+cO
ZtjI0aB+YjpgPhYDJWZUwnKg88D0hsMACyBVjti1Y/m1GxVqUmuC85M9GWci
GN7bA2YOdxYkPPm1JQvMgwMdWxGfAnAf7Y5tAZM4xLQgpOgF2CRcA5BWxYY8
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
dPxvv9qBO9BI1oeNkVGQ3yoSyR92ROq8nySiUzRvsQ0nTJRCrEjuJPMzAgCg
jKePP7r8ypSZkc+pb05M92XENU+RzbxpigyoIlPAS3pBqML1QtXsy/UosNun
A+PUfIkLXC77OYVbQn2ufIf8n6rmJW/h3yjn8Y3pXVwqncTrGtWEWICxSdz4
2TXfiUyciSxh3Zpzm2iAeO7EDcnO89rfUagTr6TEB1ns5qRstm9EIGdFhv4a
0g6tevaptcaAekFG26knlB43Jo7GSgk36OdXvR8nRffpAqqkH+l5Gl1FFfJM
P5Knpg/QkGqdNpOMDXQD7i/uOdrHGocm02z/5NyahhrqG/xmZWkaZkfJRITP
t3Zs8KRB4RqWLOzERY92clAp+1hVgch3sK4JRM+VJKLFiDyZ4aDpSlZSDNzx
WvgxiIZLB++t6AINQu4hJ1K7ZzXpoWsZoZAYV2IKEdVev28r3zTFKfyfa0hQ
NhNbJl0lvVir9FSZA/ys5TTIClMCPk+pdeMqnLj3pJVFZIxq4nvLzTxLFZM0
PpH8AEFxNEatQ9rTfc2hy1XP1BFkqZufsOhCOiZ+1lBUUE6T4fgBaxG2IeCg
p0VGhtscSNeJ5C/AXdlsmmXFof7ENFL1eilJqnISvmQsF3nPziUtqseYboM2
nZ4ewy1wK1xyWnon3euZmlfuJPqfLtXywoKMrox2Rpuo8SCcwpOev2mSMlWo
P4CXezARvqgZkpol44zeuvrR+P6ZeBcrdPreyiDHKSXpOpugKCrpqxI/vgwx
3UDVYPLUU3UFvn6YuSIAcEybUzl7mnjTKR6khLEefN0DbOfSc5YX2VmQ9NiV
UGlmqcqUhvccinLLp8c7J1atLU3EHU2VlJ3YpMGxpRR6aqQqOuwVZ9S4DT39
szkXQ3E6I32dSBuCVqtKDaGVzlUm870b6aHMLf3QZnPycPx5q/BJjqW4Jz0t
6SHx99nwlinNxVuOc7Zy0TWRhyNabZ4bjwr68q3KLeV+RvV9cVbq5HDq8dzt
c2lz/IvGTP+n5oz0f/C+GbXWQ7Dix+64n3W8lPYaT3EyXpmipXRJzOnvxLB7
09WP9Dw690uuVVnwZEsNheN0vDfKvN6Jx3fLbI/FTHCxW+ZS05k1aDPT1Ew1
YjkdIzInZRifijc0ZmdV/nnHRDX/UN1Wf2san1b/+RvirOgN67M3DJb2vlrj
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\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"b313db67-f1af-48e9-a2f2-16872a1475d4"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8448475874668283`*^9, 3.8448475941271753`*^9}, 
   3.844847874342389*^9},ExpressionUUID->"950e3b60-4b26-41a4-b32a-\
c65acd8e3c80"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TruncatedPolyhedron", "[", 
  RowBox[{"Dodecahedron", "[", "]"}], "]"}]], "Input",
 CellLabel->"In[77]:=",ExpressionUUID->"eb5ee99e-72f8-494f-8f7e-724714edc619"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Polyhedron",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready", 
    Typeset`spolyhedron$$ = Quiet[
     Polyhedron[CompressedData["
1:eJx1lDtInFEQhX+UgEQ3KSxMIyg2JlikjCJMEQ2LBAU1EkgnpHGNohYqiKJY
KD7SJSwWIZ0SXBBMiqQYsYuLsmiRIKuFqyvB97quDxCzeGeOOLA//M1wOffM
mW9ucXN7/fssz/Mq0392+u9JNeW0FR5z//ncfLBll7w3VfmP2je591tX3syD
OHu3X4R+NOWOpiInnApEfT9b//Gz6534Rs8Wd5ZVPw6v7fNuYOdpyWZCdGLs
a/jqW1pdYP+nYKDvIsnTyc9T3bHfJHWSOpk6dzs/pH5uGm/9kPgh9fPd+aEz
54fUT4fzQ3Hnh4wfcn6jOK86LwceTpS3ronPA+hsZ7/KHXkR5sar8PKvkyR0
IvvsDxXGyNUT6Nfow2elF/34rmJd80H99WxpDQ/HNR/4GV+8XBkqOpR8DpCb
+JF7k8gt9Cc69uTLX/GZQG4Fg7xUt3cquaU/mW+tuxf563wlB9yr8xV99Ks6
0hdyVp3ISIKezwcxR61Pur7Y9GXP3+m4nNnkTNNvQ5MVH45Y29J5GT7h3/AM
fcM/+jLc4l7DOfwb3jAvwyepT8Mz5m74Z52j2Rc2ucG/6hgeoGP4gY7h7Y7z
+/qZuM3EOfyYfUFuZr+Qm9lH5CZzB886X8MheDPc4n0znOMdM3sBTmSvwVUG
Psm8M3gnM/CP/GVPwbPO6z/vch6n
      "], {{1, 31, 2, 32, 3, 33, 4, 34, 5, 35}, {6, 36, 7, 37, 8, 38, 9, 39, 
       10, 40}, {39, 9, 11, 41, 12, 42, 13, 43, 14, 44}, {38, 8, 15, 45, 16, 
       46, 17, 47, 41, 11}, {37, 7, 18, 48, 19, 49, 20, 50, 45, 15}, {36, 6, 
       21, 51, 22, 52, 23, 53, 48, 18}, {40, 10, 44, 14, 24, 54, 25, 55, 51, 
       21}, {49, 19, 53, 23, 26, 56, 31, 1, 27, 57}, {52, 22, 55, 25, 28, 58, 
       32, 2, 56, 26}, {54, 24, 43, 13, 29, 59, 33, 3, 58, 28}, {42, 12, 47, 
       17, 30, 60, 34, 4, 59, 29}, {46, 16, 50, 20, 57, 27, 35, 5, 60, 30}, {
       34, 60, 5}, {40, 21, 6}, {42, 29, 13}, {49, 57, 20}, {39, 44, 10}, {36,
        18, 7}, {41, 47, 12}, {45, 50, 16}, {32, 58, 3}, {31, 56, 2}, {38, 11,
        9}, {37, 15, 8}, {51, 55, 22}, {33, 59, 4}, {35, 27, 1}, {46, 30, 
       17}, {54, 28, 25}, {52, 26, 23}, {43, 24, 14}, {48, 53, 19}}]]}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            Graphics3DBox[{
              Directive[
               Hue[0.58, 0.4, 1], 
               Opacity[0.5], 
               EdgeForm[
                GrayLevel[1]]], 
              PolyhedronBox[CompressedData["
1:eJx1lDtInFEQhX+UgEQ3KSxMIyg2JlikjCJMEQ2LBAU1EkgnpHGNohYqiKJY
KD7SJSwWIZ0SXBBMiqQYsYuLsmiRIKuFqyvB97quDxCzeGeOOLA//M1wOffM
mW9ucXN7/fssz/Mq0392+u9JNeW0FR5z//ncfLBll7w3VfmP2je591tX3syD
OHu3X4R+NOWOpiInnApEfT9b//Gz6534Rs8Wd5ZVPw6v7fNuYOdpyWZCdGLs
a/jqW1pdYP+nYKDvIsnTyc9T3bHfJHWSOpk6dzs/pH5uGm/9kPgh9fPd+aEz
54fUT4fzQ3Hnh4wfcn6jOK86LwceTpS3ronPA+hsZ7/KHXkR5sar8PKvkyR0
IvvsDxXGyNUT6Nfow2elF/34rmJd80H99WxpDQ/HNR/4GV+8XBkqOpR8DpCb
+JF7k8gt9Cc69uTLX/GZQG4Fg7xUt3cquaU/mW+tuxf563wlB9yr8xV99Ks6
0hdyVp3ISIKezwcxR61Pur7Y9GXP3+m4nNnkTNNvQ5MVH45Y29J5GT7h3/AM
fcM/+jLc4l7DOfwb3jAvwyepT8Mz5m74Z52j2Rc2ucG/6hgeoGP4gY7h7Y7z
+/qZuM3EOfyYfUFuZr+Qm9lH5CZzB886X8MheDPc4n0znOMdM3sBTmSvwVUG
Psm8M3gnM/CP/GVPwbPO6z/vch6n
               
               "], {{1, 31, 2, 32, 3, 33, 4, 34, 5, 35}, {6, 36, 7, 37, 8, 38,
                 9, 39, 10, 40}, {39, 9, 11, 41, 12, 42, 13, 43, 14, 44}, {38,
                 8, 15, 45, 16, 46, 17, 47, 41, 11}, {37, 7, 18, 48, 19, 49, 
                20, 50, 45, 15}, {36, 6, 21, 51, 22, 52, 23, 53, 48, 18}, {40,
                 10, 44, 14, 24, 54, 25, 55, 51, 21}, {49, 19, 53, 23, 26, 56,
                 31, 1, 27, 57}, {52, 22, 55, 25, 28, 58, 32, 2, 56, 26}, {54,
                 24, 43, 13, 29, 59, 33, 3, 58, 28}, {42, 12, 47, 17, 30, 60, 
                34, 4, 59, 29}, {46, 16, 50, 20, 57, 27, 35, 5, 60, 30}, {34, 
                60, 5}, {40, 21, 6}, {42, 29, 13}, {49, 57, 20}, {39, 44, 
                10}, {36, 18, 7}, {41, 47, 12}, {45, 50, 16}, {32, 58, 3}, {
                31, 56, 2}, {38, 11, 9}, {37, 15, 8}, {51, 55, 22}, {33, 59, 
                4}, {35, 27, 1}, {46, 30, 17}, {54, 28, 25}, {52, 26, 23}, {
                43, 24, 14}, {48, 53, 19}}]}, ImageSize -> 
             Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification])], Boxed -> False, 
             Lighting -> {{"Ambient", 
                RGBColor[0.4, 0.45, 0.5]}, {"Directional", 
                RGBColor[0.24, 0.27, 0.3], 
                ImageScaled[{2, 0, 2}]}, {"Directional", 
                RGBColor[0.24, 0.27, 0.3], 
                ImageScaled[{2, 2, 2}]}, {"Directional", 
                RGBColor[0.24, 0.27, 0.3], 
                ImageScaled[{0, 2, 2}]}}, Method -> {"ShrinkWrap" -> True}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["60", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of faces: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["32", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            Graphics3DBox[{
              Directive[
               Hue[0.58, 0.4, 1], 
               Opacity[0.5], 
               EdgeForm[
                GrayLevel[1]]], 
              PolyhedronBox[CompressedData["
1:eJx1lDtInFEQhX+UgEQ3KSxMIyg2JlikjCJMEQ2LBAU1EkgnpHGNohYqiKJY
KD7SJSwWIZ0SXBBMiqQYsYuLsmiRIKuFqyvB97quDxCzeGeOOLA//M1wOffM
mW9ucXN7/fssz/Mq0392+u9JNeW0FR5z//ncfLBll7w3VfmP2je591tX3syD
OHu3X4R+NOWOpiInnApEfT9b//Gz6534Rs8Wd5ZVPw6v7fNuYOdpyWZCdGLs
a/jqW1pdYP+nYKDvIsnTyc9T3bHfJHWSOpk6dzs/pH5uGm/9kPgh9fPd+aEz
54fUT4fzQ3Hnh4wfcn6jOK86LwceTpS3ronPA+hsZ7/KHXkR5sar8PKvkyR0
IvvsDxXGyNUT6Nfow2elF/34rmJd80H99WxpDQ/HNR/4GV+8XBkqOpR8DpCb
+JF7k8gt9Cc69uTLX/GZQG4Fg7xUt3cquaU/mW+tuxf563wlB9yr8xV99Ks6
0hdyVp3ISIKezwcxR61Pur7Y9GXP3+m4nNnkTNNvQ5MVH45Y29J5GT7h3/AM
fcM/+jLc4l7DOfwb3jAvwyepT8Mz5m74Z52j2Rc2ucG/6hgeoGP4gY7h7Y7z
+/qZuM3EOfyYfUFuZr+Qm9lH5CZzB886X8MheDPc4n0znOMdM3sBTmSvwVUG
Psm8M3gnM/CP/GVPwbPO6z/vch6n
               
               "], {{1, 31, 2, 32, 3, 33, 4, 34, 5, 35}, {6, 36, 7, 37, 8, 38,
                 9, 39, 10, 40}, {39, 9, 11, 41, 12, 42, 13, 43, 14, 44}, {38,
                 8, 15, 45, 16, 46, 17, 47, 41, 11}, {37, 7, 18, 48, 19, 49, 
                20, 50, 45, 15}, {36, 6, 21, 51, 22, 52, 23, 53, 48, 18}, {40,
                 10, 44, 14, 24, 54, 25, 55, 51, 21}, {49, 19, 53, 23, 26, 56,
                 31, 1, 27, 57}, {52, 22, 55, 25, 28, 58, 32, 2, 56, 26}, {54,
                 24, 43, 13, 29, 59, 33, 3, 58, 28}, {42, 12, 47, 17, 30, 60, 
                34, 4, 59, 29}, {46, 16, 50, 20, 57, 27, 35, 5, 60, 30}, {34, 
                60, 5}, {40, 21, 6}, {42, 29, 13}, {49, 57, 20}, {39, 44, 
                10}, {36, 18, 7}, {41, 47, 12}, {45, 50, 16}, {32, 58, 3}, {
                31, 56, 2}, {38, 11, 9}, {37, 15, 8}, {51, 55, 22}, {33, 59, 
                4}, {35, 27, 1}, {46, 30, 17}, {54, 28, 25}, {52, 26, 23}, {
                43, 24, 14}, {48, 53, 19}}]}, ImageSize -> 
             Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification])], Boxed -> False, 
             Lighting -> {{"Ambient", 
                RGBColor[0.4, 0.45, 0.5]}, {"Directional", 
                RGBColor[0.24, 0.27, 0.3], 
                ImageScaled[{2, 0, 2}]}, {"Directional", 
                RGBColor[0.24, 0.27, 0.3], 
                ImageScaled[{2, 2, 2}]}, {"Directional", 
                RGBColor[0.24, 0.27, 0.3], 
                ImageScaled[{0, 2, 2}]}}, Method -> {"ShrinkWrap" -> True}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["60", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of faces: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["32", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Embedding dimension: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Quiet[
                    Apply[Region`PolyhedronDump`polyhedronType, 
                    Region`PolyhedronDump`computeType[
                    Typeset`spolyhedron$$]]], StandardForm], 
                   SynchronousUpdating -> False, TrackedSymbols :> {}, 
                   CachedValue :> 
                   AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Region`PolyhedronDump`iRegionBounds[
                    Typeset`spolyhedron$$], StandardForm], 
                   SynchronousUpdating -> False, TrackedSymbols :> {}, 
                   CachedValue :> 
                   AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Volume: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Region`PolyhedronDump`iVolume[Typeset`spolyhedron$$], 
                    StandardForm], SynchronousUpdating -> False, 
                   TrackedSymbols :> {}, CachedValue :> 
                   AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Polyhedron[CompressedData["
1:eJx1lDtInFEQhX+UgEQ3KSxMIyg2JlikjCJMEQ2LBAU1EkgnpHGNohYqiKJY
KD7SJSwWIZ0SXBBMiqQYsYuLsmiRIKuFqyvB97quDxCzeGeOOLA//M1wOffM
mW9ucXN7/fssz/Mq0392+u9JNeW0FR5z//ncfLBll7w3VfmP2je591tX3syD
OHu3X4R+NOWOpiInnApEfT9b//Gz6534Rs8Wd5ZVPw6v7fNuYOdpyWZCdGLs
a/jqW1pdYP+nYKDvIsnTyc9T3bHfJHWSOpk6dzs/pH5uGm/9kPgh9fPd+aEz
54fUT4fzQ3Hnh4wfcn6jOK86LwceTpS3ronPA+hsZ7/KHXkR5sar8PKvkyR0
IvvsDxXGyNUT6Nfow2elF/34rmJd80H99WxpDQ/HNR/4GV+8XBkqOpR8DpCb
+JF7k8gt9Cc69uTLX/GZQG4Fg7xUt3cquaU/mW+tuxf563wlB9yr8xV99Ks6
0hdyVp3ISIKezwcxR61Pur7Y9GXP3+m4nNnkTNNvQ5MVH45Y29J5GT7h3/AM
fcM/+jLc4l7DOfwb3jAvwyepT8Mz5m74Z52j2Rc2ucG/6hgeoGP4gY7h7Y7z
+/qZuM3EOfyYfUFuZr+Qm9lH5CZzB886X8MheDPc4n0znOMdM3sBTmSvwVUG
Psm8M3gnM/CP/GVPwbPO6z/vch6n
   "], {{1, 31, 2, 32, 3, 33, 4, 34, 5, 35}, {6, 36, 7, 37, 8, 38, 9, 39, 10, 
    40}, {39, 9, 11, 41, 12, 42, 13, 43, 14, 44}, {38, 8, 15, 45, 16, 46, 17, 
    47, 41, 11}, {37, 7, 18, 48, 19, 49, 20, 50, 45, 15}, {36, 6, 21, 51, 22, 
    52, 23, 53, 48, 18}, {40, 10, 44, 14, 24, 54, 25, 55, 51, 21}, {49, 19, 
    53, 23, 26, 56, 31, 1, 27, 57}, {52, 22, 55, 25, 28, 58, 32, 2, 56, 26}, {
    54, 24, 43, 13, 29, 59, 33, 3, 58, 28}, {42, 12, 47, 17, 30, 60, 34, 4, 
    59, 29}, {46, 16, 50, 20, 57, 27, 35, 5, 60, 30}, {34, 60, 5}, {40, 21, 
    6}, {42, 29, 13}, {49, 57, 20}, {39, 44, 10}, {36, 18, 7}, {41, 47, 12}, {
    45, 50, 16}, {32, 58, 3}, {31, 56, 2}, {38, 11, 9}, {37, 15, 8}, {51, 55, 
    22}, {33, 59, 4}, {35, 27, 1}, {46, 30, 17}, {54, 28, 25}, {52, 26, 23}, {
    43, 24, 14}, {48, 53, 19}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.923288908458849*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"f37afebd-98b7-a943-9522-459ddc774606"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"TruncatedPolyhedron", "[", 
   RowBox[{"Dodecahedron", "[", "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[78]:=",ExpressionUUID->"3f1e3a06-266a-ff4f-a133-ac77f1f0e313"],

Cell[BoxData[
 Graphics3DBox[PolyhedronBox[CompressedData["
1:eJx1lDtInFEQhX+UgEQ3KSxMIyg2JlikjCJMEQ2LBAU1EkgnpHGNohYqiKJY
KD7SJSwWIZ0SXBBMiqQYsYuLsmiRIKuFqyvB97quDxCzeGeOOLA//M1wOffM
mW9ucXN7/fssz/Mq0392+u9JNeW0FR5z//ncfLBll7w3VfmP2je591tX3syD
OHu3X4R+NOWOpiInnApEfT9b//Gz6534Rs8Wd5ZVPw6v7fNuYOdpyWZCdGLs
a/jqW1pdYP+nYKDvIsnTyc9T3bHfJHWSOpk6dzs/pH5uGm/9kPgh9fPd+aEz
54fUT4fzQ3Hnh4wfcn6jOK86LwceTpS3ronPA+hsZ7/KHXkR5sar8PKvkyR0
IvvsDxXGyNUT6Nfow2elF/34rmJd80H99WxpDQ/HNR/4GV+8XBkqOpR8DpCb
+JF7k8gt9Cc69uTLX/GZQG4Fg7xUt3cquaU/mW+tuxf563wlB9yr8xV99Ks6
0hdyVp3ISIKezwcxR61Pur7Y9GXP3+m4nNnkTNNvQ5MVH45Y29J5GT7h3/AM
fcM/+jLc4l7DOfwb3jAvwyepT8Mz5m74Z52j2Rc2ucG/6hgeoGP4gY7h7Y7z
+/qZuM3EOfyYfUFuZr+Qm9lH5CZzB886X8MheDPc4n0znOMdM3sBTmSvwVUG
Psm8M3gnM/CP/GVPwbPO6z/vch6n
   "], {{1, 31, 2, 32, 3, 33, 4, 34, 5, 35}, {6, 36, 7, 37, 8, 38, 9, 39, 10, 
    40}, {39, 9, 11, 41, 12, 42, 13, 43, 14, 44}, {38, 8, 15, 45, 16, 46, 17, 
    47, 41, 11}, {37, 7, 18, 48, 19, 49, 20, 50, 45, 15}, {36, 6, 21, 51, 22, 
    52, 23, 53, 48, 18}, {40, 10, 44, 14, 24, 54, 25, 55, 51, 21}, {49, 19, 
    53, 23, 26, 56, 31, 1, 27, 57}, {52, 22, 55, 25, 28, 58, 32, 2, 56, 26}, {
    54, 24, 43, 13, 29, 59, 33, 3, 58, 28}, {42, 12, 47, 17, 30, 60, 34, 4, 
    59, 29}, {46, 16, 50, 20, 57, 27, 35, 5, 60, 30}, {34, 60, 5}, {40, 21, 
    6}, {42, 29, 13}, {49, 57, 20}, {39, 44, 10}, {36, 18, 7}, {41, 47, 12}, {
    45, 50, 16}, {32, 58, 3}, {31, 56, 2}, {38, 11, 9}, {37, 15, 8}, {51, 55, 
    22}, {33, 59, 4}, {35, 27, 1}, {46, 30, 17}, {54, 28, 25}, {52, 26, 23}, {
    43, 24, 14}, {48, 53, 19}}]]], "Output",
 CellChangeTimes->{3.923288917719551*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"aaaee991-d16d-4d49-b720-ad54ae07dedc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"AugmentedPolyhedron", "[", 
   RowBox[{"Dodecahedron", "[", "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[79]:=",ExpressionUUID->"f272008d-4798-f445-8704-9c64660aaa4d"],

Cell[BoxData[
 Graphics3DBox[PolyhedronBox[CompressedData["
1:eJxTTMoPSmViYGBQAGJmIK5cXcyzkvXbfgYo4A1eyHvq0gV7qLg9mvj+J8xu
3B0Wt/eH/Dp9dvfHL/th6tHE7WHiW8O4O79d+Gi/4sv02eWPX+7HIQ5XD7MH
ph6mDk0crh/izmdQ9z/Yvw0ivh9N3B5N3B6mHs0cmDjc/Kdgf72GhwPMHBiN
5i90cXvUcHsND2c0f8HDB6YfTRzufmg426OFP7o43N5zhoEHw5s/w+2F8B/D
xO2D20/vihSYYAMVt59XfTRgqtwN+8+7bxTd6vu0/yxU3BgMmm1Q3f/Vfj6q
enuY+jnvN2cumvTe/pvvhLUJH57Zw+ydBxX/ChHfDxeHmLMfZg5MnAENQMLh
6/75qOr3o5m/H2b+GVT3wMRh5tsDAALbhrk=
   "], CompressedData["
1:eJxNkVsOgkAQBFlZRAGBBZWXPLyHp/AIHkDv/+d2UiT7MalK7B5GeH5+7+8h
iqKXn9hP5Sfzc4NnXCxx0eCGjlx7jn7usMDFHBcTPKGzu37rYIqn3NXBFm/p
7Hk9o4cnXKzxml09zIO8bh3gFRctbtk1wCLI6/4RXnCxwRt2jfAY5HX/BFtc
dLhj1wQPuGXXAzZ4wzd7wAqv6OwZ7Zqhwx3feIYZntHZM7pvgTEulnhJf4Eu
yOi9r7DGRYMb+iuMg4ze+wYtbvlvGzS4oSP/A24ZDRY=
   "]]]], "Output",
 CellChangeTimes->{3.9232890946385136`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"1c1eed98-8030-e34a-8edc-bbbbe7a17aa6"]
}, Open  ]]
},
WindowSize->{591, 606},
WindowMargins->{{197.25, Automatic}, {Automatic, 64.5}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (2023\:5e7412\:670812\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8b317934-3324-46f6-8166-d91ffa336e82"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 231, 3, 43, "Input",ExpressionUUID->"bcff38ca-1546-44e5-a9cd-1a561a81de0f"],
Cell[814, 27, 4541, 79, 378, "Output",ExpressionUUID->"06e79b4b-254a-4a75-b261-08b6896bf4d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5392, 111, 264, 4, 43, "Input",ExpressionUUID->"10eed732-b52c-43e2-9a1e-3fa2e7f221a7"],
Cell[5659, 117, 6103, 101, 201, "Output",ExpressionUUID->"afd92aca-e96e-45fd-9f18-959a4fbed0d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11799, 223, 218, 3, 43, "Input",ExpressionUUID->"457d2d5c-4215-4da2-b500-15e19b5f1485"],
Cell[12020, 228, 1175, 22, 342, "Output",ExpressionUUID->"87544e3c-e956-4683-a71f-c89d28849482"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13232, 255, 1293, 28, 260, "Input",ExpressionUUID->"73f15aab-80cb-4104-9c9d-828098899509"],
Cell[14528, 285, 78579, 1312, 390, "Output",ExpressionUUID->"f213b7d0-ed08-4d37-ac2e-84db29d8e2b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93144, 1602, 1660, 45, 255, "Input",ExpressionUUID->"e642d136-76aa-4abc-95c3-63ecc569d1c7"],
Cell[94807, 1649, 73238, 1237, 161, "Output",ExpressionUUID->"4d6fdbd4-71c1-47c7-ae48-a4f8d6165f2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168082, 2891, 476, 10, 78, "Input",ExpressionUUID->"eb9fb285-b570-410c-b94b-286c71d0c52b"],
Cell[168561, 2903, 377832, 6282, 449, 278047, 4645, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"b313db67-f1af-48e9-a2f2-16872a1475d4"]
}, Open  ]],
Cell[546408, 9188, 179, 3, 28, "Input",ExpressionUUID->"950e3b60-4b26-41a4-b32a-c65acd8e3c80"],
Cell[CellGroupData[{
Cell[546612, 9195, 185, 3, 43, "Input",ExpressionUUID->"eb5ee99e-72f8-494f-8f7e-724714edc619"],
Cell[546800, 9200, 14108, 260, 64, "Output",ExpressionUUID->"f37afebd-98b7-a943-9522-459ddc774606"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560945, 9465, 223, 4, 43, "Input",ExpressionUUID->"3f1e3a06-266a-ff4f-a133-ac77f1f0e313"],
Cell[561171, 9471, 1711, 26, 384, "Output",ExpressionUUID->"aaaee991-d16d-4d49-b720-ad54ae07dedc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562919, 9502, 223, 4, 43, "Input",ExpressionUUID->"f272008d-4798-f445-8704-9c64660aaa4d"],
Cell[563145, 9508, 922, 17, 406, "Output",ExpressionUUID->"1c1eed98-8030-e34a-8edc-bbbbe7a17aa6"]
}, Open  ]]
}
]
*)

