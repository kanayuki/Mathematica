(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    141924,       2780]
NotebookOptionsPosition[    139500,       2729]
NotebookOutlinePosition[    139915,       2746]
CellTagsIndexPosition[    139872,       2743]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\:66f2\:9762\:76f8\:4ea4", "Title",
 CellChangeTimes->{
  3.8779645730781827`*^9},ExpressionUUID->"b1232054-d063-40c6-b3ac-\
c11104e55e50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"], "+", 
       SuperscriptBox["z", "2"]}], "==", "1"}], ",", 
     RowBox[{"z", "==", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"Mesh", "->", "None"}], ",", 
   RowBox[{"ContourStyle", "->", 
    RowBox[{"Opacity", "[", "0.8", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877964656401498*^9, 3.877964726057502*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"cfc7090f-27a3-48ae-8f1f-30831604b99e"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyFnXmYj2Xbx0eYGGt4mRglLfaSLdLjh0ZaEJonRFke5LE1qYYkpMk62ZIs
k0T2rZA9N5XC2EeDWYwxK7PZHsqSt+c47s95v8f3Pjrevxy+xznn77qv67qv
69y+5/1Qv7e6DrgnKChoTXBQUNG//g3q88jA7FdbOffMGJAxr+g5p/+QzKmH
1+UG9lQK3vjzBScAXvmDyMytw3IDyB/8+KmQ0FNnnSNNB3bKLZ5n8pHX2vS6
51SK4cg3WfpAj+jg086J/Jgto9fnmzx45N4dK3q/kR+49Nj2Ry/9ftR+N7hR
t5pDP70Y2PP1U3+M/fOU4TUinjmdcTvH5Jt/9+2IzGnpzpWGVW7MLJZj8vPO
BffdOiTN8LDHD5UaOCPJ9ICjh/G8u/nPjvdP956rf+0RFxKKH3PCcn/4PmF3
gcmDP3C2SK+ZBfn2vOCDkxr1zPuzwPDaPadd7Rqyx+m6dtZLDZxC0w9ebFfY
8irjCk3/4oaPPrk9KtHmE/xEyQoRzxXLceY9enFExYXp9rzglwrqlnp1cJrJ
T1vc7lyrtdlO5fr7v2pWNMPk12eeKgzNyzQc+cGHWsYWFs1wJg+c2/idtdkm
Dz7o5L/WJeVmmvz62DebfBhz0Xm61vvPJxc5Z/Lf5X0R0fN2juERCwbUGr4h
ycYJXuPg57dvHE0x/YynWPcDhW2Dzhle/qPXZ+XXTTc8auG7XVLqpfvkWd9W
/x7QpEpsluHPbIs8VSs2yzdO1ot157lYF9YdeXDdt0Hl4/rXvvSkrTvy4Oz/
0D5vVqz+VqL9rr1Hrjz7cHOnRQmx1XNt/ODsf3D06PtSt93wtx6Kijf9zDPj
B39k3s1rrS+dtXGCo/9Cs1tX5u7KdYIW962yfNAzTu3U6/2eK5Jh6wuOfNjo
RfVnDs11Wu/rU2lwwV/725XPfKLl9Ii1OYYjz3g4Z8AZT9SKttdO/OCdS+C8
R8hnvH1mzvG5SfZe894hvyQ2+HLbu4WB2E2nSnYbFm/zqe/XjYyk26d2Fdg4
mc9j86ZM3jk033Dkx/aJ7v1LXr5TPmrom4tuHzX5fju7zlwZk2c48/x0+5xS
XxbLs3ljXcD1d1fcDr62Z22+yTMPyB+q0rjOrRMpNh7wzUMmFya8nWjzxrqw
/5E//HyPQSm3C0w/84OePeER54sWOW3jAe+1cNSqj2fEmx6eF3n2OfLMA+vF
uWHz5o6zy7vHV+fvKvQ97+jyEYGcMYXe/Lg464Ue1r3W6U6Vr9729ICjHz3g
zIOOh3XnuZBnXRTneet32Tur19WzhvMeMf/fToip/XO3ODsPOcfAOffsXnPH
g3zIwt/CR8dlGD7om4djgg755Xnv0M940DO2aPEfFtTLNLzujt7rStTP9Olh
PLtrDT5wYK33foFzLrFPOv/QZuCUsFybH9adc0PnDVzPc8bZvPrxus9uTAq8
mLrg6zs7C+zcYL2uFBwdt3JIvuHo37X18Okytwvs3EC+/6/3bN22Jt9w5CPz
u7zQsWie6eH9Akee9T39VdOC/bn5dg6jv98fX+5+a1qe4aofnPf0YP/lXxXM
z7L7i30yc1bivT9eyLTzivnhXEWe+7HDwEcSXrgnx+SxB8CPPTzvxZNbkkw/
erDfVD96uPeXh69ZWa5OumcfuvITe7R/bNGgNJNn/wwPhJesPz/dnhcc/eDY
G8wP95euI/K81+wHcN7rSm0Gjm21q9DWEfklgxq3f3yMhyPPejF+1pHxgDd5
eHfCqLfiDcdOQ/5Y03uLF0y9aONhnvvUa/HLY0Ny7XftHN7evFTLnbm2r8AZ
PzjjjL5//vedbns4zzX9p/fKvX8gw/Qzz81LtO03q06myev8I897DY4873Xw
sJJrJ9/09pXun/3zI6a/MCTO9I86W/LNd1fnePe7u0/Qg35w9ifynG/gyHNe
gTPP2MPgjAf968e0mtp4dbbJg7OfOcf0ucA5B8CxP5FHv9mr7n7g/QVnP6MH
+xx5cOxz5HmPOA+R570DR5555nfZJ6wLOPuKeeP8Rx6c+0Xl0RMZ+v6VMj3j
DOd84NwGxy9jnOCPh8w8nLUw3Z6L/cxzqT0Jzu+yz8EZP/cC+xY9vL+ce+Dc
C8ijh/eX50Ke993OYTk3Nje97lS9cdb0nIht8VGFarmmX9cLPeCcD+Bqz6Dn
sanfR81Ylu+of316fuvj7w/Id9R/b1Y2b2TxMnkmH9324+V3t6QYrvGBuGeH
bM7enOtofGBwlfnLDvXP9duxP7f/9suKe/x+gYvjj7NeS+/++fb1EuccvffP
/7PmmqGLkxz145BX/z0pJnpk48+95+J9j5yU9V7u9wWO+u+Ttkz6ZPV/vPkB
3z2yZ7Ui1wsc9d93Rld5r/0vhY7678PmLDn65MRCR+MYrx0Zd3589EXDN48d
+MGWVxO9+Rd/medSO2r6f3o3bV7utKN2FLja26dz9078uPQxR+32YicP1Fn3
Ybyjdjjyav+jX/0a1Z8UWN1gR698W1/1j5D3+VmuvPrjrKP646yj+uPsc/XH
WUf1x3lfzl09fKPSy54/ruvCvgqr9UjQ1kdyHfXH373Uf94fV3Mc9cdZd/S0
+mzD9gdejTf9Go96reSXNdaU8vSAL2uT+/qTS7Mc9XORz3n99rnCDZ5fj/6c
en3PND/m+fXg6nfz/qrfzfuu96O+p+CjeqTvuLdRuqN+Ou9Ln/atCjp19Pxu
PWeQfyil46a7dwsdjfsxz/uPP7Zj6amD9rvMg8avku9xrk5amu1onFDlOWfy
91ZoXHt2uqPxtO6/ftsk8u00k9/27OQzH4y5aPPQenWPy5uqeH7cuGKdDnQO
yXDUX3vjqT+LzfjRw0e8FP7k3Z3+8c9tP/CTf8Rme3ok/rYrMmbYpfOZhm+L
+X1OleRMn/zSSbWCt/RMM/387qWEno1fifWPk/OZ51I/Mf6rBh9uqJlp+K7P
tv3RI8/TA341pdq8z9d6etR/rPjz7Clnl+Z491ff8V3vDcu0capfybqrn27n
j8QBwH3+PueMxhME5xzj3NP4hp2HEodZtL/VmCfSUhyNw0SHzWlbanyio3FO
5k3jmTqf6Dk5pUKFiWlnHY0/MJ5etf/RI3KBZz+jR/0O1kXtcORPFB16p9ka
zx9BXv1TcLX3uK/BOa+Q3zzu6RsXRnv+keoB530Ev9T0VM3wenE2TvUXeL/U
X2Dfqt3FvKl/x/2ofijy6iey39QfBFe7Dj3qTzEPGh9g/6idif6uU0beqjXF
8695j9S/5jwEDzvRY2ur3IMmP/uXt8c8scDzj5jnyDKriry33fMTVT8473VY
1/ciPr3f8zdVHpz3WuMVnLcaP2HeNN7CPCQ0Lzrim55e/Ad5jRchr/Ef3Q/I
815r/If30RdPcM8TjTvxuz6/3pX3xTFc3Od3uLjPf3Fx5sH8HRdXf5bnUn+W
fTgiqczNH854fivzgzz3Drj6oeDsT3DmQf1fxc3PHT1zXtTIOMfnD7rPpX43
etQ/RY/Pn3X1qH/K+MGxH3ScrAv2j8bHeI98eRD3dwcvHR26oLsXN9P3BZx7
n3UBV/3sB3Cfv+/+bsShoCcenZEYiKp0tMhDQXkBzV+AE+cHn5MWmtZgnifP
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
7V2c7iiPA3nljYIrP5TxKE+E90V5H/h3WvdOXELrwPG/tO6d+IbWh+O3av08
/hr1coqzz9HP+ay8D85b5V+gB3mtZ0CeOgTqCpQXwHNp3T56eC7Nv1MPqfLU
WzI/+MtaP49/rfXzrJfWz7MuyjvgPFceCn6o1ttzPoCTR+C+U34N8pxv4MSX
lI+A/aC8M3Dll4Erjwx7CZy4NDj1zKpH+ZXYD8p7xd5QXiq48lj5XR+v2ZVX
/qnZh8J3nrg2dOH83UmO8rvRo3xb/AgfH7bRI/OnxsY7yhfmd5Vnx/wobw55
5S8j7+PxueOkrlvzFMpDR7/ykZFX/j4466v5C+VTl19xpVy1qDhbF80bKm8d
XPn74MqLB9f+AIzHxwt25ZW3yziV544e5bMzD8ovRt7Hi3fllfdKXkl5ssgr
H5a8j/JhzW8SvjDj8fGR3XlQnqz5ucpHduWVP4u88ojBlS/M+678Zcav/Oip
z5+fVu9uiqN9A5gH7TuBHl8fABfXvgFdV68bNPTuWcfXZ8B9XuVBgyufWu09
jT+Da9xsV7kxeb2rePXSxN+0XlrtTPgjFv909SDv86ckTmv3u8TfkCduqfYq
4yRupvW36n9pvO5sRNnbLbp5ddrqfyHv8+9knOA/T6l2tc9TcTZvWseudqDG
/5W/w3NpXajepxr/B9c8EfYGz6X2EvrVLtJ8DfYMv+uzA935UbtR8whad612
I/L4fVo/j92iddrqp7Auag/rfjB/09Wj/oXG/7UOH/3XeqROXXjKq8P3+UcS
91Z+k9r5Gj/ndzWer/wF9YOIZ6q9R5xH/WvNu2mdtvrLmg9tvnTkwy/MPxjQ
fC646te6bo17aN5NeVvqdxPP1HgIcWmNGzAe9feJ42ncgPgheSKte9d4i+aX
I1/LOZgwzOO/qF3NeMhPaT282v/sE5+/IOctOPkd9Wt0/9xO7jz73vUev0D9
C42H1/+mbZ1TX3j8ILW3rZ7ftVeVf0qdkvKh1P5hn6jdqPFw5U9h5yhfT/0I
45mKvWo8WbFvNW6JHng0aidoXkB5l2pnanxeeV7gygtjPpV3pnap5muUJ6t+
De+7xc8rdfxg7xfZvnVX3rT6dzr/yjtWe17nR/nIPn/E3f8+/8XFsQOVN+qL
R8FHVrvOxYlv+/iSYg+T51L7Fr6n2rGaFzv0we7ChxvE+/Qrv5K4t/Ir1U/U
vKHylNVu13yQj48p9rnmfZRnSl5Deaxqh5P3UT9d8y8+3reLcy+rvI9H7+LY
h5o3UX4oOOck49d+9S4/wddn/nyz5e//Mr3A168e+acTlr+W+EKWyWP/I//c
yiLNf8xNM3zurRKXY1+8YP36zK+Rvus6HssDdhl2qnWZi77vBTSZOb/NxdIX
vO9r3Kp430Mdsky/9lXWPgzUD2vfLa0H1r73jFP7KDJvQ0PWzdmdk+b7Lgnj
Ud6T9hHNeO5k8x0VvD42VsdStMfILfcl+r5L9fsH/a6tL3fS972nzs2zG60p
e9z6wyivSvuFlmj7SVrv+874vg8VNrLilxFljxlec1mZJwbMTfA9l/KbtI+3
6i+7L3dYwxupJs88K2+LcQYHJfdu3+w3w+mDpzysvD/2Hf/oUqrvezT0l1C+
D+vFOmofLXD2IfiHq65V7dfhgsnzu8qf0n7j4ftq3Tlb8lxg16KWMfsb/Ob7
TkrDdvE7H5qe4PsuifZjX5zaosmC0J9930Fr+PrsEvlVfvR9Zy1oRc6myLqb
fd9Tq7Fkfq/Kdb71fa8tZ2DDrV9XPej7Ds6u1X2+6j/N6zuk/BftW448ON+h
UHnqYfQ9pf6W906/mwau35UAvzLpy6LRSV6fW9ZLv3eDvPYrLvt5zrzwsvmG
sw/Ro/2Eiafpd2p4Ls5h5fFpH2nktW9zjYNRES1KeX2Wkhc9Wn1N7tG//c5L
p9rb39k69bzv+zLat0r5CPp9DZ1nrT/X7wHpfIJzbsOP1jpz/f6O6gGft2HD
9d0xOXa/KM9Lv/uj8wm+sf3R2jEh5+1e+7vvQIGPmXhrdtOQNMOZH+RblWp1
tP1N/3dwtA9z3QYl4u6LyfJ9N4pxMh7lq3JPKa9z244HQ3JOe/32tR8jOPvB
vivq3pvaN5J7X/Fury9Z3u62x7PQPvbMJ7jyffS7AOxn/S4A86PfwdTvkHI+
aJ9b4x24+037xmtfROrkta/j46M2vLohOc/33VX0sA/1O3Q6HuqmFIcvwD7X
7waC6/cNwfX7I5xX+n1D5Ll3kNf+k4wTXL8r+nffrcM+0e9EYM9Y3yrX7tJ+
sNiN2teR+wV7Rr//gv3Dval8YZ5X+Wj6/R3sHHDuKe0niR7sGcap39dDnro7
3T98P1HXkfGYfvoUCT8OPdgh/C7Pqzw+/Y4P97t+r2d/4sXkQJU99rvcd6qH
80r7RaN/8h879hcpd8Jwzknmk/NK+dT6XSHsFv0e0J6GN3r+1GGxjYd7UL87
afZVp42vVZ8z0/fd0qDuv64fl9DG9/1T5HnvlOcOrnwZ/Z4I9wU4563uE+xh
7YPKvCnOeMwO5JzpVH11eOXffPNg9oNr74Fjz6s8+rEnsff+rl8i+MrhRZv1
/sDDQydM6PtoWU/+x5sjt1Rske7rP1lh04br4SW8PmBq/1s/zBcX1Wl485zd
j1pnpf03Kl9e3bf0mP9zz1Z7sOG50sdMHr9D6zS0v0fZ6ffnNr6VbuMZv2DV
Sy//9xx15RmP1oFoXxHuX+1zsuvI/QM3XEk2O03rGV7bG5LyUog3HrUbtV5C
+29wD2q/DuSzqr6z7soqr6+R2kvax1j7Eb36P+WHt7xzIdCr2JzyL5RPtf5j
er5ZP8Pu054I/OndO8S11P9af3THkOxuF3w49Vronxl8t23UUa9/oPbfBmec
2ocQefxZrVfRvm3cR9p3Xe9ZnlftCnDqIbVfovalH9xubofGp/16qJfgd/Fn
tS5I+5gdK7ryoW8K4w2Pvjz/2FvrEnz9by1uL/EH3q+MAwfL/vOyp5/90L/C
57U2XU218TD/jF/7ER25+Xz5vWMLvPd9/83gZe2zTJ5zQ+sltP+Vfr97+Nlm
tdetyAqoXY28xq8Md8cDPuG9nAbPZaf5xr9y79NL+j2V7ttv6OE8NL/Yravh
/cV/Yd7Qr/2fNe7EvgXX/rcaT6MvtNmZ0rdW/TutQ9B+qupfa92F9rPVcWqd
sPbX4r3QPrfqD4Jznlh/MPfeUXnObV+/9BK7JlW/95yd25yrWn/Ce631hNov
Ue0ocLW70LM4aud9MYkHTJ5x6vfNtb4O+1zrIdHPua12GnqwH3gureszey9+
z7UdZ7w6TMbjq6OT/op9Pgq6fr3AOyfpD2x29aIOvzzVsr+v/7P2M8y5892c
z5I9nPXS50Kec2nQd0NP1Vmf4Osjrf1ROQ+1H6PFx6SvI3Yp8rGBpKrDPk3w
9XtnHcGxe7WuVfs6YndpH0i195hPnTdbR9eO1X6Vaj9bnafY28xP/T31+ywu
OGb7ROuffd/LcO00cM5J/a4E96b5oS4+YcEXt0bsL7T3d84Lq2qM+ctu0zo0
7T+MvWf70L1H/u47LNh14JyT1p9kwtsD7nwaa+PgX+aZ/y+JDb7c9v/g3058
8duXfveeS/s5R7/T9dPtYzw/Gly/X4NdpPbA5I8H3Th4r1enh92l9aLahzN0
2qJv1lw+4/veDfan7Td33nS9WEd9j7gf1V9GP++j+dHuPajy3Nf6u1Z3mtcz
ZONoL36l3x9Bz46opPJZ7S/4cOxG5lP7kS4uNcKZeDPN17fE4mYurv5+aOon
l1vdOPr/9jMh3qX9TLSeU+NFyhPUuk2NdyGv8SvkNd61MfyfGblhv/n69iiP
DH/W6gokLqG8NovjufjoJU22PPhMlm9+NK5IvbHGnZRHTF5GebU6bxrPtD4w
Ev/U/h7mv0h/D7OjpE+IjlPzRMhrnI16S43vKe+M+J7290CeddT4HuPRvIny
77DzrV5C4nXK08QPYvwaDwkr/X67dXdTfX0Fte8BeTFwzRMpz5q8kvJM7X50
cY2f8J5q3En5v9hpyvM1u473VOItylflPmV+NF/J/Gi+UvuEMM/aD4S4Je+L
5je1nwPxUp7LF8cTXi12gvJneS7lz5q9JDxc7BCrG5T8r/K1dZwa32M+NS6n
vHLikPbeueul86N5beWtE49Vvjw48hrn7NNt4hMdv0zw9bHkPfXFaYVvzj5E
XvPFykdm//O7mkdWnjJ2Jjwyzb83W7UpeGibLF/fVO0/Q5xf+95wnsCb0zqB
gSnbW3c+l+brs4oe1gt59GgdBXXmmhfTvjqsl/ap0/6TWmeifeqQ/7BzcmSn
TV7fD85V7ZPDua399JCHD6X5We1PonwozSdqHyTsjfzXVm/4n3iv7w33Avwy
zYNbfWbsG9faXD9p8to/BzsEnqDWmWi/WcbPumvdhfYboa4GXOsBtG+trqPW
LayPPr+6UdcLjtYjaX8h7Arwzi/XTNmT5NU1sV5aT6X9Ohg/uNZT8d5pfZH2
jQTnfdT6K54X+wqcumWt03h1TpUpKUW8faK8Oa0fAC/RcuV3y9Yc9clrPl37
F2E3gmvenOfS/DvnP/OvfDHNM7IuWl8B70PrK9gPWj+gfX6QR4/WS2i/I84N
7XdEvphzQ+sotJ8w6w5/QesltM8w8lpPy32qdbzYFcj74kXUUWucoUlg+a/z
u/n6CWhdIvcRdo7md5S/o3bg5N7bezQv8OS1HpX7EbtO4ypa16r2m8ZntF5U
7Rz1c5GHN6370/xf8uBSL40/jrzGH2w+xR/nfvfFtaRuVu0T5YNf/Lbg7tVn
fvPx2bGvNL6n9b1qX2l8T3kHakcRN1O7yBdfdfXPybn4eYcyv/lwja9iD2tc
VPkX+l5ofMzsZIl/ah2yxc2kzp94hfIFiDuBazwHPRrfUH6Bxg00XsT6+vJQ
wgsgfg6u+TjlI1jeSvgIPh6x5q2Eb6jnleaztG7f4mMu7osfurjGD/eklcpu
NH6ho3E89vn/x7PWuIfGFZVPh71hfqvkfZRPrf0zwbHrlJencQbkNR5CHIz5
+blnrzkrqh3z8XmV78n8aH8MtVc1j6O8JLVLNY98Yfe53R/P9nh/qsfi8K4d
G3LfyB/uT/f4QWrHar6Je1bzR8pPVPucc0bvd/2uLvo1X6b9E3x2teTltY8E
84BdpHUFyoPDTkOP5q2wczTPWOLZCvuO/ejxYXWcnOfg2I1ah8B4fn/r2Snf
z/dw7Futr1BeLfsWv0zz7/gLmtdW/h3+pvIBuX+Vl4f9gzzrzjjZ51qPwTi1
jkX7sTBvygNVv0bzuR9/NrFTxCWP76l2vubHu/YeXymyS5ajeW3lBas/onlh
5WmyP7XvjfpZ2BXg3OO+fKLwaLAPOX80v4lf+Xf9iJh/9S/Yt8grD13HD865
zXv3d32cYsJKxoef8uoBtB8X8/m/9311YA==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8], EdgeForm[None], 
       Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
            "]], Polygon3DBox[CompressedData["
1:eJxNmXn8j1UWx5/lJ0vLFAo1M/GzZcreYoQoImUnhOzJFiJlCREq00Jpo5mU
9kJNkiiVnSYVqhFqsqQoMlONamo+b+fj9eqP9/e5z33OPffcc85dnudboc+w
9tdlSZIM10+BrmekSZKrnImPdP+C7l8Wfxcfi9qqryvqiBrid6qrJv4kThKr
xBqxWqwUJUWhSMRxln1Ct48l0Qaqij+6/XqxQawTa92mqPi9OEVUEBWt80z0
YrdIxc+6n6yqrbpuEZPoVtcSorj4Vfcf6bogjXExnkvU7mJRTzSxrp6qvyoN
ndg5MgkbsfVZt0fPIjE+jf7ot04S4yhv2/4gPrBP8MX7Yo6YKx4WD4nT0/B5
OVHWdpZwPfdPJ+Ev/HaWqCSqiMruBzu7iZ9s71r7bpPYLJ6zT/tKx3jRWrQS
l4krRCNxkWjq+lYu/9kytFvvWPR2G+pbiMtdRvYC1zGmN0Qz2dJUlLN++mks
molLRU3RwG1o20Q0T2IMjOVIGvHslcQ48OPN1oGuNqJtEj7BN+RhqTRsamFd
LZNo84F9P4F8FgvE8+K5JOJU6DwlXu+Jt8VbzuNC51vmHK7qGJR3zm5ymzWO
Mz5aa99j+0brek286XaVncf0/aLzfb1jhV3Pimds3w1J2F3F/Y50XSXbstk2
rLKP1rg/+mUOdsliPp/hnKqk8nZdP8GOLOYV86uMaJRGHBqKVWKNWCZetk3Y
Rt6ucIyJ9dOipWgh5qUht1gs8RjW4wOxQawTS8U2sV28Kl75TT3tGsmmi0Rv
0SMLX3V3GZ9ttT70bqGd6uaLx8Sraeja4D7Quday69wXcVgiljkej4tnxKPi
kTRsWGrblnjsr9g2xtYyiznM2MnvJZ7Pc6zz35L5j/hB/JKE7awrjTyG5s51
fPu9OCJ+FLvEgSTylLWCdalbFjLIrrZe8oD67vZNK13biNbiCrFQMovEW2KF
uFBUd91C5/5rjuvzjnNDy/F8pesWuj25Tyw6ZjEHrtb1StFJ9MrCtlVuh40X
SKae5+LJ4sMk9pGtjtcWx4O4vCNKk7+6visaqHwbvmYeiGlJ+II8Zo3GJ/VF
Q9FAXEhZz05NQw/tzxcPqN1s1gqV/5bEPfV101hbO2QxL5gP7Gvsby95LrZT
fRVRWrTNYl1m7jAGxnKux8c4q9OfZC4Q54lzs1jL6tmnxLmM7Wvo+TVNzE5j
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
D7EfiQ17CGss7/m8+/8ft+65oA==
            "]], Polygon3DBox[CompressedData["
1:eJwt1nlQV1UUwPH3+/1AQJA9G3GiKBNsKlHBcgUxFFxKUGRRgcAsswEkZAtI
BSzMypmmxTJMLcwxG7eoEBUhBE1AW6gZ02RJXBvLctQo+p6554/P/N7c9969
555377m/oIzs+Cy7ZVkb4YxZNsuag9mYi1jEOFnWTOSjCIXodFjWJVxEH7px
FT/p9WVcQYzN9Cn9RGGaXkvfmchAOlZp/zJOFApkHN7PRBzyUIAFPLsSTyEO
8RhL+1q8jDKMQRbSkYZ8FCOA+Q3HEixCCn6n/Tr+xDlcQwLtcfDDMETiOElq
xQ84hkYU0p6LZ7AUBZaJYTUWIwWleExjkthKkOowc09EAvKRhy76PI9e9KAb
0zVvkqOnkYpTjNOGdnTgJCpoL0YRyrAW95LD+/AgRuABBNGnB/7g/jXcw/VS
2jORhnRkYCGSkYRFSMFqzX0uynWMUYw9BmskBuRgKO3D0Knx+XN9F+/7Y6jG
JLFVaD9vYx0qbWYtyZr6FbtRiw14HbdwB/84TD93436Zk/YpsYQgGA9hJI5i
DybJOkGoxMazwxEAX+1nLn3O0bUWj3m6hvs0hi8wiOe6ef8/DCJvl+WbYb6s
GVmbWKjvrtF5lWu+VuCmzkHm8ga6dEwZO0bWJ2ZjBvG+hWqEYjQ2YTM+xna8
gyu4ih50oRefMU4t9mMvdqGB9iOai8M4hFL95kW671YikLHtsMlc4YN6fV7e
24e9OI86fI7rOIevGGcbqvEl6mRt8H6IfC9y1Y+ZXD+K8XgC0XhEvrXm8ReM
4LlA3KLPZjRZJv5GmQP3t2CrzdSVZNzRexJjveYiCVLTXOCGeIQxv2yMxcMI
RRhjh2OKw9SQULjBBYPhDld4wgNe8MYQ+DPASPjCB36Io8943TsJWIB2Yjyh
32IfTuJ73buyh8/iNN7HCpSjBjtwUPN8Vp89o/eLsUxrT42ud1edry/GY7rW
N6lzsp6iJT/EfQwtaEad1D2bmYPMJQQ3tL60oBYHdNxWm5lLm9xHh83kRfLk
p99RctSoz8g8v7aZdVGmdTBJa3KJrgtfzbGn5vRn3MBf+NthzpcdOkeptUW6
/jvp80eUaN3Yo7nNQbaOK+PLXruptd3Ot7jtMGs8Rvec7NVEbGPem9BnNzX4
Ah7n/XBEIgR+NvPN7XAgGfNQgOewDC9gFYbwrIfkB4FSY/Ee7RdxSceR8bzh
hsG6hrzwJvF8p9+pFa84TJ/Sdy7yUISdWpMO4BPUwJlxnOANd/ho3F4aj7ve
K+b9fI1V+iq0m/M3Fy8iT+uBB7n2RJDWU1lXpTy7XOctfezHNMkXJiASU3WO
MtcO/KbnWgOOoB4HcRhpmIHRSEQq1jGXV1Gl86+Q2kp7OhKQgnjde7J+5Szz
1PxJDBMxSfuV/jfgNZxBJcoRobGm6ZjSd7PG14Rv9IxfTh6eRyoW63ko59Fm
fIAPsV5qJu0D/PbrGSVrLUL/PwToXozCs/SZjRxk6bqpQoWOKWMfwhT6m6pn
9izEyn8j2qPhZDcFLtxuznY5/0YhGE+iitvrUYmXtF4M2Mw7/fz+q2eYs920
y7Wcaz02c9bLPJc4mZo5DkeZy7s4jVNokPqt85E6MxETLNPvbVxAr56RW1Bt
N3tsKz6ym1oVrGd1GNwts+43YjvadA+k6H8PiSEc87Fb1+tOfIpdmIwYxGKc
fvvjms8K/eYtaEcbvsUJXZsylsyvSeuijOtK7C4Sv+QMA5bZO7KvfbVd9tZk
4onENP3PGoH/AZsHV3g=
            "]], Polygon3DBox[CompressedData["
1:eJwt1VlQllUYAODf/0enXZ0BpVi0uxKEVARFxUzUCosE02qmZnJS3BDUmraL
0pw0NXcNMdBS1CwttVyabKb7NqqpbLM9W61Roimbes585+IZlrO/5z3vd+WM
proF6VQqdQu9KMikUuMYy7VU0Y+ftJ3mH87zHp0090ilXmY/L/IaC/iZMxSa
fAADKaDdmPWsZSsttLE7jj3BXGayh2nGTGcQRdRwE9vtaQdbaGEnz2aSPRxg
H0uYH+d8RtsaVtEax7ZTG+cczF/6XeXnFP7jPH/TU79e/Ov37+31O77lB07x
BSO1V1JKBdfFGO4yZ1OMSThjBzvZqq2Nt3mHTjbzXOwTzt7AZPZSb+07mMzN
3M5t5BjTh/xMcnd5ZLM0K5V6jHoKKeBRfrTXrznIYU7GO83lIi5mAIXkc9Qa
xzlLN39ymie1raGBVraxLuRPHLuAObHPal41Zgsn6OJcnLO3vU5kRCaJ4bh4
lsvjWULu5XIF/VlormU8wnJWsiqV5GqI+V000sR9meROuznHL/zGWfrGmORz
GZfSm932tIcj6eTsLTzFMTayOZ2c5Xjs8xL3sjj2CWN3McQaQxlGOcMp4wZt
N1LNJCoYSrG2IgZTQRYZrtFWTlnIwxB//7s6ndzpcEoZQkU8S7jTQ5TqVxLn
/Njf78c3W+nvsYxhNP3IoT8XcCG5vGuNTl7nDd7kLUZbYxQjGUMlI7KSOUfG
Pfckn6pwHm3FFFFCHoOykhwro4lG5secuV5bn3gXtVQzkbuZzlRmMZMZWUmO
hbGzmcu8mJNt9rqXnXSEesG2dFK7Qs6HmBTHPYeYTAtvjDomMYFb+VIOfcpJ
DoX6wikW0cxDPMyD3E814xlGGaMZxQscjDVqHes5FnO7KubqQhZTk0lyMtxp
OblkcwmbnGE5S3kivqmQk4toZEM66bMx5mQza1nJalbwOPXOP5U6+pPDFPbH
M+6Lez7A83T1SHLvmxATfo9v6giv8AEf8lHIN56mnTZ2sJ1W/jDXGX7lM7o5
xyd8zleZpFYfjjEPNb84neR8V3zLoVaXhjdGSTp5I8XxG1Eb33KIVQ4TGJ+V
3N3hWPO3x7sIZ2yI35p7mM0sasgWi36xBoaaNpC8VPJtCt+UeTQyJ469M/YJ
tS7Uxg1sosMaR9nACjaFbwLL7GlJrMl9Y84/wP9gfOJ1
            "]]},
          Annotation[#, "Charting`Private`Tag$41261#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.8], EdgeForm[None], 
       Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxN1XlsVUUUx/Erve9WoBRUtgBaSktFEkOUtayiQNmhtdCqgFhFoEApQots
Ek2QblpKWctWkK0txhAKqFQFBNQoksiasCWUVUSUHRXxezK/P/zjk3vevFnO
nLlvXnTa5KSMGp7nfYUwRAaeVxeNcc/3vL/wN87gDv6BF/K8UzxP4gou4QZ8
2sNQQTya8RmYhDfwOkZgFEYqTlM8FalIwTtI11iLJ2ICxql9vOKzrHFOOVxA
NW7hT/yB67ip2HKrR15beX6KNViL+rQ1RSTqYD9t+3AMJ/AxilGT72ojQIJy
6Bu4OR/VWOuzjb6b0Ii4IRpgJ593+C721W41jNCclkOE6mZ1rsUzXGuV87kM
m9GD9Z5Db8zkuxlor/p0wnpsxGbF5ViJFZiOj7BJ7RbPx2TVdo3GbkAZSrAU
y/Ee5uBDxXNtfeRjBvKQqz6zsUxjl6BYcy5GKVZrrRLFltsUZGqtbuiOLhiA
/uiHl9BTNY/XfjuiHZ4PXB2sfx/VJ0Gx9UlGV805CAM1p7UPw1rVJxtZqkmm
3tshGIpExZbPYLRFZ8XxmtP2uI5z2uK7938BFuvsEjirvuiDjngBHfAieqEn
YhGNlnauaIe26t9Jfd7EWIxGVySiC/JRhBVYoLgQC1GieDhS/tenm8Y+i9Zo
hTg8rRxi1d4CgzAYA9Ecw5Sb5ZmMVAxVnyS8jBF4TWNfxSvqY2OHYBWKkaf+
yRpr+4rXWnGqQxrG4G28pdjqMB4DMA4xeEb5t9F+E7XWes5gGT7BHD6XYjZy
MQ/v4gud1yIsRCGKfPf7tTPd7rt5jqAURxUf1llb/zzdLSVYglzkYL7mrNR9
sk73j82Tr3umQHGO5lml329F4NaqVA52Lx3Hd767rw5gL77BblRhEvuZgnRM
RAYykY3pyEJ/vZNZuktmqg7Z6p+u96pAZzRLY61uOZiGqfhc95vV6gd8jV3K
x+LvfffO2LsdhQka+wHm4n3Fdp/Mw6LAzVmm+7xUd5rdXQGi8CSicZ9xd/EY
cQs0w698vowLOIzTuIazOI/ruIKr+A0XcUl9HmF8TbQO3JwPaavH8xjPo/gF
B/FzyK31lPKJC9z/ZlPUwe+a86Tmv6p8Tim3e9hitUMFvsQuewdRie3YhjKU
q09D5q2PJjikHH7EEe3LctuB3ZpnH/bjW+3X5vwJLRlfpfltrZ2ax/rvxQHl
syfk9vIZz61qj1adY5SD5fwA1YgNXD2t/ud0LnbfJqEQtVTbcDyhvTweuH01
QgOEEIEw9bHY6n9Qc1r+9p9ShALcDrl34KbOrgY8/BtyZ9FE8UPl+R+EXyAV

            "]], Polygon3DBox[CompressedData["
1:eJxFlm2Q11MUx//ld/8ZZjTlBWETeWin2tplvDBje8TEG2pImikpxgush2HQ
aMtWZKKspt3Vg7J2W0a1u2bwokhMWLGloTY9rVBEatnKUvl+nY/x4jO/+7v3
3HPPOffcc+8ld5eNfbB7LpfbKDJRnHK5qeIuMUksVecyUSOqxCtiCe3F4jPJ
fCouz+dyl4m/1P5bHBN/iNYsdFrXF1nInta3XaxXe5i4UdwgSkUv0VOcIy4S
28URcVh8K0qwzzqHprDDtlVjj+3wGta9Tpyt/536toku0VdcIPqI8/n+qXkn
s/i3HYPFGOypwf+dok1k0pcXSZyRDxtt64WiAN09xFnoXp6Fj6XE8lQW/ttG
x86xtMxSYtqSwpZTxLYUW5Yhc5PaN4v+4lLGbO8AMZB9myImE/NJtL/MIv7n
qt2sb1MWcW4UP6vdzf0pvt3FB/z3TjGnJ3vzjnhLrBYbRB354LxYJQoVkwqx
SAwQb6tvbRZyHndcurKIeR9sHiS+Isa2y/atEauZ2yjq0XGM/PK+ej/rid8S
xq3H+orEFvQ0osf6mvHtfdEkPlLfZrFBfGg/1FcpXrdvKfKqhr2vFQ+Rr97T
Mu+z7BgorsxHbhSRl1uzWN9rP4KsbS1j7nJ8Gsx86+mBT87VXeIEsSkUQ/DJ
6xQS2yvEmV4zH3o8/2XninPNazCvBJuKyJNC9Dr2tu3+FH6VMcdzV4pascpn
gFjUi/vIv+liPrJeb4V4VVQ5Zsz5b+6oFHGtQ+9SZF9L4fsgfLJv89T3tHhY
zEnhZz/RF39XMD4PHZZ7QMxGvjNFjnQRv0fxsZFccG49R/8a9sh75TzYKEar
fyQ+vJBi3X7UNdezTeTYFuQdV9eiVvSYVnLKOqvRN4pY+ByPIfbO9+3iY3Lv
E7E/RQ3w2Xc93cl6m8jBzej3WW7h67P9Of8bkHF7naggNrPETHyqZp8W018u
ZjA+Vzyb4sz3pr+cPo+5zrnGuY663jVwVpaTLy3Ysp71Pc/xbqb2DGG/B5Kz
L6rv+hRxt23fEA/HZVsWddb1tkD0d92VzCHvpb5vYrNtLNXYdWILtrmWb8Um
59xIjY3mrAzNhx1e3/0rycXhao8XtyM7inYDetz3hr77srDD649Ah+cOE7eJ
caLdco6v2tPFU2KmeFI8bj3ieTFZTBMTxZ1iqrhX3COm8J2GnP/ribntmsBY
FWfNOopFibhaXIXOicjekY/audBxz0cN9beSO9L/s/MxbjnnfDt54Nq/h7ie
5J7aSkzs/wjiNZz1i4mHa5l170hxl3c41o65OJqizrUx5vu9Nh/jHcwpYD+9
r187P1LcuQX8b2PMtuxmLftjPZ5/q763oLOWvZmLT+3EzLFzXCdgl/fQe3cU
n3uxptd2/RsvLk5xB+/ApyPp/7dKB3N/wy7Haj/2eV+uEdeyP25XkMfOX+fx
DM7aOGJkW/aibx9276HPvo7Nh5/2z2fa+TCN3JlADo9n/x8j/5yHT4hO36li
j9idxVvgR3GQN8HxLGRO8yb5hXHL+Rx+55olfhDfM+/XLN4Q3TirlvU7w2fW
tXQOefZvfmVxnnyu/Gaz7gPiJ3TZpl3ItGNHJ/3+d66+JBaQy64tz+TjDVJI
uxxf3WcbbMvaFG+YBcSvkvle9zA+HMSnA/hs32eicxA1pI7610AO+Wz4bXOc
eK1lPb87mpD1+8L3tGum7xTfV763fhfnpYin47o3i1o1i9oxhDpSjg3um4//
C4npCfazExveS/Fe87vtXZFL4cchapht9XvsBPKL2B/vk+/efcTf8yz/D6R3
tv0=
            "]], Polygon3DBox[CompressedData["
1:eJwt1GtMT3EYwPEj55zKFHPJMFqy2ryxtSJdLLc37lOmRemiEgpdJkIj3XRh
k7vN3DaVmLFRKunKO1Mac9ssazYK9cbmhe+z3/Pis//5/87zuz3P7/wCUvdv
yfGwLCsWDkpcyyrEYVShDkd4cRPXUYlC+U/7ZkQhDjdwiPYirMNaFGAy7dMx
DYswEbPhgQnaJu+WErsEEViGcHhrjAUveOIiLiEfB3EZZShHjawBBbJ2+l/F
NuxGNeKRiAykIwvHiK1EhY4hYx2mvUTWw3MowlCq+TiNapxCDjH7sBfZ2OOY
9/W4g3Mau5L2FbqnaKzCedShFjW4gCv6TmLO4gxWYw1iHJMjGWcGY/phpuZS
8leEo67Zz3Gpme6pEdfQoPt7Qf8+TOHZFz6umS9c8x6FSMQhFts1Z5I7qZXU
ZBJsrWWxzlemeZez00DsfTThHhqRr3mSfOUiD22o1/dP0YpgBCEVIViMX7Zl
/cYIvuMPOmnvRpfuR/b1EO3o0Xe9kltiy1GBKlQjlPYw3VOWzvUWr9GPAbxB
h2PmkbFb0Cx1o38zWtCAu8hgz5muqanUMZ3nefDHfIzTNoavxA7hh20+tg+2
ydEDXWunzvme9l70YBC3UK/zjeEbxuErdZR98zyVXx/HxMjaRm2TN4n3ot0T
czBX4/wwC194/xn/kMhaU5GGFOxwTW4kR5lI05pIvPST9X/EJ13TmNZmWPcp
c8rcj3j25teVvdrmv7TLmptsU3ep/xM8lnidT77RXUhBMpJ0TTuRgGTX5Kcf
A7ituRomdkTrKPX86Zh7KsI133Q0IrU+rp7lYAThL7EB/AZqDaVuy/mNxVa9
66RvKe2nHHNPyH1RqGe8AuUoxknHzBmld+UmbMSQ5F3yiEE9ayd0vGz9TqTv
kO5B9vILo3jJ/trxyjZnW85zIO3+sm4sxAKNk3e1eIc+hDB3jGvucrnT5V6T
b17u3ARswHo578R24LltxpG+B/S+TdK8Z8v9p89Si3jk6r2c55qzlKR92uj/
TNctY7aiyzbzdOs578R/vYHT1Q==
            "]], Polygon3DBox[CompressedData["
1:eJxN099Pz1Ecx/HP+JzvJjFNPwwbRX5tLqwMYzMzFb4VKc3myhXhW2zqAvcU
vv1QKOmrfVPhTj/8+BOQC4wNNxry686P/CrP987L5uLR3n3P+5zzPufzPtn7
qstiU4IgyEcE8/gzE3OQhUzMxU4XBBsQRQl2oFRxMfZgL3ahDBXKsbgcq5GH
ETzCH0wijbXnI5t4oXLysQS5yplwvoZ0zMYs3OO3u5gR8TVPaM1K7FZtFVpz
AS6GQZBEAlfRhTYUMbYNOViBlSgwrFmIImzCRmzBWhzCfhxQzhp8ZM57PMBr
fMAbHGSsGocRQ9V/cy0+ikps1l5TmRPiN7V9wzh+4RW/jeKT83u9xWe8U2x7
jeElXtiZWGu7al6FPJQginWquUA5W1GLOvSiD9fQrziBrog/i509ibO4jg5c
UY7N7dHcpO7K9mpVTjsuoUZ3YmsOcbbb+IJRZFF7hvUNY8Wqzc5Saj2Iy+hE
Gy5oTavhJnOHQz83U3d4Q9+6O/Sx3W0q0jFdsd3tT6QQR/TtHjrfkznWl/jO
/zHU4pjzPVOIGudz0tSTqXBYhCOMncQJ1GluFRLoRD3O4LhynlDDUwyG/izd
6tUWxpoRRxMaNNfiRqx3/m1az3eohxfr7SzFciyz36gpF7eIB9Wr1kun2OM0
zqMVjai3u2RsCHecf2v2Zu+jXW/n3x1OQ2/o1xxQzoju0N7CAGPNaAr9tx7W
GePaqw/96gHLeYbndu7Qz7U7eYxzaFBtca1pOWN6a/aNfuArxu1+OGuLei+q
XorjLwYQoCE=
            "]]},
          Annotation[#, "Charting`Private`Tag$41261#2"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {{}, 
      {GrayLevel[0], 
       Line3DBox[{1161, 1159, 1165, 1225, 1211, 1213, 1227, 1230, 1375, 1377, 
        1380, 1382, 1373, 1371, 1372, 1369, 1370, 1338, 1334, 1344, 1349, 
        1422, 1428, 1429, 1639, 1638, 1635, 1634, 1651, 1652, 1688, 1686, 
        1693, 1707, 1672, 1673, 1660, 1659, 1665, 1584, 1582, 1544, 1536, 
        1538, 1561, 1557, 1559, 1560, 1551, 1479, 1475, 1477, 1470, 1471, 
        1282, 1261, 1262, 1265, 1263, 1210, 1209, 1172, 1161}]}}},
    VertexNormals->CompressedData["
1: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
z/q2qmm3DCZEsQXkMbCPZLcPLJTg+l0fLMZNXmVCduLTbq0hgNMrwuw+YX7i
jy6XXnq+l1biu5ucuP4qD8OaGYducv21UsHSc7ZUKc8NP+P58J9b3peCOuvQ
yc6JY9hfYhOb7RUa2kF36ruHDfLnrjU5mxLmaSAnUOhXntIKafMtK3/g+oOP
9nLs6e0D7xseGzTmG0F7Gbd/CPbFOodj4ZkvqcDZn9MXhvkJevDlxTnZPgKC
g06vMT9lLCGPu68ok4hHY7VxeF7FX/d+UdhOgZZ/d372IK5EGwh+UcF9MQpE
V2Th+mtYinsUd1FA8bTA8604LstdQXuE8cOpTU/1ET8WlBlj1EgKeaoz9F0H
53+t/cBxcun+PctRbylcf1LvNuZBHwb82PFu07Hpaojx/fV0HMer72kF3Jug
g3bijeqUxUZQ3O+9Owzzfy9be4AvngZijQ30halq4KsfKujs7SOqKvFeaXg9
jRV7+OlsTfCpCXQ+fBsiK8ZmtTiX1YAOvfn7T6zryr6LCatGBolyFd+AzEQ1
7AocNVy39Ht5E8nXqpaD5NfjqFP78HozNS/vRo0ApB8jch3PBsj5MVnjEMSL
3OawVj3ErZztyQ5vkwaJyUFrl1SWJuBMevA5+7oyoci5HNmPPL984OWD4OoO
+JoemjNnrUz6FfYuuHMMkEP65pTAynaQ+OaW2jAA8KNt6rWBPZP8eaFu4sYA
WGeuGGmLdd3z/b/ErQ8ZZBlfZ4kY9q+JWig7F1sXxA5GFDmj/92t4NmyDOvp
nKu2hWVNO0R0CjstPRfH8/JZt+6l3wW/qVwZqNcCA3xWVj/mUKdcCUiJGq2G
GWOTW7qXlcmVq6fhJu7L75PX8lk8j7VeIsFpuG9xubM1H3Ges6IqTN6l5z9q
FKglnamHxWKkRhy/2JJgvfdUPRgVvKScwX2fsDXabYj6i//Zj5TVZ1qgp+5U
uTXitLz5yuE1ecOE8+7Gf5O4T39p600a2C8XGmy54zyGiVZfnUno0v0MkxO7
DuG+D1frLN7C8xrYnqrSPwFwc5eZ9GXkF3OHhJUxVwaJ3U37R8cRN9UnLu7e
gdcV3vJP0BDxXLLR6tf4FPLFyVXHwjFvTtLf5tSRty8eSEpJxPj+3baus4j/
+gX62myoR764szxemufq559nHbOxn4a92G1RLzDC9c26kOfU9zS+2oF4a/ws
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
3+YoDxdBikNyHxOaNx1zcyX3+T8PoH76
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{348.7219357777839, 353.85145026852047`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.2718234690306114`, -2.8327759166817823`, 1.3445615156959634`},
  ViewVertical->{0.08489364755252819, -0.20510395260083192`, 
   0.9750515049128138}]], "Output",
 CellChangeTimes->{{3.8779646936029105`*^9, 3.877964726758046*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"664600ff-081c-4fc0-95ef-83d7ab1557a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"], "+", 
       SuperscriptBox["z", "2"]}], "==", "1"}], ",", 
     RowBox[{"z", "==", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.8776776129109106`*^9, 3.877677686414728*^9}, {
   3.8776811173455048`*^9, 3.8776811647507415`*^9}, {3.8776812591169205`*^9, 
   3.877681267790202*^9}, {3.8776813295441103`*^9, 3.8776813416098814`*^9}, {
   3.8776814359343777`*^9, 3.877681494366418*^9}, {3.8776815425801353`*^9, 
   3.8776816175583725`*^9}, {3.8776817993537073`*^9, 3.877681937803279*^9}, {
   3.8776829370508013`*^9, 3.877682941907839*^9}, {3.877682977097623*^9, 
   3.877683049340662*^9}, {3.877683080910909*^9, 3.877683107644121*^9}, {
   3.8776831539316387`*^9, 3.877683195497588*^9}, {3.877683232790169*^9, 
   3.8776832654072995`*^9}, {3.877683354488125*^9, 3.8776834038804274`*^9}, 
   3.877683900323284*^9, {3.877684215314661*^9, 3.8776842683805428`*^9}, {
   3.8776844795199594`*^9, 3.8776844888566976`*^9}, {3.8776847305328674`*^9, 
   3.877684737026169*^9}, {3.8776937190431576`*^9, 3.877693744797935*^9}, {
   3.8776938185225286`*^9, 3.87769382974337*^9}, {3.877694282655814*^9, 
   3.8776943046279607`*^9}, {3.8776943389743156`*^9, 
   3.8776943570287304`*^9}, {3.8779645292490187`*^9, 3.877964552913065*^9}, {
   3.877964599955701*^9, 3.8779646222490325`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"b237fc40-6f1f-443f-96d9-626c81bef2f5"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.877964455402214*^9, 3.8779644749410996`*^9}, {
  3.877964538993531*^9, 3.877964553964511*^9}, {3.8779646042843847`*^9, 
  3.87796462369725*^9}},
 CellLabel->"Out[73]=",ExpressionUUID->"a260bed1-79f7-4cc3-b6cc-8dfc8ee617b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"], "+", 
       SuperscriptBox["z", "2"]}], "==", "1"}], ",", 
     RowBox[{"z", "==", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.8776776129109106`*^9, 3.877677686414728*^9}, {
   3.8776811173455048`*^9, 3.8776811647507415`*^9}, {3.8776812591169205`*^9, 
   3.877681267790202*^9}, {3.8776813295441103`*^9, 3.8776813416098814`*^9}, {
   3.8776814359343777`*^9, 3.877681494366418*^9}, {3.8776815425801353`*^9, 
   3.8776816175583725`*^9}, {3.8776817993537073`*^9, 3.877681937803279*^9}, {
   3.8776829370508013`*^9, 3.877682941907839*^9}, {3.877682977097623*^9, 
   3.877683049340662*^9}, {3.877683080910909*^9, 3.877683107644121*^9}, {
   3.8776831539316387`*^9, 3.877683195497588*^9}, {3.877683232790169*^9, 
   3.8776832654072995`*^9}, {3.877683354488125*^9, 3.8776834038804274`*^9}, 
   3.877683900323284*^9, {3.877684215314661*^9, 3.8776842683805428`*^9}, {
   3.8776844795199594`*^9, 3.8776844888566976`*^9}, {3.8776847305328674`*^9, 
   3.877684737026169*^9}, {3.8776937190431576`*^9, 3.877693744797935*^9}, {
   3.8776938185225286`*^9, 3.87769382974337*^9}, {3.877694282655814*^9, 
   3.8776943046279607`*^9}, {3.8776943389743156`*^9, 
   3.8776943570287304`*^9}, {3.8779645292490187`*^9, 3.877964552913065*^9}, {
   3.877964599955701*^9, 3.8779646297481318`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"572e1a06-a97c-44b8-b351-2c2af1c9c390"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"\:65b9\:7a0b\:53ef\:80fd\:65e0\:6cd5\:7ed9\:51fa\:6240\:6709 \\\" solve \
\\\" \:53d8\:91cf\:7684\:89e3.\"", 2, 74, 15, 17806355529316371155, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.877964630733554*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[74]:=",ExpressionUUID->"2b05dfee-1941-4249-8fa8-\
50dd19ee0ebb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "\[Rule]", 
      TemplateBox[{
        RowBox[{"-", 
          SqrtBox[
           RowBox[{
             FractionBox[
              SqrtBox["5"], "2"], "+", 
             RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "1"}], "-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["x", "2"]}]}], ")"}]}]}]]}], 
        InterpretationBox[
         DynamicModuleBox[{Typeset`open = False}, 
          TemplateBox[{"Expression", 
            StyleBox[
             TagBox[
              TooltipBox["\"condition\"", 
               TagBox[
                RowBox[{
                  RowBox[{"-", 
                    SqrtBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], "\[LessEqual]", "x", 
                  "\[LessEqual]", 
                  SqrtBox[
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], Short[#, 7]& ]], Annotation[#, 
               Short[
                
                Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                  Rational[1, 2], LessEqual, $CellContext`x, 
                 LessEqual, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                 Rational[1, 2]], 7], "Tooltip"]& ], "IconizedCustomName", 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["Inequality", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Byte count: \"", "IconizedLabel"], 
                 "\[InvisibleSpace]", 
                 TagBox["1000", "IconizedItem"]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            Dynamic[Typeset`open]}, "IconizedObject"]], 
         Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2], 
          LessEqual, $CellContext`x, 
          LessEqual, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2]],
          SelectWithContents -> True, Selectable -> False]},
       "ConditionalExpression"]}], ",", 
     RowBox[{"z", "\[Rule]", 
      TemplateBox[{
        RowBox[{
          FractionBox[
           SqrtBox["5"], "2"], "+", 
          SuperscriptBox["x", "2"], "+", 
          RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"2", " ", 
                  SuperscriptBox["x", "2"]}]}], ")"}]}]}], 
        InterpretationBox[
         DynamicModuleBox[{Typeset`open = False}, 
          TemplateBox[{"Expression", 
            StyleBox[
             TagBox[
              TooltipBox["\"condition\"", 
               TagBox[
                RowBox[{
                  RowBox[{"-", 
                    SqrtBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], "\[LessEqual]", "x", 
                  "\[LessEqual]", 
                  SqrtBox[
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], Short[#, 7]& ]], Annotation[#, 
               Short[
                
                Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                  Rational[1, 2], LessEqual, $CellContext`x, 
                 LessEqual, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                 Rational[1, 2]], 7], "Tooltip"]& ], "IconizedCustomName", 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["Inequality", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Byte count: \"", "IconizedLabel"], 
                 "\[InvisibleSpace]", 
                 TagBox["1000", "IconizedItem"]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            Dynamic[Typeset`open]}, "IconizedObject"]], 
         Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2], 
          LessEqual, $CellContext`x, 
          LessEqual, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2]],
          SelectWithContents -> True, Selectable -> False]},
       "ConditionalExpression"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "\[Rule]", 
      TemplateBox[{
        SqrtBox[
         RowBox[{
           FractionBox[
            SqrtBox["5"], "2"], "+", 
           RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"2", " ", 
                   SuperscriptBox["x", "2"]}]}], ")"}]}]}]], 
        InterpretationBox[
         DynamicModuleBox[{Typeset`open = False}, 
          TemplateBox[{"Expression", 
            StyleBox[
             TagBox[
              TooltipBox["\"condition\"", 
               TagBox[
                RowBox[{
                  RowBox[{"-", 
                    SqrtBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], "\[LessEqual]", "x", 
                  "\[LessEqual]", 
                  SqrtBox[
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], Short[#, 7]& ]], Annotation[#, 
               Short[
                
                Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                  Rational[1, 2], LessEqual, $CellContext`x, 
                 LessEqual, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                 Rational[1, 2]], 7], "Tooltip"]& ], "IconizedCustomName", 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["Inequality", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Byte count: \"", "IconizedLabel"], 
                 "\[InvisibleSpace]", 
                 TagBox["1000", "IconizedItem"]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            Dynamic[Typeset`open]}, "IconizedObject"]], 
         Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2], 
          LessEqual, $CellContext`x, 
          LessEqual, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2]],
          SelectWithContents -> True, Selectable -> False]},
       "ConditionalExpression"]}], ",", 
     RowBox[{"z", "\[Rule]", 
      TemplateBox[{
        RowBox[{
          FractionBox[
           SqrtBox["5"], "2"], "+", 
          SuperscriptBox["x", "2"], "+", 
          RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"2", " ", 
                  SuperscriptBox["x", "2"]}]}], ")"}]}]}], 
        InterpretationBox[
         DynamicModuleBox[{Typeset`open = False}, 
          TemplateBox[{"Expression", 
            StyleBox[
             TagBox[
              TooltipBox["\"condition\"", 
               TagBox[
                RowBox[{
                  RowBox[{"-", 
                    SqrtBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], "\[LessEqual]", "x", 
                  "\[LessEqual]", 
                  SqrtBox[
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], Short[#, 7]& ]], Annotation[#, 
               Short[
                
                Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                  Rational[1, 2], LessEqual, $CellContext`x, 
                 LessEqual, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                 Rational[1, 2]], 7], "Tooltip"]& ], "IconizedCustomName", 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["Inequality", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Byte count: \"", "IconizedLabel"], 
                 "\[InvisibleSpace]", 
                 TagBox["1000", "IconizedItem"]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            Dynamic[Typeset`open]}, "IconizedObject"]], 
         Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2], 
          LessEqual, $CellContext`x, 
          LessEqual, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2]],
          SelectWithContents -> True, Selectable -> False]},
       "ConditionalExpression"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8779646307744455`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"505a127d-f543-4ca0-967a-6c21c28d1dd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"], "+", 
       SuperscriptBox["z", "2"]}], "==", "1"}], ",", 
     RowBox[{"z", "==", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "z"}], "}"}], ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.8776776129109106`*^9, 3.877677686414728*^9}, {
   3.8776811173455048`*^9, 3.8776811647507415`*^9}, {3.8776812591169205`*^9, 
   3.877681267790202*^9}, {3.8776813295441103`*^9, 3.8776813416098814`*^9}, {
   3.8776814359343777`*^9, 3.877681494366418*^9}, {3.8776815425801353`*^9, 
   3.8776816175583725`*^9}, {3.8776817993537073`*^9, 3.877681937803279*^9}, {
   3.8776829370508013`*^9, 3.877682941907839*^9}, {3.877682977097623*^9, 
   3.877683049340662*^9}, {3.877683080910909*^9, 3.877683107644121*^9}, {
   3.8776831539316387`*^9, 3.877683195497588*^9}, {3.877683232790169*^9, 
   3.8776832654072995`*^9}, {3.877683354488125*^9, 3.8776834038804274`*^9}, 
   3.877683900323284*^9, {3.877684215314661*^9, 3.8776842683805428`*^9}, {
   3.8776844795199594`*^9, 3.8776844888566976`*^9}, {3.8776847305328674`*^9, 
   3.877684737026169*^9}, {3.8776937190431576`*^9, 3.877693744797935*^9}, {
   3.8776938185225286`*^9, 3.87769382974337*^9}, {3.877694282655814*^9, 
   3.8776943046279607`*^9}, {3.8776943389743156`*^9, 
   3.8776943570287304`*^9}, {3.8779645292490187`*^9, 3.877964552913065*^9}, {
   3.877964599955701*^9, 3.8779646417677717`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"284494aa-3831-46a8-9a64-3279189e8318"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "\[Rule]", 
      TemplateBox[{
        RowBox[{"-", 
          SqrtBox[
           RowBox[{
             FractionBox[
              SqrtBox["5"], "2"], "+", 
             RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "1"}], "-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["x", "2"]}]}], ")"}]}]}]]}], 
        InterpretationBox[
         DynamicModuleBox[{Typeset`open = False}, 
          TemplateBox[{"Expression", 
            StyleBox[
             TagBox[
              TooltipBox["\"condition\"", 
               TagBox[
                RowBox[{
                  RowBox[{"-", 
                    SqrtBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], "<", "x", "<", 
                  SqrtBox[
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], Short[#, 7]& ]], Annotation[#, 
               Short[
                
                Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                  Rational[1, 2], Less, $CellContext`x, 
                 Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                 Rational[1, 2]], 7], "Tooltip"]& ], "IconizedCustomName", 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["Inequality", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Byte count: \"", "IconizedLabel"], 
                 "\[InvisibleSpace]", 
                 TagBox["1000", "IconizedItem"]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            Dynamic[Typeset`open]}, "IconizedObject"]], 
         Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2], 
          Less, $CellContext`x, 
          Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2]], 
         SelectWithContents -> True, Selectable -> False]},
       "ConditionalExpression"]}], ",", 
     RowBox[{"z", "\[Rule]", 
      TemplateBox[{
        RowBox[{
          FractionBox[
           SqrtBox["5"], "2"], "+", 
          SuperscriptBox["x", "2"], "+", 
          RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"2", " ", 
                  SuperscriptBox["x", "2"]}]}], ")"}]}]}], 
        InterpretationBox[
         DynamicModuleBox[{Typeset`open = False}, 
          TemplateBox[{"Expression", 
            StyleBox[
             TagBox[
              TooltipBox["\"condition\"", 
               TagBox[
                RowBox[{
                  RowBox[{"-", 
                    SqrtBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], "<", "x", "<", 
                  SqrtBox[
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], Short[#, 7]& ]], Annotation[#, 
               Short[
                
                Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                  Rational[1, 2], Less, $CellContext`x, 
                 Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                 Rational[1, 2]], 7], "Tooltip"]& ], "IconizedCustomName", 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["Inequality", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Byte count: \"", "IconizedLabel"], 
                 "\[InvisibleSpace]", 
                 TagBox["1000", "IconizedItem"]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            Dynamic[Typeset`open]}, "IconizedObject"]], 
         Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2], 
          Less, $CellContext`x, 
          Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2]], 
         SelectWithContents -> True, Selectable -> False]},
       "ConditionalExpression"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "\[Rule]", 
      TemplateBox[{
        SqrtBox[
         RowBox[{
           FractionBox[
            SqrtBox["5"], "2"], "+", 
           RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"2", " ", 
                   SuperscriptBox["x", "2"]}]}], ")"}]}]}]], 
        InterpretationBox[
         DynamicModuleBox[{Typeset`open = False}, 
          TemplateBox[{"Expression", 
            StyleBox[
             TagBox[
              TooltipBox["\"condition\"", 
               TagBox[
                RowBox[{
                  RowBox[{"-", 
                    SqrtBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], "<", "x", "<", 
                  SqrtBox[
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], Short[#, 7]& ]], Annotation[#, 
               Short[
                
                Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                  Rational[1, 2], Less, $CellContext`x, 
                 Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                 Rational[1, 2]], 7], "Tooltip"]& ], "IconizedCustomName", 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["Inequality", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Byte count: \"", "IconizedLabel"], 
                 "\[InvisibleSpace]", 
                 TagBox["1000", "IconizedItem"]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            Dynamic[Typeset`open]}, "IconizedObject"]], 
         Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2], 
          Less, $CellContext`x, 
          Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2]], 
         SelectWithContents -> True, Selectable -> False]},
       "ConditionalExpression"]}], ",", 
     RowBox[{"z", "\[Rule]", 
      TemplateBox[{
        RowBox[{
          FractionBox[
           SqrtBox["5"], "2"], "+", 
          SuperscriptBox["x", "2"], "+", 
          RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"2", " ", 
                  SuperscriptBox["x", "2"]}]}], ")"}]}]}], 
        InterpretationBox[
         DynamicModuleBox[{Typeset`open = False}, 
          TemplateBox[{"Expression", 
            StyleBox[
             TagBox[
              TooltipBox["\"condition\"", 
               TagBox[
                RowBox[{
                  RowBox[{"-", 
                    SqrtBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], "<", "x", "<", 
                  SqrtBox[
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], Short[#, 7]& ]], Annotation[#, 
               Short[
                
                Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                  Rational[1, 2], Less, $CellContext`x, 
                 Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                 Rational[1, 2]], 7], "Tooltip"]& ], "IconizedCustomName", 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["Inequality", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Byte count: \"", "IconizedLabel"], 
                 "\[InvisibleSpace]", 
                 TagBox["1000", "IconizedItem"]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            Dynamic[Typeset`open]}, "IconizedObject"]], 
         Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2], 
          Less, $CellContext`x, 
          Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2]], 
         SelectWithContents -> True, Selectable -> False]},
       "ConditionalExpression"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877964642745373*^9, 3.877964782956211*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"6e473394-98f6-4fb5-9389-d980f189ec2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"curve", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "/.", "%"}]}]], "Input",
 CellChangeTimes->{{3.8779647903857303`*^9, 3.87796480761633*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"d0a1e188-3165-4d29-a77c-af3b58d2c8b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     TemplateBox[{
       RowBox[{"-", 
         SqrtBox[
          RowBox[{
            FractionBox[
             SqrtBox["5"], "2"], "+", 
            RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "1"}], "-", 
                  RowBox[{"2", " ", 
                    SuperscriptBox["x", "2"]}]}], ")"}]}]}]]}], 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"Expression", 
           StyleBox[
            TagBox[
             TooltipBox["\"condition\"", 
              TagBox[
               RowBox[{
                 RowBox[{"-", 
                   SqrtBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], "<", "x", "<", 
                 SqrtBox[
                  RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], Short[#, 7]& ]], Annotation[#, 
              Short[
               
               Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                 Rational[1, 2], Less, $CellContext`x, 
                Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                Rational[1, 2]], 7], "Tooltip"]& ], "IconizedCustomName", 
            StripOnInput -> False], 
           GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["Inequality", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["1000", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           Dynamic[Typeset`open]}, "IconizedObject"]], 
        Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2], 
         Less, $CellContext`x, Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
         Rational[1, 2]], SelectWithContents -> True, Selectable -> False]},
      "ConditionalExpression"], ",", 
     TemplateBox[{
       RowBox[{
         FractionBox[
          SqrtBox["5"], "2"], "+", 
         SuperscriptBox["x", "2"], "+", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", "1"}], "-", 
               RowBox[{"2", " ", 
                 SuperscriptBox["x", "2"]}]}], ")"}]}]}], 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"Expression", 
           StyleBox[
            TagBox[
             TooltipBox["\"condition\"", 
              TagBox[
               RowBox[{
                 RowBox[{"-", 
                   SqrtBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], "<", "x", "<", 
                 SqrtBox[
                  RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], Short[#, 7]& ]], Annotation[#, 
              Short[
               
               Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                 Rational[1, 2], Less, $CellContext`x, 
                Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                Rational[1, 2]], 7], "Tooltip"]& ], "IconizedCustomName", 
            StripOnInput -> False], 
           GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["Inequality", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["1000", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           Dynamic[Typeset`open]}, "IconizedObject"]], 
        Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2], 
         Less, $CellContext`x, Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
         Rational[1, 2]], SelectWithContents -> True, Selectable -> False]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     TemplateBox[{
       SqrtBox[
        RowBox[{
          FractionBox[
           SqrtBox["5"], "2"], "+", 
          RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"2", " ", 
                  SuperscriptBox["x", "2"]}]}], ")"}]}]}]], 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"Expression", 
           StyleBox[
            TagBox[
             TooltipBox["\"condition\"", 
              TagBox[
               RowBox[{
                 RowBox[{"-", 
                   SqrtBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], "<", "x", "<", 
                 SqrtBox[
                  RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], Short[#, 7]& ]], Annotation[#, 
              Short[
               
               Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                 Rational[1, 2], Less, $CellContext`x, 
                Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                Rational[1, 2]], 7], "Tooltip"]& ], "IconizedCustomName", 
            StripOnInput -> False], 
           GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["Inequality", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["1000", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           Dynamic[Typeset`open]}, "IconizedObject"]], 
        Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2], 
         Less, $CellContext`x, Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
         Rational[1, 2]], SelectWithContents -> True, Selectable -> False]},
      "ConditionalExpression"], ",", 
     TemplateBox[{
       RowBox[{
         FractionBox[
          SqrtBox["5"], "2"], "+", 
         SuperscriptBox["x", "2"], "+", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", "1"}], "-", 
               RowBox[{"2", " ", 
                 SuperscriptBox["x", "2"]}]}], ")"}]}]}], 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"Expression", 
           StyleBox[
            TagBox[
             TooltipBox["\"condition\"", 
              TagBox[
               RowBox[{
                 RowBox[{"-", 
                   SqrtBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], "<", "x", "<", 
                 SqrtBox[
                  RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["5"]}], ")"}]}]]}], Short[#, 7]& ]], Annotation[#, 
              Short[
               
               Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                 Rational[1, 2], Less, $CellContext`x, 
                Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
                Rational[1, 2]], 7], "Tooltip"]& ], "IconizedCustomName", 
            StripOnInput -> False], 
           GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["Inequality", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["1000", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           Dynamic[Typeset`open]}, "IconizedObject"]], 
        Inequality[-(Rational[1, 2] (-1 + 5^Rational[1, 2]))^Rational[1, 2], 
         Less, $CellContext`x, Less, (Rational[1, 2] (-1 + 5^Rational[1, 2]))^
         Rational[1, 2]], SelectWithContents -> True, Selectable -> False]},
      "ConditionalExpression"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8779648089078465`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"a8a4bb53-526a-4d3f-bce0-6f85c22daae8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{"curve", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877964815041095*^9, 3.877964835379628*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"a97f0154-7686-4c5b-9857-3f0283529abc"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1:eJxN1Hs0lGkcB/DB4LDKpY1msa0RuczOlJ2oUT0d0nYR5ahmTlJ0sbG7lZOE
OEStVGemZI8yodCOy8wIsePSE5OotTRoJMKMmbxvu+4NS7ftj87z9Mfzz+d8
z+993vN+359D+LGgw/oUCsX30zH4dLxDjVLnl5OQ3mRSGlwQC3eQLK/xR8Ng
9/kI2hidhCdkXvIadj7y45JWqcqehNmNebusZXdg4GfPULpueraEhMX5zh0z
90tRvvBDRn/rIhJy/h0Jv/JOirw3YLtJuQkJ7Q6vzQu5XAl3fnafcUV4ko6A
dS/ux59cKUNext9d768i4Jvasut7mxvQnCDLo/TzAgKKRROZBveakf93NSEd
AgJybh1J1D5+grz9KUNRKhiBlZpv1rwQKpAXLBygZateweSDX2WxyG7kwq0r
o7suaKG5t+9owMde5Gd/DjvtukUDV9GnIlMbXyJPMCiJjR5Vw5g1NwWBV4eQ
hyV3LFOKVDBQrjYVv1Yhz2rQZgsjhyD3NvfAP+bDyGsHXczK6ANQFb4rjOmk
Qe5oscEnOLcPHgpPWONorEVe4ZYeqR5+DgOz3Hgj/dgHm+9+5+mphB53BcKc
q6+QaxlZHrC6C3bEd0V7Oo0gt0wq9mTqKeC5sO+jVoixMzzHGUXTbdC3qzG/
x4ZAnrpx9KnsdAt0uvW7/dlT2BcHSwQ8myaYpGeT6AWxV8w0m7cuq4U/+obY
Zk1i94kOicqtrIK1wPT6e0MSeVGf9jKZJoE14mGdcDF2N/35yqi9hXB17Jgh
uRT7vp12VX0Hr0FK0Q8Ua2fsyd0u3bbydfBEs0zk7IJdZprwrCkmE9DkFq5+
X+QfV+7fePdCIXjL+2mf/Iv5q9R636ZwpUCnrKNmf40973jow3U1VSBx2jtn
8ov7O07UzXGaZIC1tIrJmsbvu6Wg9+8AbhN4mLiXyanH7rfdykB3rwVM8HPM
FNHY+ft7klfUtAFLq5uKEDvsLQH2C3ZYKcA2Fo9lW4K/16jD4qTOG12gVHqt
3NEde8xJ9zC+tRKc6rQ1Dr2B+9DTbxF0pPU5eM+hcqo0uD8H4taOGPv3AamH
21/jDtjl7l4ZcsMB4H8nbUzHwv10NqknCjcPAS+Bx4NZBu6zfX2Un2G6CjxP
Dk98YqpGTpnXL45Wq8Gxex8De3Lx/zK7syG02UkDUrqp65c4DCDvY++3dUrT
gvWiHECzeoH30h4LS3r/KyAJpbKN9J4hfxgzz848MwL6pnTtc0adaF/Rrmm4
VHsCuCRGRB6StKH8h3OZDMpJAsjrTgkO3m5BeU2sD+XdEwKM75uufrOgEfeN
zdTVDhFgnv6h7cEw3kvKCdrruBkC2J1NC+id+hPtsTeDwX+QbwmQYihyT7tU
g/KLOviHeHokOGPESnExr0bP3SE2HFxtRgLZtl9mabIKNOdX4QahyJIEjS+Z
eoHt5Sh/6WICb4kNCS6xqUr+JjHykvhq63Q7EkhT3/f4uYuQPz462TXrQAKR
39zCi7dvISe4jCsRy0nAzWDuefRbOvL8dRUNU598q9RfsjkvDt3nfzT5co0=

       "]]},
     Annotation[#, "Charting`Private`Tag$42554#1"]& ], 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1:eJxN1GlQU1cYBuCwBAaqsljBFKglCLKkidIIgstxQKwLAjqoyYgouFVoq2YE
VAzDpkXEIbJ0UKIgi42yRAGhYfEIMbKUihEMYhBIIOZeW3YjBQXLD+ccf5w/
z7zz3XPnvvezDz+x64g+hULxnT8G82dtqFHSzAoS0ptMSoILY0AQyfIcfTII
9lw8Rhuhk/CUxFNaw85HfrK8RayyI2FOY95uK8ltEPjZUxUum18sJeGdfKeO
9w9LUL5oLrW3ZTEJvf/Vhl/9KEbeE7DD5J4JCW2PrMsLuVIJdn52n1F5eJyO
gHWvHp47vUqCvDR9T72/ioDvakuv7ZM1oDm7LI7TLwoIWCYayzR4IEP+X0Zs
CgQE9L51lK9pbUP+9BlDXiLQwsqhb7xeCeXICxf10XJUb2D8oa+yWWQXcuG2
VbzOSxpottZ3OOBTD/LEn8POuGwdgqvpExFJja+RxxrcjeENq2GU1w1BYMYA
8rD4juUKkQoGStWmZW9VyLMbNDnCiAHIKeAc/MdsEHltv/OCUnofVIXvDmM6
DiF3MN/oE3xTCQ+Hx3o5GGuQV7imRKgHX8LAbFeuthd7v+z+dx4eCuh+XyDM
zXiDXMPIdofVnbDjXCfPw1GL3CLujgdTTw4vhH0fubIMO8NjlFE82Q59Oxvz
u60J5Embhp9JzjRDx1u/2yVGY18SXC7gWjfBOD1rvifEXvFeZtayvBb+6Bti
kz2O3YcXEnmzsgrWAtNrs1QSebFSc4VMLoc1ZYM64RLsrvozlZH7iuCamBEq
uQz7/p22VcpDWZBS/APFygl7fJdzl410PTwlk4icnLFLTGNfNEVlAprU3MXv
i3xr5YFN9y8VgQ/cn/ZLv5i/Wq33bQJHDHSKOsOcr7HnnQx9vL6mCvAn1+aO
f3F/h7G6ae8mCWAtq2KyJvH7bi3s+TuA0wQe8/cxveux++2wNNA9aAZj6bkL
5Dzs6Qe641fWtAMLyxvyEFvszQF2C4Ms5WA7i8uyuYu/17D9krjn1ztBiTjr
noMb9qjTbmHpVgoQ/dzGOPQ67kN3r/muoy0vway3oXfVEO7PwbPrtMb+SiB2
d/1r1B671M0zVUrtA/63k0d0LNxPJ5N6omjLAPAUuD+aYuA+29VH+lFTVOBl
fDi/zVSNnDKjf4enVoMTDz4Fdt/E/8vUzoZQ2XzvE7oMNyy170OuZB+wcUzW
gA2iXECzfIX30l5zC3rvG1Aeasg20nuB/HHUDDvzvBYoJ3RPp42eo31Fyxri
GNoRwJl/LOJweTvKz13IZFBOE0BaFy04VNCM8kMxPpSPbQQY3T9Z/W5hI+4b
m6mrHSDADH2u/dEg3kuKMdrbs+8JYJuYHNAz8SfaY+/6g/8gPxAggSpyS06r
QfnFHemHuXokOG/ESnA2q0bPDSqj9q9ZQALJ9l+maJIKNOdX4UahyIIEja+Z
eoFP76F82uVY7lJrEqSxDRXpm8uQ3z1XbZViSwJx0my3n5sIeevx8c4pexKI
/KYXXS64hZzgMK4eW0ECTipz75PfUpDnr69omJj3bWL/8i15Z9F9/gddUlEN

       "]]},
     Annotation[#, "Charting`Private`Tag$42554#1"]& ]}, {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-0.7861301955298993, 0.7861264901165903}, {-0.7861512465880606,
    0.7861512465880606}, {0.6180339887498948, 0.618033988749895}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.877964836573349*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"ebed764b-05a2-40b5-8842-15d1554d70bc"]
}, Open  ]],

Cell["\:5982\:679c\:76f4\:63a5\:5316\:7b80\:4e24\:4e2a\:65b9\:7a0b", "Text",
 CellChangeTimes->{{3.8779648623236313`*^9, 
  3.8779648827627745`*^9}},ExpressionUUID->"6280b5dc-d73c-4c62-a262-\
dde033a97908"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["z", "2"], "+", "z", "-", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8776948688608384`*^9, 3.877694932961096*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"ef989a07-070a-48ad-b97e-57727c4d31ae"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$326521#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-1.2499992664462392`, 10.99999914285716}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.877693878123354*^9, 3.877694934658803*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"8e469d08-364b-49e3-b82b-54baa846af4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"], "+", 
       SuperscriptBox["z", "2"]}], "==", "1"}], ",", 
     RowBox[{"z", "==", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "z"}], "}"}], ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.8779649507513647`*^9, 3.8779649525869784`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"299d11d1-2f6c-4c83-bf9f-30d9e66607ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SqrtBox[
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["5"]}], ")"}]}]]}], "\[LessEqual]", "x", "\[LessEqual]", 
   SqrtBox[
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox["5"]}], ")"}]}]]}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"y", "\[Equal]", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        FractionBox[
         SqrtBox["5"], "2"], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["x", "2"]}]}], ")"}]}]}]]}]}], "||", 
    RowBox[{"y", "\[Equal]", 
     SqrtBox[
      RowBox[{
       FractionBox[
        SqrtBox["5"], "2"], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}]]}]}], ")"}], "&&", 
  RowBox[{"z", "\[Equal]", 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}]}]}]], "Output",
 CellChangeTimes->{3.8779649538006244`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"d2888db6-1918-49f3-b1ff-e5906a2dc35e"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949, 467},
WindowMargins->{{325.5, Automatic}, {Automatic, 48}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (2022\:5e746\:670816\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8a3a66bf-9b3a-4d03-b452-b54f3a68cfa3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 145, 3, 98, "Title",ExpressionUUID->"b1232054-d063-40c6-b3ac-c11104e55e50"],
Cell[CellGroupData[{
Cell[750, 29, 931, 27, 45, "Input",ExpressionUUID->"cfc7090f-27a3-48ae-8f1f-30831604b99e"],
Cell[1684, 58, 85455, 1426, 370, "Output",ExpressionUUID->"664600ff-081c-4fc0-95ef-83d7ab1557a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87176, 1489, 1698, 32, 45, "Input",ExpressionUUID->"b237fc40-6f1f-443f-96d9-626c81bef2f5"],
Cell[88877, 1523, 291, 5, 32, "Output",ExpressionUUID->"a260bed1-79f7-4cc3-b6cc-8dfc8ee617b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89205, 1533, 1708, 32, 45, "Input",ExpressionUUID->"572e1a06-a97c-44b8-b351-2c2af1c9c390"],
Cell[90916, 1567, 398, 9, 28, "Message",ExpressionUUID->"2b05dfee-1941-4249-8fa8-50dd19ee0ebb"],
Cell[91317, 1578, 10643, 257, 122, "Output",ExpressionUUID->"505a127d-f543-4ca0-967a-6c21c28d1dd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101997, 1840, 1698, 32, 45, "Input",ExpressionUUID->"284494aa-3831-46a8-9a64-3279189e8318"],
Cell[103698, 1874, 10419, 253, 122, "Output",ExpressionUUID->"6e473394-98f6-4fb5-9389-d980f189ec2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114154, 2132, 282, 6, 28, "Input",ExpressionUUID->"d0a1e188-3165-4d29-a77c-af3b58d2c8b8"],
Cell[114439, 2140, 10059, 245, 122, "Output",ExpressionUUID->"a8a4bb53-526a-4d3f-bce0-6f85c22daae8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124535, 2390, 321, 7, 43, "Input",ExpressionUUID->"a97f0154-7686-4c5b-9857-3f0283529abc"],
Cell[124859, 2399, 4491, 89, 362, "Output",ExpressionUUID->"ebed764b-05a2-40b5-8842-15d1554d70bc"]
}, Open  ]],
Cell[129365, 2491, 206, 3, 35, "Text",ExpressionUUID->"6280b5dc-d73c-4c62-a262-dde033a97908"],
Cell[CellGroupData[{
Cell[129596, 2498, 371, 10, 45, "Input",ExpressionUUID->"ef989a07-070a-48ad-b97e-57727c4d31ae"],
Cell[129970, 2510, 7450, 141, 239, "Output",ExpressionUUID->"8e469d08-364b-49e3-b82b-54baa846af4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137457, 2656, 606, 17, 45, "Input",ExpressionUUID->"299d11d1-2f6c-4c83-bf9f-30d9e66607ab"],
Cell[138066, 2675, 1406, 50, 60, "Output",ExpressionUUID->"d2888db6-1918-49f3-b1ff-e5906a2dc35e"]
}, Open  ]]
}, Open  ]]
}
]
*)

